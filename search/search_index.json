{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Stateless A community driven resource covering digital and distributed organizations and their governance, powered by Boardroom Screener Documentation Stateless Newsletter The Docs section, where you are now, is the core of EthHub. This documentation is open source and hosted on GitHub which means that anyone has the ability to contribute. The goal is to make sure the information is available, clear, concise, and up to date. If you're new to Ethereum, start at this guide . How to make changes to Stateless pages Head on over to the Github repo . Create a new Github account or login into your existing account Follow this great guide to learn how to make your first pull request Contribution Guidelines In the interest of keeping the content on Stateless looking uniform, we have set up a template that you can use when adding your own pages to the github repo. You can find the template here . There are also some basic guidelines that need to be followed when contributing to Stateless: All pages should have links to supporting sources/documentation and additional resources No marketing or sponsored posts No promotion of ICOs/token sales No inappropriate content Donations: 0xa19fcdad77c1f0fd184689aca88babcf68010347 DISCLAIMER: Nothing contained in this Github repository should be considered financial or investment advice - it is for informational purposes only.","title":"Home"},{"location":"#welcome-to-stateless","text":"A community driven resource covering digital and distributed organizations and their governance, powered by Boardroom Screener Documentation Stateless Newsletter The Docs section, where you are now, is the core of EthHub. This documentation is open source and hosted on GitHub which means that anyone has the ability to contribute. The goal is to make sure the information is available, clear, concise, and up to date. If you're new to Ethereum, start at this guide .","title":"Welcome to Stateless"},{"location":"#how-to-make-changes-to-stateless-pages","text":"Head on over to the Github repo . Create a new Github account or login into your existing account Follow this great guide to learn how to make your first pull request","title":"How to make changes to Stateless pages"},{"location":"#contribution-guidelines","text":"In the interest of keeping the content on Stateless looking uniform, we have set up a template that you can use when adding your own pages to the github repo. You can find the template here . There are also some basic guidelines that need to be followed when contributing to Stateless: All pages should have links to supporting sources/documentation and additional resources No marketing or sponsored posts No promotion of ICOs/token sales No inappropriate content Donations: 0xa19fcdad77c1f0fd184689aca88babcf68010347 DISCLAIMER: Nothing contained in this Github repository should be considered financial or investment advice - it is for informational purposes only.","title":"Contribution Guidelines"},{"location":"license/","text":"This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License .","title":"License"},{"location":"template/","text":"Please use this template as a guide when creating pages for EthHub. All pages use Markdown (cheat sheet here ) so be sure to use .md as the extension when creating the page file. Click here for an example of what a fully-fledged page looks like. [Template Begin] title: [Page Title] - Ethhub [Leave a blank line] description: [Meta description (155 characters recommended) [Leave a blank line] Page Heading [H1] Summary [H2] A summary of what the page is about. Features [H2] Main features. Sub-feature 1 [H3] Content for sub-feature 1. Sub-feature 2 [H3] Content for sub-feature 2. Resources [H2] Relevant resources like website, github link, blog posts etc go here [Template End]","title":"Template"},{"location":"template/#please-use-this-template-as-a-guide-when-creating-pages-for-ethhub-all-pages-use-markdown-cheat-sheet-here-so-be-sure-to-use-md-as-the-extension-when-creating-the-page-file","text":"","title":"Please use this template as a guide when creating pages for EthHub. All pages use Markdown (cheat sheet here) so be sure to use .md as the extension when creating the page file."},{"location":"template/#click-here-for-an-example-of-what-a-fully-fledged-page-looks-like","text":"","title":"Click here for an example of what a fully-fledged page looks like."},{"location":"template/#template-begin","text":"title: [Page Title] - Ethhub [Leave a blank line] description: [Meta description (155 characters recommended) [Leave a blank line]","title":"[Template Begin]"},{"location":"template/#page-heading-h1","text":"","title":"Page Heading [H1]"},{"location":"template/#summary-h2","text":"A summary of what the page is about.","title":"Summary [H2]"},{"location":"template/#features-h2","text":"Main features.","title":"Features [H2]"},{"location":"template/#sub-feature-1-h3","text":"Content for sub-feature 1.","title":"Sub-feature 1 [H3]"},{"location":"template/#sub-feature-2-h3","text":"Content for sub-feature 2.","title":"Sub-feature 2 [H3]"},{"location":"template/#resources-h2","text":"Relevant resources like website, github link, blog posts etc go here","title":"Resources [H2]"},{"location":"template/#template-end","text":"","title":"[Template End]"},{"location":"DAO-ecosystem/DAO-ecosystem/","text":"Built on Ethereum There are many different types of applications that can be built on Ethereum. Most applications today fall into the following categories. Decentralized Finance Decentralized finance refers to a number of decentralized protocols building open financial infrastructure. These protocols are valuable because they're creating the necessary plumbing to enable anyone in the world with an internet connection to access self-sovereign, censorship resistant financial services. Oracles Oracles refers to a protocols or services to connect Ethereum to offchain information. They can be utilized for querying information from the internet (e.g. API calls), information about other chains (e.g. BTC transactions), or even as dispute resolution mechanisms concerning non-native assets. Decentralized Exchanges Decentralized Exchanges allow for the trading of crypto assets without the need for a trusted central authority. This cuts down on the risk of exchange hacks and many other risks. There are many types of decentralized exchanges and it's important to understand the differences. Gaming Blockchain games are any games that include blockchain technology in its backend or mechanics in general. Collectibles Crypto collectibles are unique items that adhere to the ERC-721 standard. They can be collected and perhaps used across many different games and applications built on Ethereum. Marketplaces Marketplaces built on Ethereum allow for the trading of ERC-721 tokens such as crypto collectibles. Developer Tools A suite of developer tools allow for better standards and easy implementation of these standards across many different applications. Identity Identity is a very important aspect to the future of Ethereum. The Ethereum network hosts many DApps that are building identity systems. These DApps leverage the secure and decentralized nature of the Ethereum network often in collaboration with decentralized storage protocols such as IPFS or SWARM to enable empower and protect consumers' information. Citizens will be able to confidentionally reveal personal information such as Gov. ID, credit score, medical history, banking information, etc. to others in a way that also allows them to revoke future access to such information. Governance Given the decentralized nature of the protocol, it\u2019s important for some applications to have a way to govern their team, project or app. Infrastructure Building out basic infrastructure needs using Ethereum as a base layer. Token Curated Registries Token Curated Registries are registries of listings generated by token holders. Listings can be anything from names to hashes of full-blown records stored in IPFS. ERC Token Standards ERC Token Standards are technical documents used by smart contract developers at Ethereum. They define a set of rules required to implement tokens for the Ethereum ecosystem.","title":"DAO Ecosystem"},{"location":"DAO-ecosystem/DAO-ecosystem/#built-on-ethereum","text":"There are many different types of applications that can be built on Ethereum. Most applications today fall into the following categories.","title":"Built on Ethereum"},{"location":"DAO-ecosystem/DAO-ecosystem/#decentralized-finance","text":"Decentralized finance refers to a number of decentralized protocols building open financial infrastructure. These protocols are valuable because they're creating the necessary plumbing to enable anyone in the world with an internet connection to access self-sovereign, censorship resistant financial services.","title":"Decentralized Finance"},{"location":"DAO-ecosystem/DAO-ecosystem/#oracles","text":"Oracles refers to a protocols or services to connect Ethereum to offchain information. They can be utilized for querying information from the internet (e.g. API calls), information about other chains (e.g. BTC transactions), or even as dispute resolution mechanisms concerning non-native assets.","title":"Oracles"},{"location":"DAO-ecosystem/DAO-ecosystem/#decentralized-exchanges","text":"Decentralized Exchanges allow for the trading of crypto assets without the need for a trusted central authority. This cuts down on the risk of exchange hacks and many other risks. There are many types of decentralized exchanges and it's important to understand the differences.","title":"Decentralized Exchanges"},{"location":"DAO-ecosystem/DAO-ecosystem/#gaming","text":"Blockchain games are any games that include blockchain technology in its backend or mechanics in general.","title":"Gaming"},{"location":"DAO-ecosystem/DAO-ecosystem/#collectibles","text":"Crypto collectibles are unique items that adhere to the ERC-721 standard. They can be collected and perhaps used across many different games and applications built on Ethereum.","title":"Collectibles"},{"location":"DAO-ecosystem/DAO-ecosystem/#marketplaces","text":"Marketplaces built on Ethereum allow for the trading of ERC-721 tokens such as crypto collectibles.","title":"Marketplaces"},{"location":"DAO-ecosystem/DAO-ecosystem/#developer-tools","text":"A suite of developer tools allow for better standards and easy implementation of these standards across many different applications.","title":"Developer Tools"},{"location":"DAO-ecosystem/DAO-ecosystem/#identity","text":"Identity is a very important aspect to the future of Ethereum. The Ethereum network hosts many DApps that are building identity systems. These DApps leverage the secure and decentralized nature of the Ethereum network often in collaboration with decentralized storage protocols such as IPFS or SWARM to enable empower and protect consumers' information. Citizens will be able to confidentionally reveal personal information such as Gov. ID, credit score, medical history, banking information, etc. to others in a way that also allows them to revoke future access to such information.","title":"Identity"},{"location":"DAO-ecosystem/DAO-ecosystem/#governance","text":"Given the decentralized nature of the protocol, it\u2019s important for some applications to have a way to govern their team, project or app.","title":"Governance"},{"location":"DAO-ecosystem/DAO-ecosystem/#infrastructure","text":"Building out basic infrastructure needs using Ethereum as a base layer.","title":"Infrastructure"},{"location":"DAO-ecosystem/DAO-ecosystem/#token-curated-registries","text":"Token Curated Registries are registries of listings generated by token holders. Listings can be anything from names to hashes of full-blown records stored in IPFS.","title":"Token Curated Registries"},{"location":"DAO-ecosystem/DAO-ecosystem/#erc-token-standards","text":"ERC Token Standards are technical documents used by smart contract developers at Ethereum. They define a set of rules required to implement tokens for the Ethereum ecosystem.","title":"ERC Token Standards"},{"location":"DAO-ecosystem/collectibles/cryptopunks/","text":"CryptoPunks CryptoPunks are 10,000 unique collectible characters with proof of ownership stored on the Ethereum blockchain. No two are exactly alike, and each one of them can be officially owned by a single person on the Ethereum blockchain. The CryptoPunks are 24x24 pixel art images, generated algorithmically. Most are punky-looking guys and girls, but there are a few rarer types mixed in: Apes, Zombies and even the odd Alien. Every punk has their own profile page that shows their attributes as well as their ownership/for-sale status. Resources Website","title":"CryptoPunks - EthHub"},{"location":"DAO-ecosystem/collectibles/cryptopunks/#cryptopunks","text":"CryptoPunks are 10,000 unique collectible characters with proof of ownership stored on the Ethereum blockchain. No two are exactly alike, and each one of them can be officially owned by a single person on the Ethereum blockchain. The CryptoPunks are 24x24 pixel art images, generated algorithmically. Most are punky-looking guys and girls, but there are a few rarer types mixed in: Apes, Zombies and even the odd Alien. Every punk has their own profile page that shows their attributes as well as their ownership/for-sale status.","title":"CryptoPunks"},{"location":"DAO-ecosystem/collectibles/cryptopunks/#resources","text":"Website","title":"Resources"},{"location":"DAO-ecosystem/protocols/what-is-open-finance/","text":"Decentralized Finance Summary Decentralized Finance (a.k.a. \"DeFi\" or \"Open Finance\") refers to a number of decentralized protocols building open financial infrastructure. These protocols are valuable because they're creating the necessary plumbing to enable anyone in the world with an internet connection to access self-sovereign, censorship resistant financial services. In the existing system, all financial services are controlled by a central party. Whether it's basic money transfers, asset purchases, or lending, you must go through an intermediary who charges rent for mediating financial transactions. Ethereum-based financial services, on the other hand, connect individuals peer-to-peer and allow them to access basic financing more easily and affordably. How is all this possible? A big reason the financial services industry is as bloated as it is today is because financial transactions in the digital realm are not secure. We have no method of trusting our online counterparties so we pay fees to financial institutions who enforce that trust. Ethereum leverages the same principles that create 'digital trust' within Bitcoin, and applies to them to smart contracts, self-executing pieces of code that execute business logic after some predefined conditions are met. Smart contracts look a lot like financial contracts in that they escrow funds and transfer them around in response to certain events. This system is superior because the encoded business logic can't be manipulated by a central party once its deployed to the Ethereum mainnet. Blockchain based financial services are superior to their centralized counterparts across the following primary features: Permissionless : An internet connection is all you need to access these services Censorship Resistance : No central party is able to reverse the order of transactions and turn off the service Trustless : Users don't have to trust a central party to ensure that transactions are valid Transparent : Public blockchains like Ethereum are completely transparent and auditable Programmable : Developers can create and intertwine financial services at a very low cost Efficiency : Open financial services are powered by code, not humans, and as such entail much lower middleman costs, if at all Decentralized Finance is generally broken up into the following categories: Asset Exchange Credit Scoring Insurance Indexing/Baskets Lending Derivatives Stablecoins Smart Securities Prediction Markets Open Source Banking Applications Resources Decentralized Finance dApps on Ethereum","title":"Governance Frameworks"},{"location":"DAO-ecosystem/protocols/what-is-open-finance/#decentralized-finance","text":"","title":"Decentralized Finance"},{"location":"DAO-ecosystem/protocols/what-is-open-finance/#summary","text":"Decentralized Finance (a.k.a. \"DeFi\" or \"Open Finance\") refers to a number of decentralized protocols building open financial infrastructure. These protocols are valuable because they're creating the necessary plumbing to enable anyone in the world with an internet connection to access self-sovereign, censorship resistant financial services. In the existing system, all financial services are controlled by a central party. Whether it's basic money transfers, asset purchases, or lending, you must go through an intermediary who charges rent for mediating financial transactions. Ethereum-based financial services, on the other hand, connect individuals peer-to-peer and allow them to access basic financing more easily and affordably.","title":"Summary"},{"location":"DAO-ecosystem/protocols/what-is-open-finance/#how-is-all-this-possible","text":"A big reason the financial services industry is as bloated as it is today is because financial transactions in the digital realm are not secure. We have no method of trusting our online counterparties so we pay fees to financial institutions who enforce that trust. Ethereum leverages the same principles that create 'digital trust' within Bitcoin, and applies to them to smart contracts, self-executing pieces of code that execute business logic after some predefined conditions are met. Smart contracts look a lot like financial contracts in that they escrow funds and transfer them around in response to certain events. This system is superior because the encoded business logic can't be manipulated by a central party once its deployed to the Ethereum mainnet.","title":"How is all this possible?"},{"location":"DAO-ecosystem/protocols/what-is-open-finance/#blockchain-based-financial-services-are-superior-to-their-centralized-counterparts-across-the-following-primary-features","text":"Permissionless : An internet connection is all you need to access these services Censorship Resistance : No central party is able to reverse the order of transactions and turn off the service Trustless : Users don't have to trust a central party to ensure that transactions are valid Transparent : Public blockchains like Ethereum are completely transparent and auditable Programmable : Developers can create and intertwine financial services at a very low cost Efficiency : Open financial services are powered by code, not humans, and as such entail much lower middleman costs, if at all","title":"Blockchain based financial services are superior to their centralized counterparts across the following primary features:"},{"location":"DAO-ecosystem/protocols/what-is-open-finance/#decentralized-finance-is-generally-broken-up-into-the-following-categories","text":"Asset Exchange Credit Scoring Insurance Indexing/Baskets Lending Derivatives Stablecoins Smart Securities Prediction Markets Open Source Banking Applications","title":"Decentralized Finance is generally broken up into the following categories:"},{"location":"DAO-ecosystem/protocols/what-is-open-finance/#resources","text":"Decentralized Finance dApps on Ethereum","title":"Resources"},{"location":"DAO-ecosystem/protocols/stablecoins/dai/","text":"Dai Summary Dai is an asset-backed stable currency created by the Maker Decentralized Autonomous Organization (MakerDAO). The Dai Stablecoin system maintains the stable value of Dai by ensuring that each Dai is always backed by a collateralized asset of more value. Single collateral Dai requires that each Dai is backed by at least 150% Ether. If at anytime, the amount of collateral backing Dai falls below 150%, \"watchers\" (community run bots) will call functions within the MakerDAO smart contracts that trigger liquidation of enough collateral to payback the debt. MakerDAO is one of the earliest projects in the Ethereum ecosystem. Importance Crypto assets are known for their high volatility which renders them unsuitable for medium of exchange. A stable cryptocurrency strives to become a medium of exchange by suppressing volatility and maintaining a consistant value through time. This innovation allows for individuals and business to enter into future agreements at a known cost. Just as one US Dollar today is equal to one dollar tomorrow, people can transact knowing they will have a certain fixed cost. Accomplishments The Dai Stablecoin System has been operating in Beta mode since December 2017. The Beta mode allows for a single collateral type, Ether. During the period of Dececember 2017 - December 2018, the price of Ether fell over 93% while Dai remained stable and over-collateralized throughout. Next Multi-Collateral Dai is the next and full version of the Dai Stablecoin System. In this system, all ERC-20 tokens are capable of being used as collateral for Dai. MakerDAO token (MKR) holders will be responsible for voting in and setting risk parameters for each collateral type. The scope of collateral types are as wide as tokens issued on the Ethereum platform. Resources Website CDP Interface Reddit Twitter Chat Podcasts Epicenter","title":"Dai - EthHub"},{"location":"DAO-ecosystem/protocols/stablecoins/dai/#dai","text":"","title":"Dai"},{"location":"DAO-ecosystem/protocols/stablecoins/dai/#summary","text":"Dai is an asset-backed stable currency created by the Maker Decentralized Autonomous Organization (MakerDAO). The Dai Stablecoin system maintains the stable value of Dai by ensuring that each Dai is always backed by a collateralized asset of more value. Single collateral Dai requires that each Dai is backed by at least 150% Ether. If at anytime, the amount of collateral backing Dai falls below 150%, \"watchers\" (community run bots) will call functions within the MakerDAO smart contracts that trigger liquidation of enough collateral to payback the debt. MakerDAO is one of the earliest projects in the Ethereum ecosystem.","title":"Summary"},{"location":"DAO-ecosystem/protocols/stablecoins/dai/#importance","text":"Crypto assets are known for their high volatility which renders them unsuitable for medium of exchange. A stable cryptocurrency strives to become a medium of exchange by suppressing volatility and maintaining a consistant value through time. This innovation allows for individuals and business to enter into future agreements at a known cost. Just as one US Dollar today is equal to one dollar tomorrow, people can transact knowing they will have a certain fixed cost.","title":"Importance"},{"location":"DAO-ecosystem/protocols/stablecoins/dai/#accomplishments","text":"The Dai Stablecoin System has been operating in Beta mode since December 2017. The Beta mode allows for a single collateral type, Ether. During the period of Dececember 2017 - December 2018, the price of Ether fell over 93% while Dai remained stable and over-collateralized throughout.","title":"Accomplishments"},{"location":"DAO-ecosystem/protocols/stablecoins/dai/#next","text":"Multi-Collateral Dai is the next and full version of the Dai Stablecoin System. In this system, all ERC-20 tokens are capable of being used as collateral for Dai. MakerDAO token (MKR) holders will be responsible for voting in and setting risk parameters for each collateral type. The scope of collateral types are as wide as tokens issued on the Ethereum platform.","title":"Next"},{"location":"DAO-ecosystem/protocols/stablecoins/dai/#resources","text":"Website CDP Interface Reddit Twitter Chat","title":"Resources"},{"location":"DAO-ecosystem/protocols/stablecoins/dai/#podcasts","text":"Epicenter","title":"Podcasts"},{"location":"DAO-ecosystem/protocols/stablecoins/gusd/","text":"Gemini Dollar Summary On September 10, 2018, Gemini announced that it would released an ERC20 token pegged to the US Dollar called GUSD. Gemini users are able to convert US Dollars in their Gemini accounts into GUSD. However, the U.S dollars that correspond to the Gemini dollars issued and in circulation will be held at a bank located in the United States and eligible for FDIC \u201cpass-through\u201d deposit insurance, subject to applicable limitations. Risk of Frozen or Blacklisted Accounts To comply with regulations, GUSD uses an ERC20Proxy contract that gives Gemini, as the custodian, the ability to upgrade the contract once every 48 hours. Gemini included a mechanism in GUSD which would allow them to freeze user's funds. Auditing Process U.S. dollars that correspond to the Gemini dollars issued and in circulation are held at State Street Bank and Trust Company. The U.S. dollar deposit balance of Gemini's account is examined monthly by BPM, LLP, a registered public accounting firm, in order to verify the 1:1 peg. All Independent Accountants' Reports are published and available here: https://gemini.com/dollar/#reports Resources Website Whitepaper Smart Contract Adddress","title":"Gemini Dollar - EthHub"},{"location":"DAO-ecosystem/protocols/stablecoins/gusd/#gemini-dollar","text":"","title":"Gemini Dollar"},{"location":"DAO-ecosystem/protocols/stablecoins/gusd/#summary","text":"On September 10, 2018, Gemini announced that it would released an ERC20 token pegged to the US Dollar called GUSD. Gemini users are able to convert US Dollars in their Gemini accounts into GUSD. However, the U.S dollars that correspond to the Gemini dollars issued and in circulation will be held at a bank located in the United States and eligible for FDIC \u201cpass-through\u201d deposit insurance, subject to applicable limitations.","title":"Summary"},{"location":"DAO-ecosystem/protocols/stablecoins/gusd/#risk-of-frozen-or-blacklisted-accounts","text":"To comply with regulations, GUSD uses an ERC20Proxy contract that gives Gemini, as the custodian, the ability to upgrade the contract once every 48 hours. Gemini included a mechanism in GUSD which would allow them to freeze user's funds.","title":"Risk of Frozen or Blacklisted Accounts"},{"location":"DAO-ecosystem/protocols/stablecoins/gusd/#auditing-process","text":"U.S. dollars that correspond to the Gemini dollars issued and in circulation are held at State Street Bank and Trust Company. The U.S. dollar deposit balance of Gemini's account is examined monthly by BPM, LLP, a registered public accounting firm, in order to verify the 1:1 peg. All Independent Accountants' Reports are published and available here: https://gemini.com/dollar/#reports","title":"Auditing Process"},{"location":"DAO-ecosystem/protocols/stablecoins/gusd/#resources","text":"Website Whitepaper Smart Contract Adddress","title":"Resources"},{"location":"DAO-ecosystem/protocols/stablecoins/paxos/","text":"Paxos Standard Summary Paxos is a Trust company, regulated by the New York State Department of Financial Services, with deep experience as an intermediary between fiat and digital assets. Paxos Standard is the first digital asset issued by a financial institution, and is fully collateralized by USD. PAX will always be redeemable one-to-one with USD (1 PAX = $1 USD), providing a stable and common currency for digital transactions. Resources Website","title":"Paxos - EthHub"},{"location":"DAO-ecosystem/protocols/stablecoins/paxos/#paxos-standard","text":"","title":"Paxos Standard"},{"location":"DAO-ecosystem/protocols/stablecoins/paxos/#summary","text":"Paxos is a Trust company, regulated by the New York State Department of Financial Services, with deep experience as an intermediary between fiat and digital assets. Paxos Standard is the first digital asset issued by a financial institution, and is fully collateralized by USD. PAX will always be redeemable one-to-one with USD (1 PAX = $1 USD), providing a stable and common currency for digital transactions.","title":"Summary"},{"location":"DAO-ecosystem/protocols/stablecoins/paxos/#resources","text":"Website","title":"Resources"},{"location":"DAO-ecosystem/protocols/stablecoins/tether/","text":"Tether Summary Launched in 2014, Tether is a blockchain-enabled platform designed to facilitate the use of fiat currencies in a digital manner. Tether works to disrupt the conventional financial system via a more modern approach to money. Tether has made headway by giving customers the ability to transact with traditional currencies across the blockchain, without the inherent volatility and complexity typically associated with a digital currency. How does Tether work? Tethers exists on blockchains using the Omni Protocol and as ERC20 tokens. These transport protocols consist of open source software that interface with blockchains to allow for the issuance and redemption of cryptocurrency tokens \u201ctethers\u201d. Tether Platform currencies are 100% backed by actual fiat currency assets in a reserve bank account. Tethers are redeemable and exchangeable pursuant to Tether Limited\u2019s terms of service. The conversion rate is 1 tether USD\u20ae equals 1 USD. Controversy A blockchain critic has raised questions about the relationship between Bitfinex and Tether, accusing Bitfinex of creating \"magic Tethers out of thin air\". In September 2017, Tether published a memorandum from a public accounting firm that Tether Limited then said showed that tethers were fully backed by US dollars; however, according to the New York Times, independent attorney Lewis Cohen stated the document, because of the careful way it was phrased, does not prove that the Tether coins are backed by dollars\". The documents also fail to ascertain whether the balances in question are otherwise encumbered.\". The accounting firm specifically stated that this information is intended solely to assist the management of Tether Limited ... and is not intended to be, and should not be, used or relied upon by any other party. During the course of a price manipulation investigation by the U.S. Commodity Futures Trading Commission and the United States Department of Justice, Phil Potter, Chief Strategy Officer of Bitfinex and an executive of Tether Limited, departed Bitfinex in 2018. The investigation was continuing on November 20, 2018 and focusing on Tether and Bitfinex, according to Bloomberg. Resources Website","title":"Tether - EthHub"},{"location":"DAO-ecosystem/protocols/stablecoins/tether/#tether","text":"","title":"Tether"},{"location":"DAO-ecosystem/protocols/stablecoins/tether/#summary","text":"Launched in 2014, Tether is a blockchain-enabled platform designed to facilitate the use of fiat currencies in a digital manner. Tether works to disrupt the conventional financial system via a more modern approach to money. Tether has made headway by giving customers the ability to transact with traditional currencies across the blockchain, without the inherent volatility and complexity typically associated with a digital currency.","title":"Summary"},{"location":"DAO-ecosystem/protocols/stablecoins/tether/#how-does-tether-work","text":"Tethers exists on blockchains using the Omni Protocol and as ERC20 tokens. These transport protocols consist of open source software that interface with blockchains to allow for the issuance and redemption of cryptocurrency tokens \u201ctethers\u201d. Tether Platform currencies are 100% backed by actual fiat currency assets in a reserve bank account. Tethers are redeemable and exchangeable pursuant to Tether Limited\u2019s terms of service. The conversion rate is 1 tether USD\u20ae equals 1 USD.","title":"How does Tether work?"},{"location":"DAO-ecosystem/protocols/stablecoins/tether/#controversy","text":"A blockchain critic has raised questions about the relationship between Bitfinex and Tether, accusing Bitfinex of creating \"magic Tethers out of thin air\". In September 2017, Tether published a memorandum from a public accounting firm that Tether Limited then said showed that tethers were fully backed by US dollars; however, according to the New York Times, independent attorney Lewis Cohen stated the document, because of the careful way it was phrased, does not prove that the Tether coins are backed by dollars\". The documents also fail to ascertain whether the balances in question are otherwise encumbered.\". The accounting firm specifically stated that this information is intended solely to assist the management of Tether Limited ... and is not intended to be, and should not be, used or relied upon by any other party. During the course of a price manipulation investigation by the U.S. Commodity Futures Trading Commission and the United States Department of Justice, Phil Potter, Chief Strategy Officer of Bitfinex and an executive of Tether Limited, departed Bitfinex in 2018. The investigation was continuing on November 20, 2018 and focusing on Tether and Bitfinex, according to Bloomberg.","title":"Controversy"},{"location":"DAO-ecosystem/protocols/stablecoins/tether/#resources","text":"Website","title":"Resources"},{"location":"DAO-ecosystem/protocols/stablecoins/trueusd/","text":"True USD Summary TrueUSD (TUSD) is a stablecoin that you can redeem 1-for-1 for US dollars. TUSD is the first asset token created on the TrustToken Platform. Resources Website","title":"True USD - EthHub"},{"location":"DAO-ecosystem/protocols/stablecoins/trueusd/#true-usd","text":"","title":"True USD"},{"location":"DAO-ecosystem/protocols/stablecoins/trueusd/#summary","text":"TrueUSD (TUSD) is a stablecoin that you can redeem 1-for-1 for US dollars. TUSD is the first asset token created on the TrustToken Platform.","title":"Summary"},{"location":"DAO-ecosystem/protocols/stablecoins/trueusd/#resources","text":"Website","title":"Resources"},{"location":"DAO-ecosystem/protocols/stablecoins/usdc/","text":"USD Coin Summary USD Coin (USDC) is an currency-backed stablecoin created by Centre which was founded by Circle and Coinbase. The initial implementation is an ERC-20 token that creates possibilities in payments, lending, investing, trading and trade finance. Individuals and institutions can deposit US dollars from bank accounts, convert those dollars into tokens usable everywhere the internet reaches (subject to the token\u2019s compliance controls), and redeem USDC tokens and cash out to bank accounts. USD Coin is supported by many wallets, exchanges and software applications. Resources Website Blog","title":"USD Coin - EthHub"},{"location":"DAO-ecosystem/protocols/stablecoins/usdc/#usd-coin","text":"","title":"USD Coin"},{"location":"DAO-ecosystem/protocols/stablecoins/usdc/#summary","text":"USD Coin (USDC) is an currency-backed stablecoin created by Centre which was founded by Circle and Coinbase. The initial implementation is an ERC-20 token that creates possibilities in payments, lending, investing, trading and trade finance. Individuals and institutions can deposit US dollars from bank accounts, convert those dollars into tokens usable everywhere the internet reaches (subject to the token\u2019s compliance controls), and redeem USDC tokens and cash out to bank accounts. USD Coin is supported by many wallets, exchanges and software applications.","title":"Summary"},{"location":"DAO-ecosystem/protocols/stablecoins/usdc/#resources","text":"Website Blog","title":"Resources"},{"location":"DAO-ecosystem/protocols/stablecoins/what-are-stablecoins/","text":"Stablecoins What are Stablecoins? A useful currency should be a medium of exchange, a unit of account, and a store of value. Cryptocurrencies excel at the first, but as a store of value or unit of account, they\u2019re pretty bad. You cannot be an effective store of value if your price fluctuates by 20% on a normal day. Stablecoins are cryptocurrencies designed to minimize the effects of price volatility, thus they seek to function as a store of value and a unit of account. To minimize volatility the value of a stablecoin can be pegged to a currency, or to exchange traded commodities (such as precious metals or industrial metals). Stablecoins backed by currencies or commodities directly are said to be centralized, whereas those leveraging other cryptocurrencies are referred to as decentralized. Types of Stablecoins Currency-backed Cryptocurrencies backed by currency (fiat) are the most common and were the first type of stablecoins on the market. Their characteristics are: Their value is pegged to one or more currencies (most commonly the US dollar, also the Euro and the Swiss franc). The peg is realized off-chain, through banks or other types of regulated financial institutions which serve as depositaries of the currency used to back the stablecoin. The amount of the currency used for backing of the stablecoin has to reflect the circulating supply of the stablecoin. Notable currency-backed stablecoins: Gemini Dollar USD Coin Tether TrueUSD Paxos Standard Collateralized (crypto-backed) Cryptocurrency backed stablecoins are issued with cryptocurrencies as collateral, which is conceptually similar to fiat-backed stablecoins. However, the significant difference between the two designs is that while fiat collateralization typically happens off the blockchain, the cryptocurrency or crypto asset used to back this type of stablecoins is done on the blockchain, using smart contracts in a more decentralized fashion. For example, MakerDAO's DAI stablecoin is generated when someone opens a collateralized debt position (CDP), deposits some ETH as collateral, and then withdraws DAI from their CDP. The ETH acts as collateral. Notable collateral-backed stablecoins: MakerDAO - DAI Bitshares - BitUSD Synthetix - SUSD Seigniorage (algorithmic) Seigniorage (or algorithmic) stablecoins can be linked to a decentralized autonomous organization which controls issuance and pricing. The supply of algorithmic stablecoins is typically controlled by issuing and destroying coins depending on the market demand, until the target price is reached. In the general case, market participants are incentivized to act in a way that the price is kept at target level by issuing either bonds, in times of decreasing price or seigniorage shares when the price is above target. Notable algorithmic stablecoins: Basis (project was cancelled) Ampleforth Tethered (sub-type of algorithmic) Tethered cryptocurrency assets have certain features of algorithmic stablecoins \u2013 and can be considered their sub-type, except they don\u2019t offer incentives in form of separate instruments (bonds or shares) to holders of the \u201cunderlying\u201d cryptocurrency and there is no governing algorithm that forces the price towards the target, except at the moment of creation of the asset. Tethered cryptocurrency assets are issued on-chain, by holders of the native cryptocurrency, with different pegs chosen by the issuer. The peg value is imported into the blockchain by consensus and can be a number of fiat currencies and exchange-traded commodities (e.g. USD, EUR, gold, silver, etc). Resources https://www.tokendaily.co/blog/a-taxonomy-of-stablecoins https://stablecoinindex.com https://en.wikipedia.org/wiki/Stablecoin","title":"Stablecoins on Ethereum - EthHub"},{"location":"DAO-ecosystem/protocols/stablecoins/what-are-stablecoins/#stablecoins","text":"","title":"Stablecoins"},{"location":"DAO-ecosystem/protocols/stablecoins/what-are-stablecoins/#what-are-stablecoins","text":"A useful currency should be a medium of exchange, a unit of account, and a store of value. Cryptocurrencies excel at the first, but as a store of value or unit of account, they\u2019re pretty bad. You cannot be an effective store of value if your price fluctuates by 20% on a normal day. Stablecoins are cryptocurrencies designed to minimize the effects of price volatility, thus they seek to function as a store of value and a unit of account. To minimize volatility the value of a stablecoin can be pegged to a currency, or to exchange traded commodities (such as precious metals or industrial metals). Stablecoins backed by currencies or commodities directly are said to be centralized, whereas those leveraging other cryptocurrencies are referred to as decentralized.","title":"What are Stablecoins?"},{"location":"DAO-ecosystem/protocols/stablecoins/what-are-stablecoins/#types-of-stablecoins","text":"","title":"Types of Stablecoins"},{"location":"DAO-ecosystem/protocols/stablecoins/what-are-stablecoins/#currency-backed","text":"Cryptocurrencies backed by currency (fiat) are the most common and were the first type of stablecoins on the market. Their characteristics are: Their value is pegged to one or more currencies (most commonly the US dollar, also the Euro and the Swiss franc). The peg is realized off-chain, through banks or other types of regulated financial institutions which serve as depositaries of the currency used to back the stablecoin. The amount of the currency used for backing of the stablecoin has to reflect the circulating supply of the stablecoin.","title":"Currency-backed"},{"location":"DAO-ecosystem/protocols/stablecoins/what-are-stablecoins/#notable-currency-backed-stablecoins","text":"Gemini Dollar USD Coin Tether TrueUSD Paxos Standard","title":"Notable currency-backed stablecoins:"},{"location":"DAO-ecosystem/protocols/stablecoins/what-are-stablecoins/#collateralized-crypto-backed","text":"Cryptocurrency backed stablecoins are issued with cryptocurrencies as collateral, which is conceptually similar to fiat-backed stablecoins. However, the significant difference between the two designs is that while fiat collateralization typically happens off the blockchain, the cryptocurrency or crypto asset used to back this type of stablecoins is done on the blockchain, using smart contracts in a more decentralized fashion. For example, MakerDAO's DAI stablecoin is generated when someone opens a collateralized debt position (CDP), deposits some ETH as collateral, and then withdraws DAI from their CDP. The ETH acts as collateral.","title":"Collateralized (crypto-backed)"},{"location":"DAO-ecosystem/protocols/stablecoins/what-are-stablecoins/#notable-collateral-backed-stablecoins","text":"MakerDAO - DAI Bitshares - BitUSD Synthetix - SUSD","title":"Notable collateral-backed stablecoins:"},{"location":"DAO-ecosystem/protocols/stablecoins/what-are-stablecoins/#seigniorage-algorithmic","text":"Seigniorage (or algorithmic) stablecoins can be linked to a decentralized autonomous organization which controls issuance and pricing. The supply of algorithmic stablecoins is typically controlled by issuing and destroying coins depending on the market demand, until the target price is reached. In the general case, market participants are incentivized to act in a way that the price is kept at target level by issuing either bonds, in times of decreasing price or seigniorage shares when the price is above target.","title":"Seigniorage (algorithmic)"},{"location":"DAO-ecosystem/protocols/stablecoins/what-are-stablecoins/#notable-algorithmic-stablecoins","text":"Basis (project was cancelled) Ampleforth","title":"Notable algorithmic stablecoins:"},{"location":"DAO-ecosystem/protocols/stablecoins/what-are-stablecoins/#tethered-sub-type-of-algorithmic","text":"Tethered cryptocurrency assets have certain features of algorithmic stablecoins \u2013 and can be considered their sub-type, except they don\u2019t offer incentives in form of separate instruments (bonds or shares) to holders of the \u201cunderlying\u201d cryptocurrency and there is no governing algorithm that forces the price towards the target, except at the moment of creation of the asset. Tethered cryptocurrency assets are issued on-chain, by holders of the native cryptocurrency, with different pegs chosen by the issuer. The peg value is imported into the blockchain by consensus and can be a number of fiat currencies and exchange-traded commodities (e.g. USD, EUR, gold, silver, etc).","title":"Tethered (sub-type of algorithmic)"},{"location":"DAO-ecosystem/protocols/stablecoins/what-are-stablecoins/#resources","text":"https://www.tokendaily.co/blog/a-taxonomy-of-stablecoins https://stablecoinindex.com https://en.wikipedia.org/wiki/Stablecoin","title":"Resources"},{"location":"DAO-tooling/how-to-buy-ether/","text":"How to Buy Ether (ETH) In order to interact with the Ethereum network, you will need to own ether (ETH). Unless you are mining, the only way to acquire ETH is from someone that already owns it. Below is a list of cryptocurrency exchanges where you can acquire ETH with fiat or cryptocurrencies. It is highly recommended to store the ETH you own in a hardware wallet ! Binance Binance is headquartered in Malta and constantly has some of the highest trading volume. Users can buy ETH with fiat or cryptocurrencies. Buy ETH on Binance Coinbase Coinbase is based in San Francisco and is one of the most reputable and well known exchanges in the world. Users can buy ETH with fiat or cryptocurrencies. Buy ETH on Coinbase Gemini Gemini is based in New York and has a great history of security and reliability. Users can buy ETH with fiat or cryptocurrencies. Buy ETH on Gemini Kraken Kraken is a great option for those living in Canada, Europe, and the United States, and supports accounts for users from other countries as well. Users can buy ETH with any of the supported fiat or cryptocurrencies . Buy ETH on Kraken LocalCryptos LocalCryptos is a global, p2p marketplace for buying and selling ETH. Over 30 payment methods are supported including in-person cash trades. Buy ETH on LocalCryptos","title":"How to Buy Ether"},{"location":"DAO-tooling/how-to-buy-ether/#how-to-buy-ether-eth","text":"In order to interact with the Ethereum network, you will need to own ether (ETH). Unless you are mining, the only way to acquire ETH is from someone that already owns it. Below is a list of cryptocurrency exchanges where you can acquire ETH with fiat or cryptocurrencies. It is highly recommended to store the ETH you own in a hardware wallet !","title":"How to Buy Ether (ETH)"},{"location":"DAO-tooling/how-to-buy-ether/#binance","text":"Binance is headquartered in Malta and constantly has some of the highest trading volume. Users can buy ETH with fiat or cryptocurrencies. Buy ETH on Binance","title":"Binance"},{"location":"DAO-tooling/how-to-buy-ether/#coinbase","text":"Coinbase is based in San Francisco and is one of the most reputable and well known exchanges in the world. Users can buy ETH with fiat or cryptocurrencies. Buy ETH on Coinbase","title":"Coinbase"},{"location":"DAO-tooling/how-to-buy-ether/#gemini","text":"Gemini is based in New York and has a great history of security and reliability. Users can buy ETH with fiat or cryptocurrencies. Buy ETH on Gemini","title":"Gemini"},{"location":"DAO-tooling/how-to-buy-ether/#kraken","text":"Kraken is a great option for those living in Canada, Europe, and the United States, and supports accounts for users from other countries as well. Users can buy ETH with any of the supported fiat or cryptocurrencies . Buy ETH on Kraken","title":"Kraken"},{"location":"DAO-tooling/how-to-buy-ether/#localcryptos","text":"LocalCryptos is a global, p2p marketplace for buying and selling ETH. Over 30 payment methods are supported including in-person cash trades. Buy ETH on LocalCryptos","title":"LocalCryptos"},{"location":"DAO-tooling/running-an-ethereum-node/","text":"Running an Ethereum Node Summary Anyone is able to run an Ethereum node on their computer. This means that you can participate in validating transactions and blocks on the Ethereum blockchain. The two most common clients for running nodes are Geth and OpenEthereum . Depending on the type of node run and the hardware specifications of the system, the initial syncronization time and storage requirements vary. For information related to the current Full Node chaindata and state storage size check out: https://etherscan.io/chartsync/chaindefault For an easy guide on running your own node, please see this blog post . Below are the different types of nodes a user can run, their settings, and what they mean. Full nodes A full node: Stores the full blockchain data available on disk and can serve the network with any data on request. Receives new transactions and blocks while participating in block validation. Verifies all blocks and states. Stores recent state only for more efficient initial sync. All state can be derived from a full node. Once fully synced, stores all state moving forward similar to archive nodes (more below). Client settings geth The default sync mode. Synchronizes a full node doing a fast synchronization by downloading the entire state database, requesting the headers first, and filling in block bodies and receipts afterward. Once the fast sync reaches the best block of the Ethereum network, it switches to full sync mode. geth --syncmode full Synchronizes a full node starting at genesis, verifying all blocks and executing all transactions. This mode is a bit slower than the fast sync mode but comes with increased security. ./Nethermind.Runner --config mainnet The default sync mode . Synchronizes a full node doing a fast synchronization by downloading the entire state database, requesting the headers first, and optionally filling in block bodies and receipts. Once the fast sync reaches the best block of the Ethereum network, it switches to full sync mode. openethereum The default sync mode. Synchronizes a full Ethereum node using warp synchronization mode by downloading a snapshot of the 30,000 best blocks and the latest state database. Once the snapshot is restored, the client switches to full sync and ancient blocks are synchronized from the network in background. A openethereum default node serves the network as a full node after it has finished synchronizing. besu Besu's default sync mode is with fastsync enabled. This setting reduces sync time considerably compared to full sync. besu --pruning-enabled=true This setting enables pruning in order to reduce storage required for the world state. Pruning removes state trie nodes that aren\u2019t required. Light nodes A light node: Stores the header chain and requests everything else on demand. Can verify the validity of the data against the state roots in the block headers. Light nodes are useful for low capacity devices, such as embedded devices or mobile phones, which can't afford to store multiple dozen Gigabytes of blockchain data. Client settings geth --syncmode light Waits for around 200 seconds before beginning to sync from 2,300 blocks in the past, then periodically receives small bundles of 1 to 10 blocks. The initial sync takes very little time. Archive Nodes An archive node: Stores everything kept in the full node. Also builds an archive of historical states. Archive nodes are only necessary if you want to check the state of an account at any given block height. For example, if you wanted to know the Ether balance an account had at block #4,000,000, you would need to run and query an archive node. They are commonly only used for services such as block explorers and infrastructure providers like Infura. They are use case dependent and have no impact on the security or trust model of the blockchain. Client Settings geth --syncmode full --gcmode archive --txlookuplimit=0 --cache.preimages Synchronizes an archive node starting at genesis, thoroughly verifying all blocks, executing all transactions, and writing all intermediate states to disk (\"archive\"). In Geth, this is called gcmode which refers to the concept of garbage collection . Setting it to archive basically turns it off. ./Nethermind.Runner --config mainnet_archive Synchronizes a full node starting at genesis, verifying all blocks and executing all transactions. This mode is much slower than the fast sync mode but comes with increased security. openethereum --pruning=\"archive\" --no-warp Pruning is enabled by default, setting it to archive while turning off warp will build all historical data from genesis. besu --sync-mode=FULL To run an archive node, enable full synchronization using --sync-mode=FULL, which by default also disables pruning (--pruning-enabled=false). Hardware A consumer-grade laptop will be enough to run a full node, but not an archive node. An archive node does need 2+ TB of disk space, and that disk space cannot be HDD - it must be SSD for both full and archive nodes. Light nodes run fine on SD cards and HDDs. If a full node goes offline for a while, its data can get corrupted and it can take a while to restore it. For best results, if running your own node, run it on an always-on always-connected device for minimal downtime and maximum reliability. This can be impossible on a laptop and expensive on a desktop PC (500W+) so it's better to use a device that's cheap to build and replace and almost free to run. A Raspberry Pi is enough for light nodes while a full node will run fine on an ARM micro computer. Check out pre-synced pre-built devices by Ava.do , and DAppNode . Warning: never plug into your LAN anything you cannot thoroughly inspect and verify. You might be subjecting yourself to DNS hijacking or cryptojacking without knowing it. If the hardware and software aren't open source (at least the assembly part), they aren't safe to use. Resources Spin up your own Ethereum node Running Ethereum Full Nodes: A Complete Guide Huge shout out and thanks to Afri Schoedon's blogs here and here which is where a lot of the information on this page came from. Run an Ethereum Node on Debian Dispelling Myths About Ethereum's Disk Space What Comprises an Ethereum Fullnode Implementation? Running an Ethereum Full Node on a RaspberryPi 4 Getting started with Nethermind","title":"Running an Ethereum Node - EthHub"},{"location":"DAO-tooling/running-an-ethereum-node/#running-an-ethereum-node","text":"","title":"Running an Ethereum Node"},{"location":"DAO-tooling/running-an-ethereum-node/#summary","text":"Anyone is able to run an Ethereum node on their computer. This means that you can participate in validating transactions and blocks on the Ethereum blockchain. The two most common clients for running nodes are Geth and OpenEthereum . Depending on the type of node run and the hardware specifications of the system, the initial syncronization time and storage requirements vary. For information related to the current Full Node chaindata and state storage size check out: https://etherscan.io/chartsync/chaindefault For an easy guide on running your own node, please see this blog post . Below are the different types of nodes a user can run, their settings, and what they mean.","title":"Summary"},{"location":"DAO-tooling/running-an-ethereum-node/#full-nodes","text":"A full node: Stores the full blockchain data available on disk and can serve the network with any data on request. Receives new transactions and blocks while participating in block validation. Verifies all blocks and states. Stores recent state only for more efficient initial sync. All state can be derived from a full node. Once fully synced, stores all state moving forward similar to archive nodes (more below).","title":"Full nodes"},{"location":"DAO-tooling/running-an-ethereum-node/#client-settings","text":"geth The default sync mode. Synchronizes a full node doing a fast synchronization by downloading the entire state database, requesting the headers first, and filling in block bodies and receipts afterward. Once the fast sync reaches the best block of the Ethereum network, it switches to full sync mode. geth --syncmode full Synchronizes a full node starting at genesis, verifying all blocks and executing all transactions. This mode is a bit slower than the fast sync mode but comes with increased security. ./Nethermind.Runner --config mainnet The default sync mode . Synchronizes a full node doing a fast synchronization by downloading the entire state database, requesting the headers first, and optionally filling in block bodies and receipts. Once the fast sync reaches the best block of the Ethereum network, it switches to full sync mode. openethereum The default sync mode. Synchronizes a full Ethereum node using warp synchronization mode by downloading a snapshot of the 30,000 best blocks and the latest state database. Once the snapshot is restored, the client switches to full sync and ancient blocks are synchronized from the network in background. A openethereum default node serves the network as a full node after it has finished synchronizing. besu Besu's default sync mode is with fastsync enabled. This setting reduces sync time considerably compared to full sync. besu --pruning-enabled=true This setting enables pruning in order to reduce storage required for the world state. Pruning removes state trie nodes that aren\u2019t required.","title":"Client settings"},{"location":"DAO-tooling/running-an-ethereum-node/#light-nodes","text":"A light node: Stores the header chain and requests everything else on demand. Can verify the validity of the data against the state roots in the block headers. Light nodes are useful for low capacity devices, such as embedded devices or mobile phones, which can't afford to store multiple dozen Gigabytes of blockchain data.","title":"Light nodes"},{"location":"DAO-tooling/running-an-ethereum-node/#client-settings_1","text":"geth --syncmode light Waits for around 200 seconds before beginning to sync from 2,300 blocks in the past, then periodically receives small bundles of 1 to 10 blocks. The initial sync takes very little time.","title":"Client settings"},{"location":"DAO-tooling/running-an-ethereum-node/#archive-nodes","text":"An archive node: Stores everything kept in the full node. Also builds an archive of historical states. Archive nodes are only necessary if you want to check the state of an account at any given block height. For example, if you wanted to know the Ether balance an account had at block #4,000,000, you would need to run and query an archive node. They are commonly only used for services such as block explorers and infrastructure providers like Infura. They are use case dependent and have no impact on the security or trust model of the blockchain.","title":"Archive Nodes"},{"location":"DAO-tooling/running-an-ethereum-node/#client-settings_2","text":"geth --syncmode full --gcmode archive --txlookuplimit=0 --cache.preimages Synchronizes an archive node starting at genesis, thoroughly verifying all blocks, executing all transactions, and writing all intermediate states to disk (\"archive\"). In Geth, this is called gcmode which refers to the concept of garbage collection . Setting it to archive basically turns it off. ./Nethermind.Runner --config mainnet_archive Synchronizes a full node starting at genesis, verifying all blocks and executing all transactions. This mode is much slower than the fast sync mode but comes with increased security. openethereum --pruning=\"archive\" --no-warp Pruning is enabled by default, setting it to archive while turning off warp will build all historical data from genesis. besu --sync-mode=FULL To run an archive node, enable full synchronization using --sync-mode=FULL, which by default also disables pruning (--pruning-enabled=false).","title":"Client Settings"},{"location":"DAO-tooling/running-an-ethereum-node/#hardware","text":"A consumer-grade laptop will be enough to run a full node, but not an archive node. An archive node does need 2+ TB of disk space, and that disk space cannot be HDD - it must be SSD for both full and archive nodes. Light nodes run fine on SD cards and HDDs. If a full node goes offline for a while, its data can get corrupted and it can take a while to restore it. For best results, if running your own node, run it on an always-on always-connected device for minimal downtime and maximum reliability. This can be impossible on a laptop and expensive on a desktop PC (500W+) so it's better to use a device that's cheap to build and replace and almost free to run. A Raspberry Pi is enough for light nodes while a full node will run fine on an ARM micro computer. Check out pre-synced pre-built devices by Ava.do , and DAppNode . Warning: never plug into your LAN anything you cannot thoroughly inspect and verify. You might be subjecting yourself to DNS hijacking or cryptojacking without knowing it. If the hardware and software aren't open source (at least the assembly part), they aren't safe to use.","title":"Hardware"},{"location":"DAO-tooling/running-an-ethereum-node/#resources","text":"Spin up your own Ethereum node Running Ethereum Full Nodes: A Complete Guide Huge shout out and thanks to Afri Schoedon's blogs here and here which is where a lot of the information on this page came from. Run an Ethereum Node on Debian Dispelling Myths About Ethereum's Disk Space What Comprises an Ethereum Fullnode Implementation? Running an Ethereum Full Node on a RaspberryPi 4 Getting started with Nethermind","title":"Resources"},{"location":"DAO-tooling/test-networks/","text":"Test Networks Ropsten Summary The Ropsten test network is a Proof-of-Work testnet for Ethereum. To acquire ETH on Ropsten, one can mine on the network. Resources Block Explorer Kovan Summary The Kovan test network is a Proof-of-Authority testnet for Ethereum, originally started by the Parity team. To acquire ETH on Kovan, one can request it from a faucet. Resources Website Block Explorer Faucet Rinkeby Summary The Rinkeby test network is a Proof-of-Authority testnet for Ethereum, originally started by the Geth team. To acquire ETH on Rinkeby, one can request it from a faucet. Resources Website Block Explorer Faucet G\u00f6rli Summary The G\u00f6rli test network is a Proof-of-Authority testnet for Ethereum, originally proposed by Chainsafe and Afri Schoedon. To acquire ETH on G\u00f6rli, one can use the one-way throttled bridge from any of the other three test networks. Resources Website Block Explorer GitHub Testnet proposal Ethstats for G\u00f6rli","title":"Ethereum Test Networks - EthHub"},{"location":"DAO-tooling/test-networks/#test-networks","text":"","title":"Test Networks"},{"location":"DAO-tooling/test-networks/#ropsten","text":"","title":"Ropsten"},{"location":"DAO-tooling/test-networks/#summary","text":"The Ropsten test network is a Proof-of-Work testnet for Ethereum. To acquire ETH on Ropsten, one can mine on the network.","title":"Summary"},{"location":"DAO-tooling/test-networks/#resources","text":"Block Explorer","title":"Resources"},{"location":"DAO-tooling/test-networks/#kovan","text":"","title":"Kovan"},{"location":"DAO-tooling/test-networks/#summary_1","text":"The Kovan test network is a Proof-of-Authority testnet for Ethereum, originally started by the Parity team. To acquire ETH on Kovan, one can request it from a faucet.","title":"Summary"},{"location":"DAO-tooling/test-networks/#resources_1","text":"Website Block Explorer Faucet","title":"Resources"},{"location":"DAO-tooling/test-networks/#rinkeby","text":"","title":"Rinkeby"},{"location":"DAO-tooling/test-networks/#summary_2","text":"The Rinkeby test network is a Proof-of-Authority testnet for Ethereum, originally started by the Geth team. To acquire ETH on Rinkeby, one can request it from a faucet.","title":"Summary"},{"location":"DAO-tooling/test-networks/#resources_2","text":"Website Block Explorer Faucet","title":"Resources"},{"location":"DAO-tooling/test-networks/#gorli","text":"","title":"G\u00f6rli"},{"location":"DAO-tooling/test-networks/#summary_3","text":"The G\u00f6rli test network is a Proof-of-Authority testnet for Ethereum, originally proposed by Chainsafe and Afri Schoedon. To acquire ETH on G\u00f6rli, one can use the one-way throttled bridge from any of the other three test networks.","title":"Summary"},{"location":"DAO-tooling/test-networks/#resources_3","text":"Website Block Explorer GitHub Testnet proposal Ethstats for G\u00f6rli","title":"Resources"},{"location":"DAO-tooling/transactions/","text":"Transactions Gas Summary Understanding 'gas' is fundamental to understanding how the Ethereum network functions. The EVM - the Ethereum Virtual Machine (EVM) running on each Ethereum node - is an emulation of a computer system. One example of a regular, non-blockchain virtual machine is the VirtualBox software, which allows you to emulate computer systems (guests) on your physical hardware (hosts). Any operation in the EVM consumes CPU cycles, disk access, memory, of the hosting machine (which carries a cost). This cost is paid via Ethereum 'gas'. In order to prevent \"overload\" of the host, each operation on the EVM consumes a certain amount of gas. Accessing memory or writing to disk have differing costs with each EVM operator setting an upper limit to the gas consumed during execution of a contract. So, if a malicious operator crafted a smart contract that went into an infinite loop, each loop would consume some gas and eventually run into the limit, at which point the EVM would abort the execution of this contract. Essentially, the larger, more complex the contract and the more operations it performs, the more expensive it is to run it. This process creates a fee market using gas prices where users decide how much they are willing to pay for each unit of gas. Due to the gas block limit, the fee market almost always determines what order transactions are mined in because miners looking to profit will select the transactions with the highest fees. There are many key components to a transaction that are important to understand: Term Description Gas Unit for how much computation work is done. Gas Price How much you\u2019re willing to pay per gas for work (in gwei) Tx Cost Gas used * Gas Price Gas Limit Max gas you\u2019ll pay for a certain tx Gas Block Limit Max gas allowed in a block Fee Market Summary The Ethereum gas block limit means that there is a limit to how many computations can occur per block. This creates a fee market for gas where miners will accept higher paying transactions first. Users that want their transactions to be included first can pay a higher gas price than those who aren't in a rush. Key concepts to understand about the fee market are: Term Description Gas Price How much a user is willing to pay per gas for work (in gwei) Safe Low A price that will be mined in a reasonable time (<50 blocks) Standard Gas Price The average gas price being paid by the network Fast Gas Price A price that will be mined within the next few blocks Signing Transactions on Ethereum Interacting with Smart Contracts via Etherscan and MetaMask Navigate to the Etherscan page for the Contract Address If the code and ABI have been uploaded to Etherscan, you should be able to access the 'Write Contract' tab Click the connect with MetaMask button Follow the documentation provided by the Contract's author to complete your transaction. Interacting with Smart Contracts via MyCrypto Navigate to MyCrypto . Verify the SSL (little green lock next to URL) to avoid phishing sites. Click the 'Contracts' tab Enter the Ethereum address of your desired contract in the 'Contract Address' field Enter the 'ABI / JSON Interface' provided by the contract author into the 'Contract ABI' filed. The ABI allows MyCrypto to display named functions that are invokable for the provided contract address. This code can sometimes be found on the Etherscan page for the contract address under the 'Code' tab. Click 'Access' Follow the contract documentation provided by the contract author to use the desired contract function in the 'Read / Write Contract' dropdown. Follow the MyCrypto prompts to access your wallet in order to sign and submit your transaction. Important notes If you are experiencing troubles, be sure that you are using the 'Ethereum' (mainnet) from the dropdown in the top right hand corner It never hurts to cross reference the average gas limit and gas price on either Etherscan or EthGasStation How To Make An Offline Transaction via MyCrypto To learn how to generate, sign, and broadcast a transaction locally and offline via MyCrypto, see this guide . Signing & Verifying Messages on Ethereum Ethereum private keys can be used to sign messages. Signatures can be used to verify that a given user owns an Ethereum address. To learn how to sign and verify signatures via MyCrypto, see this guide . Resources Understanding Ethereum Gas, Blocks and the Fee Market How does Ethereum work, anyway? EthGasStation","title":"Ethereum Transactions - EthHub"},{"location":"DAO-tooling/transactions/#transactions","text":"","title":"Transactions"},{"location":"DAO-tooling/transactions/#gas","text":"","title":"Gas"},{"location":"DAO-tooling/transactions/#summary","text":"Understanding 'gas' is fundamental to understanding how the Ethereum network functions. The EVM - the Ethereum Virtual Machine (EVM) running on each Ethereum node - is an emulation of a computer system. One example of a regular, non-blockchain virtual machine is the VirtualBox software, which allows you to emulate computer systems (guests) on your physical hardware (hosts). Any operation in the EVM consumes CPU cycles, disk access, memory, of the hosting machine (which carries a cost). This cost is paid via Ethereum 'gas'. In order to prevent \"overload\" of the host, each operation on the EVM consumes a certain amount of gas. Accessing memory or writing to disk have differing costs with each EVM operator setting an upper limit to the gas consumed during execution of a contract. So, if a malicious operator crafted a smart contract that went into an infinite loop, each loop would consume some gas and eventually run into the limit, at which point the EVM would abort the execution of this contract. Essentially, the larger, more complex the contract and the more operations it performs, the more expensive it is to run it. This process creates a fee market using gas prices where users decide how much they are willing to pay for each unit of gas. Due to the gas block limit, the fee market almost always determines what order transactions are mined in because miners looking to profit will select the transactions with the highest fees. There are many key components to a transaction that are important to understand: Term Description Gas Unit for how much computation work is done. Gas Price How much you\u2019re willing to pay per gas for work (in gwei) Tx Cost Gas used * Gas Price Gas Limit Max gas you\u2019ll pay for a certain tx Gas Block Limit Max gas allowed in a block","title":"Summary"},{"location":"DAO-tooling/transactions/#fee-market","text":"","title":"Fee Market"},{"location":"DAO-tooling/transactions/#summary_1","text":"The Ethereum gas block limit means that there is a limit to how many computations can occur per block. This creates a fee market for gas where miners will accept higher paying transactions first. Users that want their transactions to be included first can pay a higher gas price than those who aren't in a rush. Key concepts to understand about the fee market are: Term Description Gas Price How much a user is willing to pay per gas for work (in gwei) Safe Low A price that will be mined in a reasonable time (<50 blocks) Standard Gas Price The average gas price being paid by the network Fast Gas Price A price that will be mined within the next few blocks","title":"Summary"},{"location":"DAO-tooling/transactions/#signing-transactions-on-ethereum","text":"","title":"Signing Transactions on Ethereum"},{"location":"DAO-tooling/transactions/#interacting-with-smart-contracts-via-etherscan-and-metamask","text":"Navigate to the Etherscan page for the Contract Address If the code and ABI have been uploaded to Etherscan, you should be able to access the 'Write Contract' tab Click the connect with MetaMask button Follow the documentation provided by the Contract's author to complete your transaction.","title":"Interacting with Smart Contracts via Etherscan and MetaMask"},{"location":"DAO-tooling/transactions/#interacting-with-smart-contracts-via-mycrypto","text":"Navigate to MyCrypto . Verify the SSL (little green lock next to URL) to avoid phishing sites. Click the 'Contracts' tab Enter the Ethereum address of your desired contract in the 'Contract Address' field Enter the 'ABI / JSON Interface' provided by the contract author into the 'Contract ABI' filed. The ABI allows MyCrypto to display named functions that are invokable for the provided contract address. This code can sometimes be found on the Etherscan page for the contract address under the 'Code' tab. Click 'Access' Follow the contract documentation provided by the contract author to use the desired contract function in the 'Read / Write Contract' dropdown. Follow the MyCrypto prompts to access your wallet in order to sign and submit your transaction.","title":"Interacting with Smart Contracts via MyCrypto"},{"location":"DAO-tooling/transactions/#important-notes","text":"If you are experiencing troubles, be sure that you are using the 'Ethereum' (mainnet) from the dropdown in the top right hand corner It never hurts to cross reference the average gas limit and gas price on either Etherscan or EthGasStation","title":"Important notes"},{"location":"DAO-tooling/transactions/#how-to-make-an-offline-transaction-via-mycrypto","text":"To learn how to generate, sign, and broadcast a transaction locally and offline via MyCrypto, see this guide .","title":"How To Make An Offline Transaction via MyCrypto"},{"location":"DAO-tooling/transactions/#signing-verifying-messages-on-ethereum","text":"Ethereum private keys can be used to sign messages. Signatures can be used to verify that a given user owns an Ethereum address. To learn how to sign and verify signatures via MyCrypto, see this guide .","title":"Signing &amp; Verifying Messages on Ethereum"},{"location":"DAO-tooling/transactions/#resources","text":"Understanding Ethereum Gas, Blocks and the Fee Market How does Ethereum work, anyway? EthGasStation","title":"Resources"},{"location":"DAO-tooling/frameworks/geth/","text":"Snapshot Summary Geth is the Golang implementation of the Ethereum protocol. It is fast, open source software that is actively maintained. Requirements Minimum: CPU with 2+ cores 4GB RAM 320GB free storage space to sync the Mainnet 8 MBit/sec download Internet service Recommended: Fast CPU with 4+ cores 16GB+ RAM Fast SSD with at least 500GB free space 25+ MBit/sec download Internet service For light nodes, the requirements are much lower, as you will only be storing block headers and receive small state updates. Setup Download Geth from the official page Extract the compressed archive with your tool of choice There are no system dependencies if using an officially released geth binary, which ships for most architectures and operating systems. Running The first step in running an Ethereum node is synchronizing the Blockchian. There are a few options you can use to specify the sync mode of the geth client: --syncmode \"fast\" --syncmode \"full\" --syncmode \"light\" By default, geth will run in --syncmode \"fast\", this is the recommended option for running a complete Ethereum node. When using \"fast\" synchronization, the node will initially download blocks until it reaches the tip of the Blockchain without performing extensive validation steps. Once your node is in sync with the rest of the network, the node will validate transactions exactly like a full node. When using \"full\" synchronization, the node validates every transaction from downloaded blocks until it reaches the tip of the Blockchain. This is not advised, as it doesn't provide any benefits and can result in the node taking multiple days, or even weeks, to synchronize completely. Once the node is in sync, it will continue full validation of new transactions. When using \"light\" synchronization, the node only downloads a few recent block headers, making it a very quick sync. The drawback to this method is that the node is unable to perform reliable validation, as it doesn't have complete records of the Blockchain. If running on a device with low bandwidth or memory, the light node can be advantageous. The light node gets updated by full nodes once in a while with information on changes pertaining to relevant parts of the Blockchain. When offering services to users which might require complete records, the fast sync options are the best to use. A fast sync node can operate in light mode. Using In the folder extracted from the downloaded archive, the geth program can be run with the desired sync mode and other options. ./geth --syncmode \"option\" When using a light client, beware that it can take up to 10 minutes after the node's initialization before it starts receiving updates from the network. From then on, it is actively subscribed to updates by the full nodes. You can expect it to take anywhere from 3 to 12 hours to fast sync your Ethereum node depending on your hardware and whether your connection to the Internet is a bottleneck. A few interesting commands which will enhance your geth experience: ./geth account new : create an account, yields the address and location of the keystore file ./geth account list : list all accounts located in the keystore folder ./geth --cache VALUE : increase the amount of memory allocated to geth, default 1024 (MB) ./geth --maxpeers VALUE : set maximum number of full node peers, default 25 ./geth --lightpeers VALUE : set maximum number of light node peers, default 100 ./geth export FILEPATH : export a copy of the Blockchain data to FILEPATH ./geth import FILEPATH : import Blockchain data from FILEPATH Resources Github","title":"Geth"},{"location":"DAO-tooling/frameworks/geth/#snapshot","text":"","title":"Snapshot"},{"location":"DAO-tooling/frameworks/geth/#summary","text":"Geth is the Golang implementation of the Ethereum protocol. It is fast, open source software that is actively maintained.","title":"Summary"},{"location":"DAO-tooling/frameworks/geth/#requirements","text":"Minimum: CPU with 2+ cores 4GB RAM 320GB free storage space to sync the Mainnet 8 MBit/sec download Internet service Recommended: Fast CPU with 4+ cores 16GB+ RAM Fast SSD with at least 500GB free space 25+ MBit/sec download Internet service For light nodes, the requirements are much lower, as you will only be storing block headers and receive small state updates.","title":"Requirements"},{"location":"DAO-tooling/frameworks/geth/#setup","text":"Download Geth from the official page Extract the compressed archive with your tool of choice There are no system dependencies if using an officially released geth binary, which ships for most architectures and operating systems.","title":"Setup"},{"location":"DAO-tooling/frameworks/geth/#running","text":"The first step in running an Ethereum node is synchronizing the Blockchian. There are a few options you can use to specify the sync mode of the geth client: --syncmode \"fast\" --syncmode \"full\" --syncmode \"light\" By default, geth will run in --syncmode \"fast\", this is the recommended option for running a complete Ethereum node. When using \"fast\" synchronization, the node will initially download blocks until it reaches the tip of the Blockchain without performing extensive validation steps. Once your node is in sync with the rest of the network, the node will validate transactions exactly like a full node. When using \"full\" synchronization, the node validates every transaction from downloaded blocks until it reaches the tip of the Blockchain. This is not advised, as it doesn't provide any benefits and can result in the node taking multiple days, or even weeks, to synchronize completely. Once the node is in sync, it will continue full validation of new transactions. When using \"light\" synchronization, the node only downloads a few recent block headers, making it a very quick sync. The drawback to this method is that the node is unable to perform reliable validation, as it doesn't have complete records of the Blockchain. If running on a device with low bandwidth or memory, the light node can be advantageous. The light node gets updated by full nodes once in a while with information on changes pertaining to relevant parts of the Blockchain. When offering services to users which might require complete records, the fast sync options are the best to use. A fast sync node can operate in light mode.","title":"Running"},{"location":"DAO-tooling/frameworks/geth/#using","text":"In the folder extracted from the downloaded archive, the geth program can be run with the desired sync mode and other options. ./geth --syncmode \"option\" When using a light client, beware that it can take up to 10 minutes after the node's initialization before it starts receiving updates from the network. From then on, it is actively subscribed to updates by the full nodes. You can expect it to take anywhere from 3 to 12 hours to fast sync your Ethereum node depending on your hardware and whether your connection to the Internet is a bottleneck. A few interesting commands which will enhance your geth experience: ./geth account new : create an account, yields the address and location of the keystore file ./geth account list : list all accounts located in the keystore folder ./geth --cache VALUE : increase the amount of memory allocated to geth, default 1024 (MB) ./geth --maxpeers VALUE : set maximum number of full node peers, default 25 ./geth --lightpeers VALUE : set maximum number of light node peers, default 100 ./geth export FILEPATH : export a copy of the Blockchain data to FILEPATH ./geth import FILEPATH : import Blockchain data from FILEPATH","title":"Using"},{"location":"DAO-tooling/frameworks/geth/#resources","text":"Github","title":"Resources"},{"location":"ethereum-basics/governance/","text":"Governance Summary Blockchains are distributed systems. They are essentially consensus protocols, which means that different nodes in the network (e.g. computers on the internet) have to be running compatible software. \u201cNode operators\u201d are the owners and managers of nodes that run the protocol. Most node operators don\u2019t want to write much software, and it\u2019s a technical challenge for anyone to independently write compatible implementations of any consensus protocol even if they have a specification. As a result, node operators rely on software repositories (usually hosted on Microsoft/Github servers) to provide them with the software they choose to run. \u201cCore developers\u201d of a blockchain are software developers who work on the software that implement that protocol. Developers have processes that are supposed to assure the quality of the software they release, and are generally very interested in maintaining the legitimacy of their software repositories because they want to see people using their software (as opposed to someone else\u2019s). Critical Components of Governance 1. Incentives Each group in the system has their own incentives. Those incentives are not always 100% aligned with all other groups in the system. Groups will propose changes over time which are advantageous for them. Organisms are biased towards their own survival. This commonly manifests in changes to the reward structure, monetary policy, or balances of power. 2. Mechanisms for Coordination Since it\u2019s unlikely all groups have 100% incentive alignment at all times, the ability for each group to coordinate around their common incentives is critical for them to affect change. If one group can coordinate better than another, it creates power imbalances in their favor. In practice, a major factor is how much coordination can be done on-chain vs. off-chain, where on-chain coordination makes coordinating easier. In some new blockchains (such as Tezos or Polkadot), on-chain coordination allows the rules or even the ledger history itself to be changed. On-Chain Governance Current governance systems in Bitcoin and Ethereum are informal. They were designed using a decentralized ethos, first promulgated by Satoshi Nakamoto in his original paper. Improvement proposals to make changes to the blockchain are submitted by developers and a core group, consisting mostly of developers, is responsible for coordinating and achieving consensus between stakeholders. The stakeholders in this case are miners (who operate nodes), developers (who are responsible for core blockchain algorithms) and users (who use and invest in various coins). What is on-chain governance? On-chain governance is a system for managing and implementing changes to cryptocurrency blockchains. In this type of governance, rules for instituting changes are encoded into the blockchain protocol. Developers propose changes through code updates and each node votes on whether to accept or reject the proposed change. How does it work? Unlike informal governance systems, which use a combination of offline coordination and online code modifications to effect changes, on-chain governance systems solely work online. Changes to a blockchain are proposed through code updates. Subsequently, nodes can vote to accept or decline the change. Not all nodes have equal voting power. Nodes with greater holdings of coins have more votes as compared to nodes that have a relatively lesser number of holdings. If the change is accepted, it is included in the blockchain and baselined. In some instances of on-chain governance implementation, the updated code may be rolled back to its version before a baseline, if the proposed change is unsuccessful. Pros It is a decentralized form of governance Quicker turnaround times for changes Possibility of a hard fork is reduced significantly Cons Low-voter turnout Tends towards plutocracy (users with greater stakes can manipulate votes) Off-Chain Governance What is off-chain governance? Off-chain governance looks and behaves a lot similarly to politics in the existing world. Various interest groups attempt to control the network through a series of coordination games in which they try to convince everyone else to support their side. There is no code that binds these groups to specific behaviors, but rather, they choose what\u2019s in their best interest given the known preferences of the other stakeholders. There\u2019s a reason blockchain technology and game theory are so interwoven. How does it work? Improvement proposals to make changes to the blockchain are submitted by developers and a core group, consisting mostly of developers, is responsible for coordinating and achieving consensus between stakeholders. The stakeholders in this case are miners (who operate nodes), developers (who are responsible for core blockchain algorithms) and users (who use and invest in various coins). The various stakeholders signal their approval or disapproval for an improvement proposal through private and community discourse. Then, the core developers get a sense for whether or not node operators and miners will agree to upgrade their software. Ideally, all sides agree and the code changes are made smoothly. Everything is announced beforehand and stakeholders have time to update. In the case of disagreement, stakeholders have two options. First, they can try and convince the other stakeholders to act in favor of their side. If they can\u2019t reach consensus, they have the ability to hard fork the protocol and keep or change features they think are necessary. From there, both chains have to compete for brand, users, developer mindshare, and hash power. Resources Why on-chain governance? On-chain governance explained Off-chain governance explained","title":"Governance"},{"location":"ethereum-basics/governance/#governance","text":"","title":"Governance"},{"location":"ethereum-basics/governance/#summary","text":"Blockchains are distributed systems. They are essentially consensus protocols, which means that different nodes in the network (e.g. computers on the internet) have to be running compatible software. \u201cNode operators\u201d are the owners and managers of nodes that run the protocol. Most node operators don\u2019t want to write much software, and it\u2019s a technical challenge for anyone to independently write compatible implementations of any consensus protocol even if they have a specification. As a result, node operators rely on software repositories (usually hosted on Microsoft/Github servers) to provide them with the software they choose to run. \u201cCore developers\u201d of a blockchain are software developers who work on the software that implement that protocol. Developers have processes that are supposed to assure the quality of the software they release, and are generally very interested in maintaining the legitimacy of their software repositories because they want to see people using their software (as opposed to someone else\u2019s).","title":"Summary"},{"location":"ethereum-basics/governance/#critical-components-of-governance","text":"1. Incentives Each group in the system has their own incentives. Those incentives are not always 100% aligned with all other groups in the system. Groups will propose changes over time which are advantageous for them. Organisms are biased towards their own survival. This commonly manifests in changes to the reward structure, monetary policy, or balances of power. 2. Mechanisms for Coordination Since it\u2019s unlikely all groups have 100% incentive alignment at all times, the ability for each group to coordinate around their common incentives is critical for them to affect change. If one group can coordinate better than another, it creates power imbalances in their favor. In practice, a major factor is how much coordination can be done on-chain vs. off-chain, where on-chain coordination makes coordinating easier. In some new blockchains (such as Tezos or Polkadot), on-chain coordination allows the rules or even the ledger history itself to be changed.","title":"Critical Components of Governance"},{"location":"ethereum-basics/governance/#on-chain-governance","text":"Current governance systems in Bitcoin and Ethereum are informal. They were designed using a decentralized ethos, first promulgated by Satoshi Nakamoto in his original paper. Improvement proposals to make changes to the blockchain are submitted by developers and a core group, consisting mostly of developers, is responsible for coordinating and achieving consensus between stakeholders. The stakeholders in this case are miners (who operate nodes), developers (who are responsible for core blockchain algorithms) and users (who use and invest in various coins).","title":"On-Chain Governance"},{"location":"ethereum-basics/governance/#what-is-on-chain-governance","text":"On-chain governance is a system for managing and implementing changes to cryptocurrency blockchains. In this type of governance, rules for instituting changes are encoded into the blockchain protocol. Developers propose changes through code updates and each node votes on whether to accept or reject the proposed change.","title":"What is on-chain governance?"},{"location":"ethereum-basics/governance/#how-does-it-work","text":"Unlike informal governance systems, which use a combination of offline coordination and online code modifications to effect changes, on-chain governance systems solely work online. Changes to a blockchain are proposed through code updates. Subsequently, nodes can vote to accept or decline the change. Not all nodes have equal voting power. Nodes with greater holdings of coins have more votes as compared to nodes that have a relatively lesser number of holdings. If the change is accepted, it is included in the blockchain and baselined. In some instances of on-chain governance implementation, the updated code may be rolled back to its version before a baseline, if the proposed change is unsuccessful.","title":"How does it work?"},{"location":"ethereum-basics/governance/#pros","text":"It is a decentralized form of governance Quicker turnaround times for changes Possibility of a hard fork is reduced significantly","title":"Pros"},{"location":"ethereum-basics/governance/#cons","text":"Low-voter turnout Tends towards plutocracy (users with greater stakes can manipulate votes)","title":"Cons"},{"location":"ethereum-basics/governance/#off-chain-governance","text":"","title":"Off-Chain Governance"},{"location":"ethereum-basics/governance/#what-is-off-chain-governance","text":"Off-chain governance looks and behaves a lot similarly to politics in the existing world. Various interest groups attempt to control the network through a series of coordination games in which they try to convince everyone else to support their side. There is no code that binds these groups to specific behaviors, but rather, they choose what\u2019s in their best interest given the known preferences of the other stakeholders. There\u2019s a reason blockchain technology and game theory are so interwoven.","title":"What is off-chain governance?"},{"location":"ethereum-basics/governance/#how-does-it-work_1","text":"Improvement proposals to make changes to the blockchain are submitted by developers and a core group, consisting mostly of developers, is responsible for coordinating and achieving consensus between stakeholders. The stakeholders in this case are miners (who operate nodes), developers (who are responsible for core blockchain algorithms) and users (who use and invest in various coins). The various stakeholders signal their approval or disapproval for an improvement proposal through private and community discourse. Then, the core developers get a sense for whether or not node operators and miners will agree to upgrade their software. Ideally, all sides agree and the code changes are made smoothly. Everything is announced beforehand and stakeholders have time to update. In the case of disagreement, stakeholders have two options. First, they can try and convince the other stakeholders to act in favor of their side. If they can\u2019t reach consensus, they have the ability to hard fork the protocol and keep or change features they think are necessary. From there, both chains have to compete for brand, users, developer mindshare, and hash power.","title":"How does it work?"},{"location":"ethereum-basics/governance/#resources","text":"Why on-chain governance? On-chain governance explained Off-chain governance explained","title":"Resources"},{"location":"ethereum-basics/resources/","text":"Resources Getting Started Intro to Ethereum Complete Beginners Guide to Cryptocurrency What is Ethereum? An absolute beginner\u2019s guide. (Animated comic.) Decrypt - Ethereum Ethereum Explained Ethereum Syllabus Cryptocurrency Explained How A Blockchain Works (6 min video) Blockchain for Babies Further Education Awesome Decentralized Finance Awesome Zeppelin Cryptocurrency Education Portal Blockchain.com Learning Portal Interactive Blockchain Demo Crypto and Blockchain Glossary Cryptoeconomics.study Binance Academy Coinmonks Media News The Block Token Daily Token Economy Subreddits /r/Ethereum /r/EthFinance /r/EthStaker /r/EtherMining /r/EthDev /r/EthereumNoobies Podcasts Into the Ether Bankless Podcast The Defiant Podcast Epicenter The Block Experience Dose of Ether Unchained Unconfirmed Zero Knowledge Flippening for Crypto Investors Digitally Rare Village Global Multicoin Capital The Third Web a16z Podcast Blockchain Curated Newsletters EthHub Weekly Newsletter The Daily Gwei Week In Ethereum The Defiant Bankless The Ethernaut Diaries DeFi Rate Our Network Token Tuesdays JAMM Messari Coin Metrics The Block OrgTech Weekly Long Reads Sunday Proof of Work Tony Sheng Global Coin Research DeFi Weekly Token Economy Token Daily #Web3Vibes DeFi Pulse Farmer Videos DeFi Educational Videos by Chris Blec Social Media Who to Follow on Twitter Reading Crypto Reading List Beginners Guide Series on Cryptoassets Master Reading List by a16z Mastering Ethereum Cryptoassets: The Innovative Investor's Guide to Bitcoin and Beyond Ethereum Whitepaper Blogs Vitalik Buterin (Ethereum Founder) Fred Ehrsam (Coinbase Co-Founder) Vlad Zamfir (Ethereum Core Developer) The Control by Nick Tomaino Multicoin Capital Hacking, Distributed (Emin G\u00fcn Sirer) Simon de la Rouviere Tony Sheng Technical Resources Ethereum Tools Block Explorers Etherscan Etherchain Ethplorer EnjinX Bloxy Bitquery Eth2 Block Explorers Etherscan Etherchain Wallets EthHub Wallets Section MyEtherWallet MyCrypto MetaMask Dapp Explorers Dap.ps Loanscan - Ethereum Loan Explorer State of the dApps DeFi Pulse - The Decentralized Finance Leaderboard Ethereum Data Explorers Dune Analytics Ethtective Ethereum Network Statistics Ethereum Network Statistics (New) Gas Price History Chart Ethereum Gas Station Ethereum Blockchain on Kaggle Ethereum Network Hashrate Ethereum Network Difficulty BTC on Ethereum USD on Ethereum Bloxy Analytics Reports Miscellaneous List of Ethereum Public Calls Flippening Watch Run an Ethereum node Run an Ethereum Node AVADO DAppNode QuikNode Blockdaemon Vipnode Ethereum Development Ethereum Github Page Go-Ethereum Gitter Intro to Smart Contracts Ethereum Research Forum Ethereum Sharding Roadmap Ethereum 2.0 Phase 2 Wiki Ethereum Developer Tools List Ethereum Stack Exchange Ethereum Bounties EthList: The Crowdsourced Ethereum Reading List Ethereum 2.0 Devs Handbook and FAQs EatTheBlocks Solidity Video Tutorials Quickblocks LearnChannels VDF Research Awesome Cryptoeconomics Web3 Foundation Wiki Zero-Knowledge Proofs Starter Pack Awesome Ethreum Virtual Machine Solidity and Vyper cheat sheet Solidity Development Guides Security MyCrypto's Security Guide Hardware Wallet Guide Paper Wallet Guide Common Scams on Mobile Devices General Security Principles Trading Decentralized Exchanges (DEXs) EthHub DEX Section List of all Decentralized Exchanges Uniswap Radar Relay IDEX ForkDelta Paradex DEX aggregator Market Data DeFi Market Cap CoinGecko Nomics Messari Screener Coinlib CoinMarketCap Cryptowat.ch All-time-high Coin Index Bitgur Cryptofinance LootCap Portfolio Tracking Delta Blockfolio Coink (iOS) Visualizations Token Sale History Coin 360 (CryptoMaps) Real time Ethereum transactions Security Tracker Infrastructure TxStreet live visualizer Dapp Resources Non-fungible Token (NFT) Resources OpenSea (Digital Asset Marketplace) Emoon (Digital Asset Marketplace) Nifty Gateway Cryptogoods Gallery NFT Reading List Nonfungible - Market Discovery and Analysis The Creative Crypto Magazine Dapp Tools General Awesome Crypto Trackers Universal dApp Store Awesome DeFi Trackers Dapp Trackers dApp Radar dApp Store dApp.com dApp Review MakerDAO MakerDAO Vault Portal Awesome MakerDAO Augur Guesser Predictions.global - Augur Prediction Markets DEX Tools Uniswap Explorer 0x Tracker Misc InstaDApp DeFipulse - Value Locked in DeFi DeFiprime - Curated list of DeFi Products Curious Giraffe - Blockchain Analytics Miscellaneous Definitive SEC Guide Custodial Bitcoin on Ethereum Ethereum Obituaries Crypto Periodic Table KeySheet Etherean.org Blockchain Security Contacts Crypto Grant Programs Plasma Map Ethereum.org Swag Store","title":"Resources"},{"location":"ethereum-basics/resources/#resources","text":"","title":"Resources"},{"location":"ethereum-basics/resources/#getting-started","text":"","title":"Getting Started"},{"location":"ethereum-basics/resources/#intro-to-ethereum","text":"Complete Beginners Guide to Cryptocurrency What is Ethereum? An absolute beginner\u2019s guide. (Animated comic.) Decrypt - Ethereum Ethereum Explained Ethereum Syllabus Cryptocurrency Explained How A Blockchain Works (6 min video) Blockchain for Babies","title":"Intro to Ethereum"},{"location":"ethereum-basics/resources/#further-education","text":"Awesome Decentralized Finance Awesome Zeppelin Cryptocurrency Education Portal Blockchain.com Learning Portal Interactive Blockchain Demo Crypto and Blockchain Glossary Cryptoeconomics.study Binance Academy Coinmonks","title":"Further Education"},{"location":"ethereum-basics/resources/#media","text":"","title":"Media"},{"location":"ethereum-basics/resources/#news","text":"The Block Token Daily Token Economy","title":"News"},{"location":"ethereum-basics/resources/#subreddits","text":"/r/Ethereum /r/EthFinance /r/EthStaker /r/EtherMining /r/EthDev /r/EthereumNoobies","title":"Subreddits"},{"location":"ethereum-basics/resources/#podcasts","text":"Into the Ether Bankless Podcast The Defiant Podcast Epicenter The Block Experience Dose of Ether Unchained Unconfirmed Zero Knowledge Flippening for Crypto Investors Digitally Rare Village Global Multicoin Capital The Third Web a16z Podcast Blockchain Curated","title":"Podcasts"},{"location":"ethereum-basics/resources/#newsletters","text":"EthHub Weekly Newsletter The Daily Gwei Week In Ethereum The Defiant Bankless The Ethernaut Diaries DeFi Rate Our Network Token Tuesdays JAMM Messari Coin Metrics The Block OrgTech Weekly Long Reads Sunday Proof of Work Tony Sheng Global Coin Research DeFi Weekly Token Economy Token Daily #Web3Vibes DeFi Pulse Farmer","title":"Newsletters"},{"location":"ethereum-basics/resources/#videos","text":"DeFi Educational Videos by Chris Blec","title":"Videos"},{"location":"ethereum-basics/resources/#social-media","text":"Who to Follow on Twitter","title":"Social Media"},{"location":"ethereum-basics/resources/#reading","text":"Crypto Reading List Beginners Guide Series on Cryptoassets Master Reading List by a16z Mastering Ethereum Cryptoassets: The Innovative Investor's Guide to Bitcoin and Beyond Ethereum Whitepaper","title":"Reading"},{"location":"ethereum-basics/resources/#blogs","text":"Vitalik Buterin (Ethereum Founder) Fred Ehrsam (Coinbase Co-Founder) Vlad Zamfir (Ethereum Core Developer) The Control by Nick Tomaino Multicoin Capital Hacking, Distributed (Emin G\u00fcn Sirer) Simon de la Rouviere Tony Sheng","title":"Blogs"},{"location":"ethereum-basics/resources/#technical-resources","text":"","title":"Technical Resources"},{"location":"ethereum-basics/resources/#ethereum-tools","text":"","title":"Ethereum Tools"},{"location":"ethereum-basics/resources/#block-explorers","text":"Etherscan Etherchain Ethplorer EnjinX Bloxy Bitquery","title":"Block Explorers"},{"location":"ethereum-basics/resources/#eth2-block-explorers","text":"Etherscan Etherchain","title":"Eth2 Block Explorers"},{"location":"ethereum-basics/resources/#wallets","text":"EthHub Wallets Section MyEtherWallet MyCrypto MetaMask","title":"Wallets"},{"location":"ethereum-basics/resources/#dapp-explorers","text":"Dap.ps Loanscan - Ethereum Loan Explorer State of the dApps DeFi Pulse - The Decentralized Finance Leaderboard","title":"Dapp Explorers"},{"location":"ethereum-basics/resources/#ethereum-data-explorers","text":"Dune Analytics Ethtective Ethereum Network Statistics Ethereum Network Statistics (New) Gas Price History Chart Ethereum Gas Station Ethereum Blockchain on Kaggle Ethereum Network Hashrate Ethereum Network Difficulty BTC on Ethereum USD on Ethereum Bloxy Analytics Reports","title":"Ethereum Data Explorers"},{"location":"ethereum-basics/resources/#miscellaneous","text":"List of Ethereum Public Calls Flippening Watch","title":"Miscellaneous"},{"location":"ethereum-basics/resources/#run-an-ethereum-node","text":"Run an Ethereum Node AVADO DAppNode QuikNode Blockdaemon Vipnode","title":"Run an Ethereum node"},{"location":"ethereum-basics/resources/#ethereum-development","text":"Ethereum Github Page Go-Ethereum Gitter Intro to Smart Contracts Ethereum Research Forum Ethereum Sharding Roadmap Ethereum 2.0 Phase 2 Wiki Ethereum Developer Tools List Ethereum Stack Exchange Ethereum Bounties EthList: The Crowdsourced Ethereum Reading List Ethereum 2.0 Devs Handbook and FAQs EatTheBlocks Solidity Video Tutorials Quickblocks LearnChannels VDF Research Awesome Cryptoeconomics Web3 Foundation Wiki Zero-Knowledge Proofs Starter Pack Awesome Ethreum Virtual Machine Solidity and Vyper cheat sheet Solidity Development Guides","title":"Ethereum Development"},{"location":"ethereum-basics/resources/#security","text":"MyCrypto's Security Guide Hardware Wallet Guide Paper Wallet Guide Common Scams on Mobile Devices General Security Principles","title":"Security"},{"location":"ethereum-basics/resources/#trading","text":"","title":"Trading"},{"location":"ethereum-basics/resources/#decentralized-exchanges-dexs","text":"EthHub DEX Section List of all Decentralized Exchanges Uniswap Radar Relay IDEX ForkDelta Paradex DEX aggregator","title":"Decentralized Exchanges (DEXs)"},{"location":"ethereum-basics/resources/#market-data","text":"DeFi Market Cap CoinGecko Nomics Messari Screener Coinlib CoinMarketCap Cryptowat.ch All-time-high Coin Index Bitgur Cryptofinance LootCap","title":"Market Data"},{"location":"ethereum-basics/resources/#portfolio-tracking","text":"Delta Blockfolio Coink (iOS)","title":"Portfolio Tracking"},{"location":"ethereum-basics/resources/#visualizations","text":"Token Sale History Coin 360 (CryptoMaps) Real time Ethereum transactions Security Tracker Infrastructure TxStreet live visualizer","title":"Visualizations"},{"location":"ethereum-basics/resources/#dapp-resources","text":"","title":"Dapp Resources"},{"location":"ethereum-basics/resources/#non-fungible-token-nft-resources","text":"OpenSea (Digital Asset Marketplace) Emoon (Digital Asset Marketplace) Nifty Gateway Cryptogoods Gallery NFT Reading List Nonfungible - Market Discovery and Analysis The Creative Crypto Magazine","title":"Non-fungible Token (NFT) Resources"},{"location":"ethereum-basics/resources/#dapp-tools","text":"","title":"Dapp Tools"},{"location":"ethereum-basics/resources/#general","text":"Awesome Crypto Trackers Universal dApp Store Awesome DeFi Trackers","title":"General"},{"location":"ethereum-basics/resources/#dapp-trackers","text":"dApp Radar dApp Store dApp.com dApp Review","title":"Dapp Trackers"},{"location":"ethereum-basics/resources/#makerdao","text":"MakerDAO Vault Portal Awesome MakerDAO","title":"MakerDAO"},{"location":"ethereum-basics/resources/#augur","text":"Guesser Predictions.global - Augur Prediction Markets","title":"Augur"},{"location":"ethereum-basics/resources/#dex-tools","text":"Uniswap Explorer 0x Tracker","title":"DEX Tools"},{"location":"ethereum-basics/resources/#misc","text":"InstaDApp DeFipulse - Value Locked in DeFi DeFiprime - Curated list of DeFi Products Curious Giraffe - Blockchain Analytics","title":"Misc"},{"location":"ethereum-basics/resources/#miscellaneous_1","text":"Definitive SEC Guide Custodial Bitcoin on Ethereum Ethereum Obituaries Crypto Periodic Table KeySheet Etherean.org Blockchain Security Contacts Crypto Grant Programs Plasma Map Ethereum.org Swag Store","title":"Miscellaneous"},{"location":"ethereum-basics/what-is-a-DAO/","text":"What is a DAO? Summary Ether (ETH or \u039e) is the native cryptocurrency used on the Ethereum network and is used to compensate miners who secure transactions. A planned upgrade to the Ethereum protocol in 2019-2021 would replace mining with a less computationally expensive Proof of Stake mechanism which will be secured by validators, who are also expected to receive a proportional compensation in Ether. Ether also has many current use cases, such as a store of value (e.g. in lending collateral), a medium of exchange (e.g. in trade and payments), and a unit of account (e.g. in digital marketplaces). Ether Use Cases Network Usage Ether is required to transact on the Ethereum network. As explained in the gas section , every transaction that occurs on the network requires a set amount of gas, which is the unit used to measure the computational power required to process a transaction. To process a transaction and include it in a block, miners are expected to be compensated for this task. This is accomplished by setting a gas price with every transaction, which is the cost of 1 unit of gas, denominated in Gwei (1 ETH = 1,000,000,000 Gwei). For example, when you simply send ETH from one account to another, this cost 21,000 gas. If you were to set a gas price of 1 Gwei, this transaction would cost 0.000021 ETH. Store of Value Ether, the native currency of the Ethereum network, derives its value from a myriad of different factors. It is used within the Ethereum network to perform a range of functions, including: used to pay Ethereum transaction fees (in the form of \u2018gas\u2019), used as collateral for a wide range of open finance applications (MakerDAO, Compound), can be lent or borrowed (Dharma), accepted as payment by certain retailers and service providers use it as a medium of exchange to purchase Ethereum-based tokens (via ICOs or exchanges), crypto-collectibles, in-game items, and other non-fungible tokens (NFTs) earned as a reward for completing bounties (Gitcoin, Bounties Network). Furthermore, in Ethereum 2.0 (Serenity), users will be able to become a validator and help secure the network by providing computational resources and locking up 32 Ether per validator. Due to this, it is expected that Proof of Stake will lock a substantial amount of the circulating supply of Ether. There are also discussions around introducing a \u2018fee-burn\u2019 model where a percentage of Ether used to pay transaction fees would be \u2018burned\u2019 and thus reduce the circulating supply of Ether. In addition to utility value, Ether also has speculative value. This is value that is derived from speculative activities (such as trading and investing) which currently accounts for most of the value behind all crypto-assets. As observed in 2017, crypto-assets can attract substantial speculative interest, with some assets increasing in value by 1000x over just a few months. This speculative interest often brings fresh capital into the ecosystem that can be reinvested into various verticals, but it can be damaging to the short-term market sentiment of all crypto-assets. Can\u2019t tokens on Ethereum be used instead of Ether? Theoretically, yes. Practically, no. The concept of using another asset to secure the Ethereum network is called \u2018economic abstraction\u2019 (a good primer can be found here . This would involve miners / validators accepting tokens other than Ether in exchange for adding valid transactions to new blocks. It is highly unlikely that the Ethereum protocol will ever implement economic abstraction as it could potentially reduce the security of the blockchain by compromising the value of Ether. How does valuable Ether help to secure the network? In Proof of Work systems, miners compete with each other to find a block and thus be rewarded for their work (in the form of the native crypto-asset of the protocol). As the price of the asset increases, it naturally brings with it more miners, which then increases the network difficulty. As the network difficulty increases, it becomes increasingly difficult for miners to find a block which results in large scale mining operations (commonly referred to as \u201cmining farms\u201d) being one of the only profitable ways to mine on a Proof of Work network (once it reaches a certain size). Miners can also join \u2018mining pools\u2019 in order to increase their chances of finding a block and thus increase their rewards. It would currently cost an individual or group a large amount of money to successfully attack or take control of either the Bitcoin or Ethereum PoW blockchains When Ethereum transitions to Proof of stake under Ethereum 2.0, it is expected that users will be able to stake 32 Ether per validator and receive rewards for their work in the form of additional Ether (at a dynamic issuance rate , discussed later in this essay). Under Proof of Stake, the cost of attacking Ethereum will be tied to the cost of Ether. Instead of using energy intensive mining (as it is under Proof of Work), validators will \u201cstake\u201d Ether, and will lose part or all of their stake if they attempt to behave fraudulently. The more validators with staked Ether securing the network, the more Ether an attacker would need to purchase in order to carry out an attack. Such an attack would likely rapidly increase the price of Ether and thus make it prohibitively more expensive for the attacker. Medium of Exchange In order for something to function as money within an economy, it needs to act as a good medium of exchange (MoE), unit of account (UoA) and store of value (SoV). Ether is used as a medium of exchange within the Ethereum economy for a wide range of apps, with dApp providers accepting it in exchange for fungible / non-fungible tokens, or other services. It is also used as a unit of account by various parties (including companies that have raised Ether via ICOs). Finally, Ether has historically been used as a store of value, with investors and speculators purchasing Ether to hold for investment purposes, given its relative scarcity, predictable supply growth, and inherent utility. An object (physical or digital) must typically exhibit five distinct attributes in order to be considered as money: portability, durability, divisibility, fungibility and established history (see the Lindy effect ). Ether is highly portable (because it\u2019s digital), durable (again, because it\u2019s digital), divisible (up to 18 decimal places), but has limited fungibility as ETH tokens are interchangeable with one another, but accounts/addresses can be blacklisted quite easily. Privacy protocols such as zk-SNARKs will eventually improve this property for Ethereum. Ethereum has been in operation since 2015 and continues to build a strong established history. The Ethereum network (and Ether) have functioned as expected for 99.99% of its life. The other 0.01% includes surviving The DAO, multiple large hacks of smart contracts, multiple protocol-level exploits, the Shanghai DoS attacks, constant negative remarks from the wider crypto community and multiple bear markets (including a recent 94% drop in price). On top of this, Ether has additional properties such as being censorship-resistant, permission-less, pseudonymous and interoperable with other crypto-networks. The supply scheme of crypto-assets is hotly debated among various parties (especially those in the Bitcoin community) and there are currently two main approaches: a capped supply (like Bitcoin) or a low, predictable and hard to change issuance rate (like what is planned for Ethereum 2.0). In Ethereum 2.0 (with Sharding and Proof of Stake implemented), while a low inflation rate will always guarantee the validators are rewarded for securing the network, it suffers from the fact that it may dilute the value of Ether for those that are not validators. Though, this is offset by Ether being taken out of the circulating supply through staking, various open finance applications, fee burning, and people simply losing access to their Ether. Resources Why Ether is Valuable Ether: A New Model for Money","title":"What is a DAO?"},{"location":"ethereum-basics/what-is-a-DAO/#what-is-a-dao","text":"","title":"What is a DAO?"},{"location":"ethereum-basics/what-is-a-DAO/#summary","text":"Ether (ETH or \u039e) is the native cryptocurrency used on the Ethereum network and is used to compensate miners who secure transactions. A planned upgrade to the Ethereum protocol in 2019-2021 would replace mining with a less computationally expensive Proof of Stake mechanism which will be secured by validators, who are also expected to receive a proportional compensation in Ether. Ether also has many current use cases, such as a store of value (e.g. in lending collateral), a medium of exchange (e.g. in trade and payments), and a unit of account (e.g. in digital marketplaces).","title":"Summary"},{"location":"ethereum-basics/what-is-a-DAO/#ether-use-cases","text":"","title":"Ether Use Cases"},{"location":"ethereum-basics/what-is-a-DAO/#network-usage","text":"Ether is required to transact on the Ethereum network. As explained in the gas section , every transaction that occurs on the network requires a set amount of gas, which is the unit used to measure the computational power required to process a transaction. To process a transaction and include it in a block, miners are expected to be compensated for this task. This is accomplished by setting a gas price with every transaction, which is the cost of 1 unit of gas, denominated in Gwei (1 ETH = 1,000,000,000 Gwei). For example, when you simply send ETH from one account to another, this cost 21,000 gas. If you were to set a gas price of 1 Gwei, this transaction would cost 0.000021 ETH.","title":"Network Usage"},{"location":"ethereum-basics/what-is-a-DAO/#store-of-value","text":"Ether, the native currency of the Ethereum network, derives its value from a myriad of different factors. It is used within the Ethereum network to perform a range of functions, including: used to pay Ethereum transaction fees (in the form of \u2018gas\u2019), used as collateral for a wide range of open finance applications (MakerDAO, Compound), can be lent or borrowed (Dharma), accepted as payment by certain retailers and service providers use it as a medium of exchange to purchase Ethereum-based tokens (via ICOs or exchanges), crypto-collectibles, in-game items, and other non-fungible tokens (NFTs) earned as a reward for completing bounties (Gitcoin, Bounties Network). Furthermore, in Ethereum 2.0 (Serenity), users will be able to become a validator and help secure the network by providing computational resources and locking up 32 Ether per validator. Due to this, it is expected that Proof of Stake will lock a substantial amount of the circulating supply of Ether. There are also discussions around introducing a \u2018fee-burn\u2019 model where a percentage of Ether used to pay transaction fees would be \u2018burned\u2019 and thus reduce the circulating supply of Ether. In addition to utility value, Ether also has speculative value. This is value that is derived from speculative activities (such as trading and investing) which currently accounts for most of the value behind all crypto-assets. As observed in 2017, crypto-assets can attract substantial speculative interest, with some assets increasing in value by 1000x over just a few months. This speculative interest often brings fresh capital into the ecosystem that can be reinvested into various verticals, but it can be damaging to the short-term market sentiment of all crypto-assets. Can\u2019t tokens on Ethereum be used instead of Ether? Theoretically, yes. Practically, no. The concept of using another asset to secure the Ethereum network is called \u2018economic abstraction\u2019 (a good primer can be found here . This would involve miners / validators accepting tokens other than Ether in exchange for adding valid transactions to new blocks. It is highly unlikely that the Ethereum protocol will ever implement economic abstraction as it could potentially reduce the security of the blockchain by compromising the value of Ether. How does valuable Ether help to secure the network? In Proof of Work systems, miners compete with each other to find a block and thus be rewarded for their work (in the form of the native crypto-asset of the protocol). As the price of the asset increases, it naturally brings with it more miners, which then increases the network difficulty. As the network difficulty increases, it becomes increasingly difficult for miners to find a block which results in large scale mining operations (commonly referred to as \u201cmining farms\u201d) being one of the only profitable ways to mine on a Proof of Work network (once it reaches a certain size). Miners can also join \u2018mining pools\u2019 in order to increase their chances of finding a block and thus increase their rewards. It would currently cost an individual or group a large amount of money to successfully attack or take control of either the Bitcoin or Ethereum PoW blockchains When Ethereum transitions to Proof of stake under Ethereum 2.0, it is expected that users will be able to stake 32 Ether per validator and receive rewards for their work in the form of additional Ether (at a dynamic issuance rate , discussed later in this essay). Under Proof of Stake, the cost of attacking Ethereum will be tied to the cost of Ether. Instead of using energy intensive mining (as it is under Proof of Work), validators will \u201cstake\u201d Ether, and will lose part or all of their stake if they attempt to behave fraudulently. The more validators with staked Ether securing the network, the more Ether an attacker would need to purchase in order to carry out an attack. Such an attack would likely rapidly increase the price of Ether and thus make it prohibitively more expensive for the attacker.","title":"Store of Value"},{"location":"ethereum-basics/what-is-a-DAO/#medium-of-exchange","text":"In order for something to function as money within an economy, it needs to act as a good medium of exchange (MoE), unit of account (UoA) and store of value (SoV). Ether is used as a medium of exchange within the Ethereum economy for a wide range of apps, with dApp providers accepting it in exchange for fungible / non-fungible tokens, or other services. It is also used as a unit of account by various parties (including companies that have raised Ether via ICOs). Finally, Ether has historically been used as a store of value, with investors and speculators purchasing Ether to hold for investment purposes, given its relative scarcity, predictable supply growth, and inherent utility. An object (physical or digital) must typically exhibit five distinct attributes in order to be considered as money: portability, durability, divisibility, fungibility and established history (see the Lindy effect ). Ether is highly portable (because it\u2019s digital), durable (again, because it\u2019s digital), divisible (up to 18 decimal places), but has limited fungibility as ETH tokens are interchangeable with one another, but accounts/addresses can be blacklisted quite easily. Privacy protocols such as zk-SNARKs will eventually improve this property for Ethereum. Ethereum has been in operation since 2015 and continues to build a strong established history. The Ethereum network (and Ether) have functioned as expected for 99.99% of its life. The other 0.01% includes surviving The DAO, multiple large hacks of smart contracts, multiple protocol-level exploits, the Shanghai DoS attacks, constant negative remarks from the wider crypto community and multiple bear markets (including a recent 94% drop in price). On top of this, Ether has additional properties such as being censorship-resistant, permission-less, pseudonymous and interoperable with other crypto-networks. The supply scheme of crypto-assets is hotly debated among various parties (especially those in the Bitcoin community) and there are currently two main approaches: a capped supply (like Bitcoin) or a low, predictable and hard to change issuance rate (like what is planned for Ethereum 2.0). In Ethereum 2.0 (with Sharding and Proof of Stake implemented), while a low inflation rate will always guarantee the validators are rewarded for securing the network, it suffers from the fact that it may dilute the value of Ether for those that are not validators. Though, this is offset by Ether being taken out of the circulating supply through staking, various open finance applications, fee burning, and people simply losing access to their Ether.","title":"Medium of Exchange"},{"location":"ethereum-basics/what-is-a-DAO/#resources","text":"Why Ether is Valuable Ether: A New Model for Money","title":"Resources"},{"location":"ethereum-basics/what-is-ethereum/","text":"What is Ethereum? Summary Ethereum is an open-source, public, blockchain-based distributed ledger featuring smart contract (scripting) functionality. It enables developers to build blockchain applications with business logic that execute in a trustless environment, while leveraging the high availability of the Ethereum network. Why does it matter? Because it opens the door to a global financial system where an Internet connection is all you need to access applications, products and services that operate in a trustless manner. Anyone can interact with the Ethereum network and participate in this digital economy, without the need for third parties and without the risk of censorship. What are Smart Contracts and Decentralized Applications? While the word \"contract\" brings to mind legal agreements; in Ethereum \"smart contracts\" are just pieces of code that run on the blockchain and are guaranteed to produce the same result for everyone who runs them. These can be used to create a wide range of Decentralized Applications (DApps) which can include games, digital collectibles, online-voting systems, financial products and many others. The term \"Smart Contract\" was coined by Nick Szabo in the 90's. Szabo used the basic example of a vending machine to describe how real-world contractual obligations can be programmed into software and hardware systems. Everyone who puts the correct amount of coins into the machine can expect to receive a product in exchange. Similarly, on Ethereum, contracts can hold value and unlock it only if specific conditions are met. The scripting language used by Ethereum is Turing-complete, essentially meaning that the types of DApps users can design is limited only by their programming skills and creativity. Resources Ethereum.org - What is Ethereum? Blockgeek - What is Ethereum Cointelegraph - What is Ethereum. Guide for Beginners Wikipedia - Ethereum The Ethereum Whitepaper","title":"What is Ethereum?"},{"location":"ethereum-basics/what-is-ethereum/#what-is-ethereum","text":"","title":"What is Ethereum?"},{"location":"ethereum-basics/what-is-ethereum/#summary","text":"Ethereum is an open-source, public, blockchain-based distributed ledger featuring smart contract (scripting) functionality. It enables developers to build blockchain applications with business logic that execute in a trustless environment, while leveraging the high availability of the Ethereum network.","title":"Summary"},{"location":"ethereum-basics/what-is-ethereum/#why-does-it-matter","text":"Because it opens the door to a global financial system where an Internet connection is all you need to access applications, products and services that operate in a trustless manner. Anyone can interact with the Ethereum network and participate in this digital economy, without the need for third parties and without the risk of censorship.","title":"Why does it matter?"},{"location":"ethereum-basics/what-is-ethereum/#what-are-smart-contracts-and-decentralized-applications","text":"While the word \"contract\" brings to mind legal agreements; in Ethereum \"smart contracts\" are just pieces of code that run on the blockchain and are guaranteed to produce the same result for everyone who runs them. These can be used to create a wide range of Decentralized Applications (DApps) which can include games, digital collectibles, online-voting systems, financial products and many others. The term \"Smart Contract\" was coined by Nick Szabo in the 90's. Szabo used the basic example of a vending machine to describe how real-world contractual obligations can be programmed into software and hardware systems. Everyone who puts the correct amount of coins into the machine can expect to receive a product in exchange. Similarly, on Ethereum, contracts can hold value and unlock it only if specific conditions are met. The scripting language used by Ethereum is Turing-complete, essentially meaning that the types of DApps users can design is limited only by their programming skills and creativity.","title":"What are Smart Contracts and Decentralized Applications?"},{"location":"ethereum-basics/what-is-ethereum/#resources","text":"Ethereum.org - What is Ethereum? Blockgeek - What is Ethereum Cointelegraph - What is Ethereum. Guide for Beginners Wikipedia - Ethereum The Ethereum Whitepaper","title":"Resources"},{"location":"glossary/crypto-acronyms/","text":"Crypto Acronyms Consensus/Sybil-control PoW - Proof of Work PoS - Proof of Stake PoA - Proof of Authority DPoS - Delegated Proof of Stake LPoS - Liquid Proof of Stake NPoS - Nominated Proof of Stake BFT - Byzantine Fault Tolerance dBFT - Delegated Byzantine Fault Tolerance pBFT - Practical Byzantine Fault Tolerance iBFT - Istanbul Byzantine Fault Tolerance Ethereum-related DeFi - Decentralized Finance DAPP - Decentralized Application ERC - Ethereum Request for Comments EIP - Ethereum Improvement Proposal EIPIP - EIP Improvement Proposal DAO - Decentralized Autonomous Organization EVM - Ethereum Virtual Machine WASM - Web Assembly VDF - Verifiable Delay Function SC - Smart Contract NFT - Non-Fungible Token Bitcoin-related BIP - Bitcoin Improvement Proposal SegWit - Segregated Witness SPV - Simple Payment Verification UTXO - Unspent Transaction Output LN - Lightning Network RSK - RootStock SC Platform MW - MimbleWimble RBF - Replace By Fee UAHF - User Activated Hard Fork UASF - User Activated Soft Fork Money-related SoV - Store of Value MoE - Medium of Exchange UoA - Unit of Account FIAT - Government-issued currency Trading ETF - Exchange Traded Fund TA - Technical Analysis FA - Fundamental Analysis DCA - Dollar Cost Averaging OTC - Over the Counter CEX - Centralized Exchange DEX - Decentralized Exchange PnD - Pump and Dump ICO - Initial Coin Offering STO - Security Token Offering SAFT - Simple Agreement for Future Tokens ROI - Return on Investment SATS - Satoshis ATH/L - All Time High ATL - All Time Low MCAP - Market Capilization BB - Bollinger Bands MACD - Moving Average Convergence Divergence RSI - Relative Strength Index SMA - Simply Moving Average EMA - Exponential Moving Average Mining CPU - Central Processing Unit GPU - Graphics Processing Unit ASIC - Application-Specific Integrated Circuit FPGA - Field Programmable Gate Array HPS - Hashes Per Second Memes HODL - A spelling error FOMO - Fear of Missing Out BTFD - Buy The Fucking Dip DYOR - Do Your Own Research FUD - Fear, Uncertainty and Doubt SFYL - Sorry For Your Loss BUIDL - A spelling error U.S Regulatory-related SEC - Securities & Exchange Commission FTC - Federal Trade Commision CFTC - Commodity Futures Trading Commission FDIC - Federal Deposit Insurance Corporation DOJ - Department of Justice FinCEN - Financial Crimes Enforcement Network FINRA - Financial Industry Regulatory Authority KYC - Know Your Customer AML - Anti-money Laundering MT - Money Transmitter Misc BP - Block Producer TXID - Transaction ID TPS - Transactions Per Second ZK - Zero Knowledge P2P - Peer to Peer ALT - Alternative Cryptocurrency HF - Hard Fork SF - Soft Fork WP - Whitepaper 2FA - Two Factor Authentication DoS - Denial of Service DDoS - Distributed Denial of Service IPFS - Interplanetary File System PKI - Public Key Infrastructure CT - Crypto Twitter NONCE - Number Only Once HW - Hardware Wallet MCD - Multi-collateral Dai CDP - Collateralized Debt Position EEA - Enterprise Ethereum Alliance HTLC - Hashed Timelock Contract VRF - Verfiable Random Function DAG - Directed Acyclic Graph Security and Privacy SNARKs - Succinct Non-Interactive ARguments of Knowledge STARKs - Scalable Transparent ARguments of Knowledge MPC - Multi-Party Computation Resources A Glossary of Common Terms in the Ethereum / Crypto Space","title":"Acronyms"},{"location":"glossary/crypto-acronyms/#crypto-acronyms","text":"","title":"Crypto Acronyms"},{"location":"glossary/crypto-acronyms/#consensussybil-control","text":"PoW - Proof of Work PoS - Proof of Stake PoA - Proof of Authority DPoS - Delegated Proof of Stake LPoS - Liquid Proof of Stake NPoS - Nominated Proof of Stake BFT - Byzantine Fault Tolerance dBFT - Delegated Byzantine Fault Tolerance pBFT - Practical Byzantine Fault Tolerance iBFT - Istanbul Byzantine Fault Tolerance","title":"Consensus/Sybil-control"},{"location":"glossary/crypto-acronyms/#ethereum-related","text":"DeFi - Decentralized Finance DAPP - Decentralized Application ERC - Ethereum Request for Comments EIP - Ethereum Improvement Proposal EIPIP - EIP Improvement Proposal DAO - Decentralized Autonomous Organization EVM - Ethereum Virtual Machine WASM - Web Assembly VDF - Verifiable Delay Function SC - Smart Contract NFT - Non-Fungible Token","title":"Ethereum-related"},{"location":"glossary/crypto-acronyms/#bitcoin-related","text":"BIP - Bitcoin Improvement Proposal SegWit - Segregated Witness SPV - Simple Payment Verification UTXO - Unspent Transaction Output LN - Lightning Network RSK - RootStock SC Platform MW - MimbleWimble RBF - Replace By Fee UAHF - User Activated Hard Fork UASF - User Activated Soft Fork","title":"Bitcoin-related"},{"location":"glossary/crypto-acronyms/#money-related","text":"SoV - Store of Value MoE - Medium of Exchange UoA - Unit of Account FIAT - Government-issued currency","title":"Money-related"},{"location":"glossary/crypto-acronyms/#trading","text":"ETF - Exchange Traded Fund TA - Technical Analysis FA - Fundamental Analysis DCA - Dollar Cost Averaging OTC - Over the Counter CEX - Centralized Exchange DEX - Decentralized Exchange PnD - Pump and Dump ICO - Initial Coin Offering STO - Security Token Offering SAFT - Simple Agreement for Future Tokens ROI - Return on Investment SATS - Satoshis ATH/L - All Time High ATL - All Time Low MCAP - Market Capilization BB - Bollinger Bands MACD - Moving Average Convergence Divergence RSI - Relative Strength Index SMA - Simply Moving Average EMA - Exponential Moving Average","title":"Trading"},{"location":"glossary/crypto-acronyms/#mining","text":"CPU - Central Processing Unit GPU - Graphics Processing Unit ASIC - Application-Specific Integrated Circuit FPGA - Field Programmable Gate Array HPS - Hashes Per Second","title":"Mining"},{"location":"glossary/crypto-acronyms/#memes","text":"HODL - A spelling error FOMO - Fear of Missing Out BTFD - Buy The Fucking Dip DYOR - Do Your Own Research FUD - Fear, Uncertainty and Doubt SFYL - Sorry For Your Loss BUIDL - A spelling error","title":"Memes"},{"location":"glossary/crypto-acronyms/#us-regulatory-related","text":"SEC - Securities & Exchange Commission FTC - Federal Trade Commision CFTC - Commodity Futures Trading Commission FDIC - Federal Deposit Insurance Corporation DOJ - Department of Justice FinCEN - Financial Crimes Enforcement Network FINRA - Financial Industry Regulatory Authority KYC - Know Your Customer AML - Anti-money Laundering MT - Money Transmitter","title":"U.S Regulatory-related"},{"location":"glossary/crypto-acronyms/#misc","text":"BP - Block Producer TXID - Transaction ID TPS - Transactions Per Second ZK - Zero Knowledge P2P - Peer to Peer ALT - Alternative Cryptocurrency HF - Hard Fork SF - Soft Fork WP - Whitepaper 2FA - Two Factor Authentication DoS - Denial of Service DDoS - Distributed Denial of Service IPFS - Interplanetary File System PKI - Public Key Infrastructure CT - Crypto Twitter NONCE - Number Only Once HW - Hardware Wallet MCD - Multi-collateral Dai CDP - Collateralized Debt Position EEA - Enterprise Ethereum Alliance HTLC - Hashed Timelock Contract VRF - Verfiable Random Function DAG - Directed Acyclic Graph","title":"Misc"},{"location":"glossary/crypto-acronyms/#security-and-privacy","text":"SNARKs - Succinct Non-Interactive ARguments of Knowledge STARKs - Scalable Transparent ARguments of Knowledge MPC - Multi-Party Computation","title":"Security and Privacy"},{"location":"glossary/crypto-acronyms/#resources","text":"A Glossary of Common Terms in the Ethereum / Crypto Space","title":"Resources"},{"location":"glossary/ens-domains/","text":"ENS Domain directory","title":"ENS Domain Directory"},{"location":"glossary/ens-domains/#ens-domain-directory","text":"","title":"ENS Domain directory"},{"location":"glossary/sideways-dictionary/2FA/","text":"2FA Two-Form Authentication (2FA) is like... a time-based code that only the bank manager knows and is used to open the bank vault. that scene in spy movies where only the real spy would know the secret phrase and response.","title":"2FA"},{"location":"glossary/sideways-dictionary/2FA/#2fa","text":"","title":"2FA"},{"location":"glossary/sideways-dictionary/2FA/#two-form-authentication-2fa-is-like","text":"a time-based code that only the bank manager knows and is used to open the bank vault. that scene in spy movies where only the real spy would know the secret phrase and response.","title":"Two-Form Authentication (2FA) is like..."},{"location":"glossary/sideways-dictionary/blockchain/","text":"Blockchain Blockchain is like... a poker game where everyone writes down every bet made. By comparing their records at the end of each round, the players can make sure no one is cheating.","title":"Blockchain"},{"location":"glossary/sideways-dictionary/blockchain/#blockchain","text":"","title":"Blockchain"},{"location":"glossary/sideways-dictionary/blockchain/#blockchain-is-like","text":"a poker game where everyone writes down every bet made. By comparing their records at the end of each round, the players can make sure no one is cheating.","title":"Blockchain is like..."},{"location":"glossary/sideways-dictionary/cold-storage/","text":"Cold storage Cold storage is like... when a bank puts their gold in a vault underground to make it impossible for a petty bankrobber to steal it. when a cashier takes the excess money from their cash register drawer gives it to their manager to deposit into the safe.","title":"Cold Storage"},{"location":"glossary/sideways-dictionary/cold-storage/#cold-storage","text":"","title":"Cold storage"},{"location":"glossary/sideways-dictionary/cold-storage/#cold-storage-is-like","text":"when a bank puts their gold in a vault underground to make it impossible for a petty bankrobber to steal it. when a cashier takes the excess money from their cash register drawer gives it to their manager to deposit into the safe.","title":"Cold storage is like..."},{"location":"glossary/sideways-dictionary/cryptojacking/","text":"Cryptojacking Cryptojacking is like... in the movie Office Space where a group alters the code of a bank's computer to steal pennies from every bank transaction plugging in an extension cord to your neighbor's house to earn/save money by stealing their energy","title":"Cryptojacking"},{"location":"glossary/sideways-dictionary/cryptojacking/#cryptojacking","text":"","title":"Cryptojacking"},{"location":"glossary/sideways-dictionary/cryptojacking/#cryptojacking-is-like","text":"in the movie Office Space where a group alters the code of a bank's computer to steal pennies from every bank transaction plugging in an extension cord to your neighbor's house to earn/save money by stealing their energy","title":"Cryptojacking is like..."},{"location":"glossary/sideways-dictionary/ddos/","text":"Distributed Denial of Service (DDoS) Attack A Distributed Denial of Service (DDoS) Attack is like... if a large flash mob tried enter a restaurant at the same time. The restaurant quickly is overwhelmed and no new customers are able to be served until the mob is dealt with or goes away.","title":"DDOS"},{"location":"glossary/sideways-dictionary/ddos/#distributed-denial-of-service-ddos-attack","text":"","title":"Distributed Denial of Service (DDoS) Attack"},{"location":"glossary/sideways-dictionary/ddos/#a-distributed-denial-of-service-ddos-attack-is-like","text":"if a large flash mob tried enter a restaurant at the same time. The restaurant quickly is overwhelmed and no new customers are able to be served until the mob is dealt with or goes away.","title":"A Distributed Denial of Service (DDoS) Attack is like..."},{"location":"glossary/sideways-dictionary/difficulty/","text":"Difficulty Difficulty is like... the odds you have to winning the the lottery a taskmaster who checks to see if every a block is shipped out on time.","title":"Difficulty"},{"location":"glossary/sideways-dictionary/difficulty/#difficulty","text":"","title":"Difficulty"},{"location":"glossary/sideways-dictionary/difficulty/#difficulty-is-like","text":"the odds you have to winning the the lottery a taskmaster who checks to see if every a block is shipped out on time.","title":"Difficulty is like..."},{"location":"glossary/sideways-dictionary/double-spend/","text":"Double Spend A double spend is like... when someone's check bounces but they've already left the store with the product and so the store is out the money","title":"Double Spend"},{"location":"glossary/sideways-dictionary/double-spend/#double-spend","text":"","title":"Double Spend"},{"location":"glossary/sideways-dictionary/double-spend/#a-double-spend-is-like","text":"when someone's check bounces but they've already left the store with the product and so the store is out the money","title":"A double spend is like..."},{"location":"glossary/sideways-dictionary/forks/","text":"Forks A fork is like... in a time-travel movie where an action taken by the main character splits the timeline and creates and alternate timeline.","title":"Forks"},{"location":"glossary/sideways-dictionary/forks/#forks","text":"","title":"Forks"},{"location":"glossary/sideways-dictionary/forks/#a-fork-is-like","text":"in a time-travel movie where an action taken by the main character splits the timeline and creates and alternate timeline.","title":"A fork is like..."},{"location":"glossary/sideways-dictionary/multi-sig/","text":"Multi-signature wallets A multi-signature wallet is like... a joint savings account that requires more than one account holder to sign checks. a bank vault that requires each bank manager's password to open. a planning committee where every expense needs to be signed off on by each member of the committee. in a video game lobby where each player needs to approve of each action like readying up to start the game, kicking a teammate, etc. No one player alone can perform these actions.","title":"Multi-Sig"},{"location":"glossary/sideways-dictionary/multi-sig/#multi-signature-wallets","text":"","title":"Multi-signature wallets"},{"location":"glossary/sideways-dictionary/multi-sig/#a-multi-signature-wallet-is-like","text":"a joint savings account that requires more than one account holder to sign checks. a bank vault that requires each bank manager's password to open. a planning committee where every expense needs to be signed off on by each member of the committee. in a video game lobby where each player needs to approve of each action like readying up to start the game, kicking a teammate, etc. No one player alone can perform these actions.","title":"A multi-signature wallet is like..."},{"location":"glossary/sideways-dictionary/smart-contract/","text":"Smart Contract A smart contract is like... a vending machine. You can trust that if you give it your money that it is programmed to accept your money and dispense the drink you selected.","title":"Smart Contract"},{"location":"glossary/sideways-dictionary/smart-contract/#smart-contract","text":"","title":"Smart Contract"},{"location":"glossary/sideways-dictionary/smart-contract/#a-smart-contract-is-like","text":"a vending machine. You can trust that if you give it your money that it is programmed to accept your money and dispense the drink you selected.","title":"A smart contract is like..."},{"location":"glossary/sideways-dictionary/state-rent/","text":"State Rent State rent is like... the yearly fee your bank charges you to keep your account open the rent that a store pays the owner of its building","title":"State Rent"},{"location":"glossary/sideways-dictionary/state-rent/#state-rent","text":"","title":"State Rent"},{"location":"glossary/sideways-dictionary/state-rent/#state-rent-is-like","text":"the yearly fee your bank charges you to keep your account open the rent that a store pays the owner of its building","title":"State rent is like..."},{"location":"glossary/sideways-dictionary/stateless-clients/","text":"Stateless clients A stateless client is like... hiring an accountant who does your all your bookkeeping but charges fees for every piece of info they must look up for every transaction you make","title":"Stateless Clients"},{"location":"glossary/sideways-dictionary/stateless-clients/#stateless-clients","text":"","title":"Stateless clients"},{"location":"glossary/sideways-dictionary/stateless-clients/#a-stateless-client-is-like","text":"hiring an accountant who does your all your bookkeeping but charges fees for every piece of info they must look up for every transaction you make","title":"A stateless client is like..."},{"location":"glossary/sideways-dictionary/uncle-blocks/","text":"Uncle Blocks Uncle Blocks are like... the smaller prizes that you receive if you don't win the big prize in a promotional giveaway.","title":"Uncle Blocks"},{"location":"glossary/sideways-dictionary/uncle-blocks/#uncle-blocks","text":"","title":"Uncle Blocks"},{"location":"glossary/sideways-dictionary/uncle-blocks/#uncle-blocks-are-like","text":"the smaller prizes that you receive if you don't win the big prize in a promotional giveaway.","title":"Uncle Blocks are like..."},{"location":"glossary/sideways-dictionary/wei/","text":"Wei Wei is like... a penny to the USD, the smallest unit","title":"Wei"},{"location":"glossary/sideways-dictionary/wei/#wei","text":"","title":"Wei"},{"location":"glossary/sideways-dictionary/wei/#wei-is-like","text":"a penny to the USD, the smallest unit","title":"Wei is like..."},{"location":"glossary/sideways-dictionary/what-is-the-sideways-dictionary/","text":"Sideways Dictionary Taking a page from The Sideways Dictionary , this sideways dictionary provides analogies instead of definitions for key terms and concepts of the Ethereum ecosystem. This section of EthHub is intended to be a resource for anyone who is still struggling with grasping a concept. Sometimes a definition doesn't quite click in your head. We hope this collection of analogies and explanations can be used as a shared resource for all members of the Ethereum community, newcomers and oldtimers alike. Resources Original Sideways Dictionary","title":"What is the sideways dictionary?"},{"location":"glossary/sideways-dictionary/what-is-the-sideways-dictionary/#sideways-dictionary","text":"Taking a page from The Sideways Dictionary , this sideways dictionary provides analogies instead of definitions for key terms and concepts of the Ethereum ecosystem. This section of EthHub is intended to be a resource for anyone who is still struggling with grasping a concept. Sometimes a definition doesn't quite click in your head. We hope this collection of analogies and explanations can be used as a shared resource for all members of the Ethereum community, newcomers and oldtimers alike.","title":"Sideways Dictionary"},{"location":"glossary/sideways-dictionary/what-is-the-sideways-dictionary/#resources","text":"Original Sideways Dictionary","title":"Resources"},{"location":"guides/a-straightforward-guide-erc20-tokens/","text":"A Straightforward Guide to ERC20 Tokens Summary A token can be defined as something that serves as a visible or tangible representation of something else. An example of this could be arcade tokens, these pieces of metal are the physical representation of the amount of games that a person is able to play. However, unlike arcade tokens, tokens built on top of Ethereum are entirely virtual, but can still have representational value assigned to them in the same way. ERC20 tokens are by far the most used token on Ethereum and this guide will break down the ERC20 standard as well as what it means for something to be an ERC20 token. The Importance of Standards When a large group of people are trying to come together to build something, it is important that there be a community standard so that all builders are able to format their work. For example, every country has a standard for which side of the road cars are supposed to drive on. As a result, car manufacturers must build cars that have steering wheels that are compatible with local standards. In the same way with Ethereum tokens, a standard was needed to simplify the experience of creating and working with tokens. If no one followed a standard and each team had their own way of building tokens with different functionality then every wallet, exchange, and smart contract would need to write code specifically for every token. The ERC20 standard is a specification that makes it easy to add ERC20 compliant tokens to a service or smart contract. Fungibility and Divisibility of ERC20s ERC20 tokens are fungible in nature, meaning that there isn\u2019t a distinction between individual tokens. For example, if I have 100 metal marbles in my hand that are all the same size and color, it doesn\u2019t matter which one I give you. In the same way, if I have 100 of the same ERC20 token, it doesn\u2019t matter which one I give you. This contrasts with ERC721 tokens which are non-fungible tokens (NFTs) such as CryptoKitties. In addition, ERC20s can be thought of as the most simple unit of account and can be used for a wide range of things including currency, rewards points, debt slips, interest accruing bonds, and much more. They are also highly divisible and can be sent in extremely small increments. The ERC20 Standard The standard is made up of six required functions, two required events, and three optional properties. To begin with, it is important to note that the token contract is in charge of maintaining a list of addresses and associated balances as well as allowances. Allowances are used to allow different addresses to spend the tokens from your balance on your behalf. Let\u2019s use the token contract below as an example of a standard ERC20 token contract that implements all the requirements as well as the optional properties. We can currently see that there is a total supply of 100 tokens and are all owned by a single address. In addition, there haven\u2019t been any allowances set. Optional Properties Even though they are optional, most ERC20 tokens implement these properties to give their token more descriptive attributes. * name * symbol * decimals - The number of decimals determines how divisible the token is. The most common is 18 decimals which means that for every one token the smallest divisible amount is 1x10^-18. Required Functions totalSupply - The totalSupply function returns the current supply of tokens for the contract. In this case the total supply is 100 tokens. balanceOf - If someone calls the balanceOf function with a specific address, it will return the token balance for that address. In this example, balanceOf is being called with 0x58c... and returns 100 tokens. transfer - The transfer function requires a recipient address as well as an amount to send. The function will only work if the amount specified is less than or equal to the sender's balance. We can see in the example below that the transfer simply decreases the sender\u2019s balance by 10 and increases the recipient's balance by 10. Once complete, the function returns a true value to show that the transfer was successful. approve - If an address has a balance, then it can use the approve function to allow a specific amount of it\u2019s balance to be spent by another address. Below, address 0x123... is allowing 0x58c... to spend 10 of its tokens. Similar to transfer, the function returns a true value to show that the approval was successful. Note that this function doesn\u2019t affect the balances directly, only the allowances. allowance - The allowance function is used to see how much an address is allowed to spend from another address. We can confirm that since the approve function has already been called and updated the allowance, that the current allowance for 0x58c... to spend from 0x123... is 10 tokens. transferFrom - The transferFrom function is used when an address with an allowance wants to transfer the balance from one address to another. So 0x58c... can now move its allotted 10 tokens to 0xa3b... by specifying the address that they want to transfer from, the recipient address, and the amount. Since 0x58c\u2026 has a valid allowance of 10 tokens from 0x123... the transaction is valid and the 10 tokens are sent to 0xa3b.... Required Events Events in Ethereum are usually triggered when a transaction changes a contract\u2019s state. They are important because they are able to provide information to things that are external to the Ethereum blockchain, which can then trigger other external things to happen. In ERC20 token contracts, an event is fired when either the Balances or Allowances are updated. Transfer - The Transfer event is fired when someone either successfully uses the transfer or transferFrom functions. It will give you the address of both the recipient and the sender as well as the amount of tokens that was sent in the transaction. Approval - The Approval event is fired when the approve function is successfully called and will return the owner, spender, and the approved amount. Additional Features for ERC20 Tokens In addition to the required functions, there are other features that ERC20 token contracts can add. The two primary ones are mintable and burnable tokens. Mintable tokens have a minting function that allows for the creation of additional tokens, meaning that the total supply is not fixed. The minting functions are usually only allowed to be called by a specific set of privileged addresses. While burnable tokens are the opposite in that they can be burned and the supply can be reduced when called by authorized addresses. It is also possible to have a contract that includes both minting and burning functionality. Resources EIP20 ETH Github A Guide to Events and Logs in Ethereum Smart Contracts","title":"A Straightforward Guide to ERC20 Tokens"},{"location":"guides/a-straightforward-guide-erc20-tokens/#a-straightforward-guide-to-erc20-tokens","text":"","title":"A Straightforward Guide to ERC20 Tokens"},{"location":"guides/a-straightforward-guide-erc20-tokens/#summary","text":"A token can be defined as something that serves as a visible or tangible representation of something else. An example of this could be arcade tokens, these pieces of metal are the physical representation of the amount of games that a person is able to play. However, unlike arcade tokens, tokens built on top of Ethereum are entirely virtual, but can still have representational value assigned to them in the same way. ERC20 tokens are by far the most used token on Ethereum and this guide will break down the ERC20 standard as well as what it means for something to be an ERC20 token.","title":"Summary"},{"location":"guides/a-straightforward-guide-erc20-tokens/#the-importance-of-standards","text":"When a large group of people are trying to come together to build something, it is important that there be a community standard so that all builders are able to format their work. For example, every country has a standard for which side of the road cars are supposed to drive on. As a result, car manufacturers must build cars that have steering wheels that are compatible with local standards. In the same way with Ethereum tokens, a standard was needed to simplify the experience of creating and working with tokens. If no one followed a standard and each team had their own way of building tokens with different functionality then every wallet, exchange, and smart contract would need to write code specifically for every token. The ERC20 standard is a specification that makes it easy to add ERC20 compliant tokens to a service or smart contract.","title":"The Importance of Standards"},{"location":"guides/a-straightforward-guide-erc20-tokens/#fungibility-and-divisibility-of-erc20s","text":"ERC20 tokens are fungible in nature, meaning that there isn\u2019t a distinction between individual tokens. For example, if I have 100 metal marbles in my hand that are all the same size and color, it doesn\u2019t matter which one I give you. In the same way, if I have 100 of the same ERC20 token, it doesn\u2019t matter which one I give you. This contrasts with ERC721 tokens which are non-fungible tokens (NFTs) such as CryptoKitties. In addition, ERC20s can be thought of as the most simple unit of account and can be used for a wide range of things including currency, rewards points, debt slips, interest accruing bonds, and much more. They are also highly divisible and can be sent in extremely small increments.","title":"Fungibility and Divisibility of ERC20s"},{"location":"guides/a-straightforward-guide-erc20-tokens/#the-erc20-standard","text":"The standard is made up of six required functions, two required events, and three optional properties. To begin with, it is important to note that the token contract is in charge of maintaining a list of addresses and associated balances as well as allowances. Allowances are used to allow different addresses to spend the tokens from your balance on your behalf. Let\u2019s use the token contract below as an example of a standard ERC20 token contract that implements all the requirements as well as the optional properties. We can currently see that there is a total supply of 100 tokens and are all owned by a single address. In addition, there haven\u2019t been any allowances set.","title":"The ERC20 Standard"},{"location":"guides/a-straightforward-guide-erc20-tokens/#optional-properties","text":"Even though they are optional, most ERC20 tokens implement these properties to give their token more descriptive attributes. * name * symbol * decimals - The number of decimals determines how divisible the token is. The most common is 18 decimals which means that for every one token the smallest divisible amount is 1x10^-18.","title":"Optional Properties"},{"location":"guides/a-straightforward-guide-erc20-tokens/#required-functions","text":"totalSupply - The totalSupply function returns the current supply of tokens for the contract. In this case the total supply is 100 tokens. balanceOf - If someone calls the balanceOf function with a specific address, it will return the token balance for that address. In this example, balanceOf is being called with 0x58c... and returns 100 tokens. transfer - The transfer function requires a recipient address as well as an amount to send. The function will only work if the amount specified is less than or equal to the sender's balance. We can see in the example below that the transfer simply decreases the sender\u2019s balance by 10 and increases the recipient's balance by 10. Once complete, the function returns a true value to show that the transfer was successful. approve - If an address has a balance, then it can use the approve function to allow a specific amount of it\u2019s balance to be spent by another address. Below, address 0x123... is allowing 0x58c... to spend 10 of its tokens. Similar to transfer, the function returns a true value to show that the approval was successful. Note that this function doesn\u2019t affect the balances directly, only the allowances. allowance - The allowance function is used to see how much an address is allowed to spend from another address. We can confirm that since the approve function has already been called and updated the allowance, that the current allowance for 0x58c... to spend from 0x123... is 10 tokens. transferFrom - The transferFrom function is used when an address with an allowance wants to transfer the balance from one address to another. So 0x58c... can now move its allotted 10 tokens to 0xa3b... by specifying the address that they want to transfer from, the recipient address, and the amount. Since 0x58c\u2026 has a valid allowance of 10 tokens from 0x123... the transaction is valid and the 10 tokens are sent to 0xa3b....","title":"Required Functions"},{"location":"guides/a-straightforward-guide-erc20-tokens/#required-events","text":"Events in Ethereum are usually triggered when a transaction changes a contract\u2019s state. They are important because they are able to provide information to things that are external to the Ethereum blockchain, which can then trigger other external things to happen. In ERC20 token contracts, an event is fired when either the Balances or Allowances are updated. Transfer - The Transfer event is fired when someone either successfully uses the transfer or transferFrom functions. It will give you the address of both the recipient and the sender as well as the amount of tokens that was sent in the transaction. Approval - The Approval event is fired when the approve function is successfully called and will return the owner, spender, and the approved amount.","title":"Required Events"},{"location":"guides/a-straightforward-guide-erc20-tokens/#additional-features-for-erc20-tokens","text":"In addition to the required functions, there are other features that ERC20 token contracts can add. The two primary ones are mintable and burnable tokens. Mintable tokens have a minting function that allows for the creation of additional tokens, meaning that the total supply is not fixed. The minting functions are usually only allowed to be called by a specific set of privileged addresses. While burnable tokens are the opposite in that they can be burned and the supply can be reduced when called by authorized addresses. It is also possible to have a contract that includes both minting and burning functionality.","title":"Additional Features for ERC20 Tokens"},{"location":"guides/a-straightforward-guide-erc20-tokens/#resources","text":"EIP20 ETH Github A Guide to Events and Logs in Ethereum Smart Contracts","title":"Resources"},{"location":"guides/deciphering-a-transaction-on-etherscan/","text":"Deciphering a Transaction on Etherscan Summary If you have started to dip your toe into the Ethereum world, chances are you have seen or been redirected to Etherscan. Etherscan is a block explorer, which allows users to view information about transactions that have been submitted to the blockchain, verify contract code, and visualize network data. This guide will focus on explaining the information that is displayed for different types of transactions on Etherscan. Components of an Ethereum Transaction on Etherscan Transaction Hash: A unique identifier that can be used to locate a specific transaction. Status: The current state of a transaction (Success, Failed, or Pending). Block: The block number that the transaction was included in. Timestamp: The time that the block was mined in UTC. From: The account that originally sent the transaction. To: The account that the transaction is addressed to. Value: The amount of Ether included in the transaction. Transaction Fee: The amount of Ether paid to the miner for processing the transaction, which is calculated by multiplying the amount of gas used by the gas price. Gas Limit: The upper limit of how much computational work and storage the sender is willing to expend on the transaction. Gas Used by Transaction: The amount of computational work and storage used in the transaction. Gas Price: The amount of Ether per unit of gas the user is willing to pay for the transaction, commonly denoted in a subunit of Ether known as Gwei. 1 Gwei = 1x10^-9 Ether. Nonce: The count of transactions sent out of the account. The number is initialized at 0 and is incremented by 1 for each transaction sent. Input Data: Information that is passed to a smart contract when a transaction is sent to its address. However, if the transaction is creating a contract, the contract\u2019s bytecode is placed in the input data field. I recommend checking out this article if you are not very familiar with how gas is used in Ethereum. Gas and Ethereum Transactions Reading data from the blockchain has no cost, however, when you want to change data recorded in the chain you are required to submit a transaction. In short, gas is a way of measuring the amount of computation and storage required to execute a change. Transactions in Bitcoin are rather straightforward, you have an amount of BTC and you create a transaction that sends it to another address. With the complexity of smart contracts, Ethereum transactions can have a large range of effects. In order to make sure that a user appropriately pays for the complexity of their transaction, gas is used to measure how much computational work and storage is needed in order to execute it. When submitting a transaction, a user will specify a gas limit, which is the highest amount of gas the transaction is allowed to expend. The transaction will fail if it exceeds the limit. The gas price is the amount of Ether the user is willing to pay per unit of gas (most commonly expressed in Gwei. 1 Gwei = 1x10^-9 Ether). For transactions where not all of the gas is used, the remaining Ether is refunded back to the account that created the transaction. \u201cOut of Gas\u201d Error Message There are a number of reasons why an Ethereum transaction might fail. The most common issue is that the transaction ran out of gas when the miner attempted to execute it. This will be apparent when you see a message that says \u201cWarning! Error encountered during contract execution [Out of gas]\u201d on Etherscan. This means that the transaction surpassed the gas limit that was specified when the transaction was created. Please use caution when setting the gas limit for a transaction that will be sent to a contract. If the limit is set too high the transaction might burn up all the Ether in your account. When a transaction runs out of gas, the proposed transaction fails, but the Ether that was dedicated to paying for gas is still given to the miner. Externally Owned Accounts (EOA) vs Contract Accounts There are two different types of accounts in Ethereum. The first are externally owned accounts (EOA), which are derived from a private key and able to generate transactions to poke the Ethereum network to do something. The second kind are contract accounts, which are able to store and execute code only when prompted by a transaction from an EOA. There are three different types of transactions between these accounts: an EOA sending Ether to another EOA, an EOA creating a contract, or an EOA sending a transaction to a contract. Transferring Ether Between Two Externally Owned Accounts (EOA) In the random transaction below, we can see that one externally owned account (EOA) is sending Ether to another EOA. We know this because the data input is empty, the To address isn\u2019t labeled as a contract address, and the value field is filled out. When moving Ether, we are telling the Ethereum network please decrease my balance x amount and increase the other account\u2019s balance by that amount. If the transaction is valid, then the global state of Ethereum updates the balances. In terms of gas considerations, a standard transfer of Ether from one EOA to another EOA costs 21,000 gas, which we can see is the amount used. Transferring ERC20 Tokens One of the biggest differences between transferring ERC20 tokens versus transferring Ether is that the transaction is addressed to the Token\u2019s contract address rather than the account we want to send the tokens to. In the random transaction below, the input data field includes the function we would like to call (in this case transfer). In addition, the inputs for the function, which includes the recipient's address along with the amount of tokens we want to send formatted in hexadecimal . Etherscan marks the To account as the DAI contract address and added a field called Tokens Transferred to display the input data in a more human readable format. Typically, the value field is left empty for token transfers because we only need to update to the contract\u2019s balances. Lastly, the gas cost for transferring ERC20 tokens can vary depending on how to contract was implemented. An Externally Owned Account (EOA) Creating a Contract Below is the transaction that created the Ethhub contract wallet. The most notable difference for contract creation transactions is that the input data contains the bytecode for the contract\u2019s logic. We can see that the contract\u2019s address is displayed in the To field with \u201cCreated\u201d next to it. Transferring Ether from an Externally Owned Account (EOA) to a Contract Account If you are sending Ether to a contract address, the gas cost can vary from the standard 21,000 gas. Viewing the transaction above we can see that someone made an Ether deposit to the Ethhub contract wallet, which required 22,511 gas. This is because the contract wallet also emits a Deposit event when receiving Ether, which bumps the gas cost over 21,000. That is why it is important to know what kind of account you are sending to before you assume that the gas cost will be 21,000 gas or else the transaction might run out of gas. In addition, there can be harmful side effects to sending a transaction to a contract that you aren\u2019t familiar with because contracts are able to forward messages to other contracts. Meaning that calling a function or simply depositing Ether to a malicious contract could execute code that might yield a negative result. Please always make sure that you trust the contract that you are about to submit a transaction to and set a reasonable gas limit. Resources Etherscan What is Ethereum Gas? Transactions in Ethereum","title":"Deciphering a Transaction on Etherscan"},{"location":"guides/deciphering-a-transaction-on-etherscan/#deciphering-a-transaction-on-etherscan","text":"","title":"Deciphering a Transaction on Etherscan"},{"location":"guides/deciphering-a-transaction-on-etherscan/#summary","text":"If you have started to dip your toe into the Ethereum world, chances are you have seen or been redirected to Etherscan. Etherscan is a block explorer, which allows users to view information about transactions that have been submitted to the blockchain, verify contract code, and visualize network data. This guide will focus on explaining the information that is displayed for different types of transactions on Etherscan.","title":"Summary"},{"location":"guides/deciphering-a-transaction-on-etherscan/#components-of-an-ethereum-transaction-on-etherscan","text":"Transaction Hash: A unique identifier that can be used to locate a specific transaction. Status: The current state of a transaction (Success, Failed, or Pending). Block: The block number that the transaction was included in. Timestamp: The time that the block was mined in UTC. From: The account that originally sent the transaction. To: The account that the transaction is addressed to. Value: The amount of Ether included in the transaction. Transaction Fee: The amount of Ether paid to the miner for processing the transaction, which is calculated by multiplying the amount of gas used by the gas price. Gas Limit: The upper limit of how much computational work and storage the sender is willing to expend on the transaction. Gas Used by Transaction: The amount of computational work and storage used in the transaction. Gas Price: The amount of Ether per unit of gas the user is willing to pay for the transaction, commonly denoted in a subunit of Ether known as Gwei. 1 Gwei = 1x10^-9 Ether. Nonce: The count of transactions sent out of the account. The number is initialized at 0 and is incremented by 1 for each transaction sent. Input Data: Information that is passed to a smart contract when a transaction is sent to its address. However, if the transaction is creating a contract, the contract\u2019s bytecode is placed in the input data field. I recommend checking out this article if you are not very familiar with how gas is used in Ethereum.","title":"Components of an Ethereum Transaction on Etherscan"},{"location":"guides/deciphering-a-transaction-on-etherscan/#gas-and-ethereum-transactions","text":"Reading data from the blockchain has no cost, however, when you want to change data recorded in the chain you are required to submit a transaction. In short, gas is a way of measuring the amount of computation and storage required to execute a change. Transactions in Bitcoin are rather straightforward, you have an amount of BTC and you create a transaction that sends it to another address. With the complexity of smart contracts, Ethereum transactions can have a large range of effects. In order to make sure that a user appropriately pays for the complexity of their transaction, gas is used to measure how much computational work and storage is needed in order to execute it. When submitting a transaction, a user will specify a gas limit, which is the highest amount of gas the transaction is allowed to expend. The transaction will fail if it exceeds the limit. The gas price is the amount of Ether the user is willing to pay per unit of gas (most commonly expressed in Gwei. 1 Gwei = 1x10^-9 Ether). For transactions where not all of the gas is used, the remaining Ether is refunded back to the account that created the transaction.","title":"Gas and Ethereum Transactions"},{"location":"guides/deciphering-a-transaction-on-etherscan/#out-of-gas-error-message","text":"There are a number of reasons why an Ethereum transaction might fail. The most common issue is that the transaction ran out of gas when the miner attempted to execute it. This will be apparent when you see a message that says \u201cWarning! Error encountered during contract execution [Out of gas]\u201d on Etherscan. This means that the transaction surpassed the gas limit that was specified when the transaction was created. Please use caution when setting the gas limit for a transaction that will be sent to a contract. If the limit is set too high the transaction might burn up all the Ether in your account. When a transaction runs out of gas, the proposed transaction fails, but the Ether that was dedicated to paying for gas is still given to the miner.","title":"\u201cOut of Gas\u201d Error Message"},{"location":"guides/deciphering-a-transaction-on-etherscan/#externally-owned-accounts-eoa-vs-contract-accounts","text":"There are two different types of accounts in Ethereum. The first are externally owned accounts (EOA), which are derived from a private key and able to generate transactions to poke the Ethereum network to do something. The second kind are contract accounts, which are able to store and execute code only when prompted by a transaction from an EOA. There are three different types of transactions between these accounts: an EOA sending Ether to another EOA, an EOA creating a contract, or an EOA sending a transaction to a contract.","title":"Externally Owned Accounts (EOA) vs Contract Accounts"},{"location":"guides/deciphering-a-transaction-on-etherscan/#transferring-ether-between-two-externally-owned-accounts-eoa","text":"In the random transaction below, we can see that one externally owned account (EOA) is sending Ether to another EOA. We know this because the data input is empty, the To address isn\u2019t labeled as a contract address, and the value field is filled out. When moving Ether, we are telling the Ethereum network please decrease my balance x amount and increase the other account\u2019s balance by that amount. If the transaction is valid, then the global state of Ethereum updates the balances. In terms of gas considerations, a standard transfer of Ether from one EOA to another EOA costs 21,000 gas, which we can see is the amount used.","title":"Transferring Ether Between Two Externally Owned Accounts (EOA)"},{"location":"guides/deciphering-a-transaction-on-etherscan/#transferring-erc20-tokens","text":"One of the biggest differences between transferring ERC20 tokens versus transferring Ether is that the transaction is addressed to the Token\u2019s contract address rather than the account we want to send the tokens to. In the random transaction below, the input data field includes the function we would like to call (in this case transfer). In addition, the inputs for the function, which includes the recipient's address along with the amount of tokens we want to send formatted in hexadecimal . Etherscan marks the To account as the DAI contract address and added a field called Tokens Transferred to display the input data in a more human readable format. Typically, the value field is left empty for token transfers because we only need to update to the contract\u2019s balances. Lastly, the gas cost for transferring ERC20 tokens can vary depending on how to contract was implemented.","title":"Transferring ERC20 Tokens"},{"location":"guides/deciphering-a-transaction-on-etherscan/#an-externally-owned-account-eoa-creating-a-contract","text":"Below is the transaction that created the Ethhub contract wallet. The most notable difference for contract creation transactions is that the input data contains the bytecode for the contract\u2019s logic. We can see that the contract\u2019s address is displayed in the To field with \u201cCreated\u201d next to it.","title":"An Externally Owned Account (EOA) Creating a Contract"},{"location":"guides/deciphering-a-transaction-on-etherscan/#transferring-ether-from-an-externally-owned-account-eoa-to-a-contract-account","text":"If you are sending Ether to a contract address, the gas cost can vary from the standard 21,000 gas. Viewing the transaction above we can see that someone made an Ether deposit to the Ethhub contract wallet, which required 22,511 gas. This is because the contract wallet also emits a Deposit event when receiving Ether, which bumps the gas cost over 21,000. That is why it is important to know what kind of account you are sending to before you assume that the gas cost will be 21,000 gas or else the transaction might run out of gas. In addition, there can be harmful side effects to sending a transaction to a contract that you aren\u2019t familiar with because contracts are able to forward messages to other contracts. Meaning that calling a function or simply depositing Ether to a malicious contract could execute code that might yield a negative result. Please always make sure that you trust the contract that you are about to submit a transaction to and set a reasonable gas limit.","title":"Transferring Ether from an Externally Owned Account (EOA) to a Contract Account"},{"location":"guides/deciphering-a-transaction-on-etherscan/#resources","text":"Etherscan What is Ethereum Gas? Transactions in Ethereum","title":"Resources"},{"location":"guides/ethereum-high-yield-savings-account/","text":"How to Get a High-Yield Savings Account on Ethereum The world of decentralized finance opens up unique financial opportunities on the Ethereum network. Historically, the interest rates earned on stablecoin lending in Ethereum have had a large spread to what can be earned in the traditional finance sector, presenting a nice opportunity to earn extra yield on cash. This guide will show you how to earn high-yield interest on USD using the Ethereum blockchain. If you are brand new to Ethereum, we suggest first reading our new user guide . 1. Acquire Stablecoins The key to this guide is understanding the concept of stablecoins . These are 1:1 representations of USD on the Ethereum network, essentially digitalizing your dollar. In order to earn yield using decentralized finance, you will need to acquire a stablecoin. We suggest either Dai or USDC, both of which can be acquired on Coinbase . Coinbase offers a feeless onramp for USDC, however Dai is the more trustless option and usually offers a higher yield. If you'd like to go with Dai, the feeless route is to go fiat > USDC via Coinbase and then trade USDC > Dai on dYdX . 2. Pick a Lending Protocol Now that you have stablecoins, you need to find borrowers that are willing to pay you yield in order to borrow your coins. There are many of these protocols built on Ethereum and you can easily find what rates are being offered on the stablecoin of your choice. Please note that some protocols have a longer history and better security standards than others, which should factor into your decision as well. For this guide, we will use Maker's Dai Savings Rate . If you picked USDC, we suggest using Compound . 3. Start Earning Interest At this point you're ready to start earning interest on your stablecoin. The website to interact with the Maker protocol is called Oasis. Navigate to the save section and you will be presented with the current APR%. Follow the guide to deposit your Dai and your savings account will then be open: Below is an image from Maker on how the mechanism functions: Now you can watch your interest earned count up in real time and withdraw at any point. 4. Insurance There is always the possibility that smart contracts have bugs. If you are worried about this, it's possible to insurance your savings account using Nexus Mutual . This gives you coverage on the smart contract you picked to lend on for a small fee. 5. Rate Movements Most lending rates on Ethereum are variable, meaning they can move up and down at any time, much like traditional savings accounts. Different protocols handle rate movements in different ways but all are derived on the function of supply and demand. If there is more demand than supply, rates will go up, and vice versa. DISCLAIMER: EthHub is a completely independent and open-source initiative founded by Ethereum community members. Nothing contained in this Github repository should be considered financial or investment advice - it is for informational purposes only.","title":"How to Get a High-Yield Savings Account on Ethereum"},{"location":"guides/ethereum-high-yield-savings-account/#how-to-get-a-high-yield-savings-account-on-ethereum","text":"The world of decentralized finance opens up unique financial opportunities on the Ethereum network. Historically, the interest rates earned on stablecoin lending in Ethereum have had a large spread to what can be earned in the traditional finance sector, presenting a nice opportunity to earn extra yield on cash. This guide will show you how to earn high-yield interest on USD using the Ethereum blockchain. If you are brand new to Ethereum, we suggest first reading our new user guide .","title":"How to Get a High-Yield Savings Account on Ethereum"},{"location":"guides/ethereum-high-yield-savings-account/#1-acquire-stablecoins","text":"The key to this guide is understanding the concept of stablecoins . These are 1:1 representations of USD on the Ethereum network, essentially digitalizing your dollar. In order to earn yield using decentralized finance, you will need to acquire a stablecoin. We suggest either Dai or USDC, both of which can be acquired on Coinbase . Coinbase offers a feeless onramp for USDC, however Dai is the more trustless option and usually offers a higher yield. If you'd like to go with Dai, the feeless route is to go fiat > USDC via Coinbase and then trade USDC > Dai on dYdX .","title":"1. Acquire Stablecoins"},{"location":"guides/ethereum-high-yield-savings-account/#2-pick-a-lending-protocol","text":"Now that you have stablecoins, you need to find borrowers that are willing to pay you yield in order to borrow your coins. There are many of these protocols built on Ethereum and you can easily find what rates are being offered on the stablecoin of your choice. Please note that some protocols have a longer history and better security standards than others, which should factor into your decision as well. For this guide, we will use Maker's Dai Savings Rate . If you picked USDC, we suggest using Compound .","title":"2. Pick a Lending Protocol"},{"location":"guides/ethereum-high-yield-savings-account/#3-start-earning-interest","text":"At this point you're ready to start earning interest on your stablecoin. The website to interact with the Maker protocol is called Oasis. Navigate to the save section and you will be presented with the current APR%. Follow the guide to deposit your Dai and your savings account will then be open: Below is an image from Maker on how the mechanism functions: Now you can watch your interest earned count up in real time and withdraw at any point.","title":"3. Start Earning Interest"},{"location":"guides/ethereum-high-yield-savings-account/#4-insurance","text":"There is always the possibility that smart contracts have bugs. If you are worried about this, it's possible to insurance your savings account using Nexus Mutual . This gives you coverage on the smart contract you picked to lend on for a small fee.","title":"4. Insurance"},{"location":"guides/ethereum-high-yield-savings-account/#5-rate-movements","text":"Most lending rates on Ethereum are variable, meaning they can move up and down at any time, much like traditional savings accounts. Different protocols handle rate movements in different ways but all are derived on the function of supply and demand. If there is more demand than supply, rates will go up, and vice versa. DISCLAIMER: EthHub is a completely independent and open-source initiative founded by Ethereum community members. Nothing contained in this Github repository should be considered financial or investment advice - it is for informational purposes only.","title":"5. Rate Movements"},{"location":"guides/graphical-guide-for-understanding-uniswap/","text":"A Graphical Guide for Understanding Uniswap Summary Uniswap is an exchange protocol that allows users to trustlessly swap ERC20 tokens. Rather using the traditional order book model, Uniswap pools tokens into smart contracts and users trade against these liquidity pools. Anyone can swap tokens, add tokens to a pool to earn fees, or list a token on Uniswap. This guide is meant to help beginners understand how Uniswap works under the hood. While the interface may appear simple, there is a lot going on behind the scenes. I recommend this resource if you are interested in understanding how to use the Uniswap specifically. ERC20 Token Primer ERC20 tokens are the most common type of token built on top of Ethereum. They are fungible in nature, meaning that there isn\u2019t a distinction between individual tokens. For example, if I have 100 metal marbles in my hand that are all the same size and color, it doesn\u2019t matter which one I give you. In the same way, if I have 100 of the same ERC20 token, it doesn\u2019t matter which one I give you. This contrasts with ERC721 tokens which are non-fungible tokens (NFTs) such as cryptokitties. ERC20s can be thought of as the most simple unit of account for a wide range of use cases including currency, rewards points, debt slips, interest accruing bonds, and much more. They are also highly divisible and can be sent in small increments. Since this type of token is so pervasive, it is important to develop a simple way of swapping between them. Please view the link here for more information on ERC20s. Overview of Uniswap\u2019s Contracts When viewing Uniswap\u2019s website, it is important to keep in mind that it is much more than just the interface. Uniswap standardizes how ERC20s are exchanged with a set of smart contracts. Anyone can build an interface that connects to these contracts and instantly be able to start exchanging with everyone else that is using Uniswap. There are two different types of contracts that make up Uniswap. The first is known as an Exchange contract. Exchange contracts hold a pool of a specific token and Ether that users can swap against. The second kind of contract is the Factory contract which is in charge of creating new Exchange contracts and registering the ERC20 token address to its Exchange contract address. There are no listing fees to add a token on Uniswap, instead anyone can call a function on the Factory contract to register a new token. The graphic below is an example of when DAI was added to Uniswap. Someone first called the createExchange function in the Factory contract with DAI\u2019s contract address. Then the Factory contract checks it\u2019s registry to see if an Exchange contract has been created for that token address. If no Exchange address is listed, the factory contract deploys an Exchange contract and records the Exchange address in its registry. Liquidity Pools Uniswap is unique in that it doesn\u2019t use an order book to derive the price of an asset. In a centralized exchange, such as Coinbase Pro, the price of an asset listed on the exchange is determined by where the highest price someone is willing to pay and the lowest price someone is willing to sell meet. We can see in the image below, that the highest bid price for BTC on Coinbase Pro at that point was $9301.36 and the lowest asking price was $9301.37. Instead Uniswap uses the Exchange contracts to pool both Ether and a specific ERC20. When trading Ether for a token, Ether is sent to the contract\u2019s pool and the token is given back to the user. As a result, the user doesn\u2019t need to wait for a counterparty in order to exchange or worry about specifying a price. Since anyone can list a token and users don't need to worry about matching with someone else, it is very easy to avoid any bootstrapping issue when first launching a token. The amount that is returned from swapping is based on an automated market maker formula. The graph below helps illustrate how the formula works. Essentially, the amount that is returned to you is based on the ratio of Ether to token in the pool. No matter the size of a swap, the user is guaranteed to have their trade execute because the more of an asset that you add to one side of the pool, the further along the curve it pushes you for the other asset. Meaning the larger the order relative to the pool, the worst rate you will receive as the ratio moves along the curve. You can learn more about the formula here . But if users are only just sending cryptocurrency, how does the ratio of Ether to token remain priced correctly relative to external markets? The answer is the pools maintain a ratio relative to the price of the rest of the market through people arbitraging the pool. Imagine that the DAI:ETH pool is expressed in terms of a scale and when the scale is balanced the pool is appropriately priced relative to the market price of a centralized exchange. Let\u2019s say that the current price for ETH in USD on a centralized exchange is $150 and the ratio in the Uniswap DAI:ETH pool returns 150 DAI for 1 ETH. As a result, our scale is balanced because the pool matches the current market price on the centralized exchange. Now let\u2019s assume that there is a movement in the market that pushes the price of ETH to $100 on the centralized exchange. Due to the price movement, we can now see that our scale is off balance relative to the market price because people can now swap 1 ETH for 150 DAI on Uniswap when the market price on a centralized exchange is $100 for 1 ETH. In response, someone can now put ETH into the pool, draw out DAI, then sell the DAI back for ETH on the centralized exchange for profit, and then repeat. They can do this until the pool has balanced out and reflects the current market price on a different exchange. As a result, third party arbitrages play a large role in maintaining the correct ratio of token to Ether in Uniswap pools. Swapping ERC20 \u21c4 ERC20 When interacting with a single Exchange contract, a user is able to swap between Ether and a specific ERC20 token. However, Uniswap does allow users to directly swap an ERC20 to another ERC20 in a single transaction. In the example below, the user has DAI and would like to receive MKR. As a result, the user calls the tokenToTokenSwap function which adds DAI to the DAI pool and kicks ETH to the MKR pool and returns MKR to the address that initially sent the transaction. Liquidity Providers When an Exchange contract is first created for a token, both the token and Ether pools are empty. The first person that deposits into the contract is the one that determines the ratio between the token and Ether. If they deposit a ratio that is different from what the current market rate is, then an arbitrage opportunity is available. When liquidity providers are adding to an established pool, they should add a proportional amount of token and Ether to the pool. If they don\u2019t, the liquidity they added is at risk of being arbitraged as well. In addition, larger liquidity pools are beneficial to users because they allow for larger swaps to happen without skewing the token to ETH ratio too far along the curve. Uniswap incentivises users to add liquidity to pools by rewarding liquidity providers with fees that are collected by the protocol. A 0.3% fee is taken for swapping between Ether and a token and roughly 0.6% is token for token to tokens swaps. Lastly, special ERC20 tokens known as liquidity tokens are minted to the provider\u2019s address in proportion to how much liquidity they contributed to the pool. The tokens are burned when the user wants to receive the liquidity they contributed plus the fees that we accumulated while their liquidity was locked. I recommend reading this article if you are curious about the advantages and risks of being a liquidity provider. Resources Uniswap Whitepaper Uniswap \u2014 A Unique Exchange Improving front running resistance of x*y=k market makers","title":"Graphical Guide to Understanding Uniswap"},{"location":"guides/graphical-guide-for-understanding-uniswap/#a-graphical-guide-for-understanding-uniswap","text":"","title":"A Graphical Guide for Understanding Uniswap"},{"location":"guides/graphical-guide-for-understanding-uniswap/#summary","text":"Uniswap is an exchange protocol that allows users to trustlessly swap ERC20 tokens. Rather using the traditional order book model, Uniswap pools tokens into smart contracts and users trade against these liquidity pools. Anyone can swap tokens, add tokens to a pool to earn fees, or list a token on Uniswap. This guide is meant to help beginners understand how Uniswap works under the hood. While the interface may appear simple, there is a lot going on behind the scenes. I recommend this resource if you are interested in understanding how to use the Uniswap specifically.","title":"Summary"},{"location":"guides/graphical-guide-for-understanding-uniswap/#erc20-token-primer","text":"ERC20 tokens are the most common type of token built on top of Ethereum. They are fungible in nature, meaning that there isn\u2019t a distinction between individual tokens. For example, if I have 100 metal marbles in my hand that are all the same size and color, it doesn\u2019t matter which one I give you. In the same way, if I have 100 of the same ERC20 token, it doesn\u2019t matter which one I give you. This contrasts with ERC721 tokens which are non-fungible tokens (NFTs) such as cryptokitties. ERC20s can be thought of as the most simple unit of account for a wide range of use cases including currency, rewards points, debt slips, interest accruing bonds, and much more. They are also highly divisible and can be sent in small increments. Since this type of token is so pervasive, it is important to develop a simple way of swapping between them. Please view the link here for more information on ERC20s.","title":"ERC20 Token Primer"},{"location":"guides/graphical-guide-for-understanding-uniswap/#overview-of-uniswaps-contracts","text":"When viewing Uniswap\u2019s website, it is important to keep in mind that it is much more than just the interface. Uniswap standardizes how ERC20s are exchanged with a set of smart contracts. Anyone can build an interface that connects to these contracts and instantly be able to start exchanging with everyone else that is using Uniswap. There are two different types of contracts that make up Uniswap. The first is known as an Exchange contract. Exchange contracts hold a pool of a specific token and Ether that users can swap against. The second kind of contract is the Factory contract which is in charge of creating new Exchange contracts and registering the ERC20 token address to its Exchange contract address. There are no listing fees to add a token on Uniswap, instead anyone can call a function on the Factory contract to register a new token. The graphic below is an example of when DAI was added to Uniswap. Someone first called the createExchange function in the Factory contract with DAI\u2019s contract address. Then the Factory contract checks it\u2019s registry to see if an Exchange contract has been created for that token address. If no Exchange address is listed, the factory contract deploys an Exchange contract and records the Exchange address in its registry.","title":"Overview of Uniswap\u2019s Contracts"},{"location":"guides/graphical-guide-for-understanding-uniswap/#liquidity-pools","text":"Uniswap is unique in that it doesn\u2019t use an order book to derive the price of an asset. In a centralized exchange, such as Coinbase Pro, the price of an asset listed on the exchange is determined by where the highest price someone is willing to pay and the lowest price someone is willing to sell meet. We can see in the image below, that the highest bid price for BTC on Coinbase Pro at that point was $9301.36 and the lowest asking price was $9301.37. Instead Uniswap uses the Exchange contracts to pool both Ether and a specific ERC20. When trading Ether for a token, Ether is sent to the contract\u2019s pool and the token is given back to the user. As a result, the user doesn\u2019t need to wait for a counterparty in order to exchange or worry about specifying a price. Since anyone can list a token and users don't need to worry about matching with someone else, it is very easy to avoid any bootstrapping issue when first launching a token. The amount that is returned from swapping is based on an automated market maker formula. The graph below helps illustrate how the formula works. Essentially, the amount that is returned to you is based on the ratio of Ether to token in the pool. No matter the size of a swap, the user is guaranteed to have their trade execute because the more of an asset that you add to one side of the pool, the further along the curve it pushes you for the other asset. Meaning the larger the order relative to the pool, the worst rate you will receive as the ratio moves along the curve. You can learn more about the formula here . But if users are only just sending cryptocurrency, how does the ratio of Ether to token remain priced correctly relative to external markets? The answer is the pools maintain a ratio relative to the price of the rest of the market through people arbitraging the pool. Imagine that the DAI:ETH pool is expressed in terms of a scale and when the scale is balanced the pool is appropriately priced relative to the market price of a centralized exchange. Let\u2019s say that the current price for ETH in USD on a centralized exchange is $150 and the ratio in the Uniswap DAI:ETH pool returns 150 DAI for 1 ETH. As a result, our scale is balanced because the pool matches the current market price on the centralized exchange. Now let\u2019s assume that there is a movement in the market that pushes the price of ETH to $100 on the centralized exchange. Due to the price movement, we can now see that our scale is off balance relative to the market price because people can now swap 1 ETH for 150 DAI on Uniswap when the market price on a centralized exchange is $100 for 1 ETH. In response, someone can now put ETH into the pool, draw out DAI, then sell the DAI back for ETH on the centralized exchange for profit, and then repeat. They can do this until the pool has balanced out and reflects the current market price on a different exchange. As a result, third party arbitrages play a large role in maintaining the correct ratio of token to Ether in Uniswap pools.","title":"Liquidity Pools"},{"location":"guides/graphical-guide-for-understanding-uniswap/#swapping-erc20-erc20","text":"When interacting with a single Exchange contract, a user is able to swap between Ether and a specific ERC20 token. However, Uniswap does allow users to directly swap an ERC20 to another ERC20 in a single transaction. In the example below, the user has DAI and would like to receive MKR. As a result, the user calls the tokenToTokenSwap function which adds DAI to the DAI pool and kicks ETH to the MKR pool and returns MKR to the address that initially sent the transaction.","title":"Swapping ERC20 \u21c4 ERC20"},{"location":"guides/graphical-guide-for-understanding-uniswap/#liquidity-providers","text":"When an Exchange contract is first created for a token, both the token and Ether pools are empty. The first person that deposits into the contract is the one that determines the ratio between the token and Ether. If they deposit a ratio that is different from what the current market rate is, then an arbitrage opportunity is available. When liquidity providers are adding to an established pool, they should add a proportional amount of token and Ether to the pool. If they don\u2019t, the liquidity they added is at risk of being arbitraged as well. In addition, larger liquidity pools are beneficial to users because they allow for larger swaps to happen without skewing the token to ETH ratio too far along the curve. Uniswap incentivises users to add liquidity to pools by rewarding liquidity providers with fees that are collected by the protocol. A 0.3% fee is taken for swapping between Ether and a token and roughly 0.6% is token for token to tokens swaps. Lastly, special ERC20 tokens known as liquidity tokens are minted to the provider\u2019s address in proportion to how much liquidity they contributed to the pool. The tokens are burned when the user wants to receive the liquidity they contributed plus the fees that we accumulated while their liquidity was locked. I recommend reading this article if you are curious about the advantages and risks of being a liquidity provider.","title":"Liquidity Providers"},{"location":"guides/graphical-guide-for-understanding-uniswap/#resources","text":"Uniswap Whitepaper Uniswap \u2014 A Unique Exchange Improving front running resistance of x*y=k market makers","title":"Resources"},{"location":"guides/graphical-guide-to-compound/","text":"A Graphical Guide to Compound Summary The Compound protocol is a series of smart contracts that allows users to earn interest on their Ethereum assets. What makes the protocol unique is that there isn\u2019t a direct counterparty that you have to negotiate with, instead a user only needs to supply their assets and they will immediately begin earning interest. There is no hassle of having to discuss a rate or a period of time your assets are required to be locked up for. Users can also borrow different assets from the protocol against the ones that they have supplied. The supply and borrow rates for each asset are dynamically calculated based on the supply and borrow demand of the protocol. In addition, the list of assets that can be supplied and borrowed on Compound can be found here . Lastly, this guide is meant to give a basic understanding of what the Compound protocol is. I recommend this article if you are interested in how to use Compound website specifically. Supplying Assets and Receiving cTokens When anyone supplies an asset to the Compound protocol they are then given the corresponding cToken for their deposit. For example if someone locks up Dai they will receive an amount of cDai in return. cTokens are a deposit split that shows that you have added liquidity to the protocol and can be used to reclaim the underlying asset that was supplied plus the accrued interest, which is accrued for each block that is mined while the asset is locked in the protocol. It is important to note that the amount of cTokens a user receives isn\u2019t a 1 to 1 ratio to the token that was added. For example, if you supplied 100 Dai to the protocol you wouldn\u2019t receive 100 cDai. The reason for this is that the cDai has an ever improving redemption rate based on the interest rate set by the protocol. Let\u2019s say that for every 1 Dai you supply the protocol gives you 9 cDai. As time passes your Dai is earning interest, but your wallet will still only hold 9 cDai. However, when you go to redeem your cDai for Dai the rate will have improved, let\u2019s say to 8 cDai for 1 Dai based on the interest accrued. As a result, your interest is paid to you in an ever improving exchange rate between the cToken and the underlying asset. If you would like a more detailed example, the one below is from Compound\u2019s website . Let\u2019s say you supply 1,000 DAI to the Compound protocol, when the exchange rate is 0.020070; you would receive 49,825.61 cDAI (1,000/0.020070). A few months later, you decide it\u2019s time to withdraw your DAI from the protocol; the exchange rate is now 0.021591: Your 49,825.61 cDAI is now equal to 1,075.78 DAI (49,825.61 * 0.021591) You could withdraw 1,075.78 DAI, which would redeem all 49,825.61 cDAI Or, you could withdraw a portion, such as your original 1,000 DAI, which would redeem 46,315.59 cDAI (keeping 3,510.01 cDAI in your wallet) The Utility of cTokens cTokens makes it easier for both users and developers to interact with the Compound protocol. cTokens are ERC20 tokens , which is the defacto token standard on Ethereum. Almost all developers are already familiar with the ERC20 standard and most users have wallets that support ERC20 tokens. Having Compound\u2019s balances tokenized allows for a greater amount of compossibility. Since these tokens can be easily transferred like any other token, they can be created with one address, sent to a cold storage address that has never been touched, and securely earn interest. They can also be sold on an exchange or even potentially used as collateral for a loan on a different platform. In addition, cTokens can also be incorporated into other financial products. One of the most interesting integrations is the ETH 20 MA Crossover Yield Set II from TokenSets. This set rebalances between cUSDC and Eth based on the 20 Day simple moving average of Ether\u2019s price. Therefore, by using cUSDC, when the set rebalances away from Eth not only has it moved to a stable position, it will also be earning interest for you until the next rebalance. Borrowing Assets Once users have locked up assets and hold cTokens, they are then able to borrow different assets from the protocol. For example a user that has locked Dai to create cDai, can then use that cDai as collateral to borrow BAT. Borrowing in most cases allows users to be able to either short or long an asset. It is important to note that there are certain collateral ratios for each asset based on the quality of the collateral. If the price of the asset you borrowed versus the one that you supplied diverges too far, then you have the possibility of having a portion of your collateral liquidated. Another thing to point out is that the rate to borrow an asset from the protocol is usually higher than the rate for supplying an asset. The reason behind this is that since the protocol pools liquidity not all the funds that have been supplied will be borrowed, yet all funds added earn interest. As a result the borrow rate must be higher than the supply rate to make sure that all users that are supplying assets are given a rate even if their assets aren\u2019t currently being borrowed. Governance with Comp Tokens Previously, the upgradability of the protocol\u2019s smart contracts was solely controlled by Compound Labs. However, with their recent upgrade and release of their governance token Comp, the upgrades are now controlled by a governance contract that makes changes based on votes from Comp token holders. This governance upgrade can be thought of as if a single key controlled the protocol, but that key was broken into small pieces and distributed to different people across the internet. Now if a change is to be made, then enough Comp token holders need to come together and \u201creforge\u201d the key to push the change. In addition, in order to counteract voter apathy, Comp token holders are able to delegate their voting power to another address which can vote on their behalf. Specific details on how voting works from the Compound FAQ . Any address with more than 100,000 COMP delegated to it may propose governance actions, which are executable code. When a proposal is created, the community can submit their votes during a 3 day voting period. If a majority, and at least 400,000 votes are cast for the proposal, it is queued in a Timelock contract, and can be implemented after a 2 day waiting period. Liquidity Mining In the past, the main method of governance token distribution was by having an ICO. Recently however, many defi projects have been shifting to a new method called liquidity mining. Liquidity mining is a process where users lock up assets into a protocol and over time are rewarded with governance tokens. Users can now lock up liquidity into Compound and based on the amount that they have either supplied or borrowed are given a certain amount of Comp tokens. The main idea behind this is that it rewards people that are using the protocol, rather than having an ICO which rewards speculators. Currently, the distribution of Comp through liquidity mining is going to last a little over 4 years. Additional details can be found here 4,229,949 COMP will be placed into a Reservoir contract, which transfers 0.50 COMP per Ethereum block (~2,880 per day) into the protocol for distribution. Conclusion The Compound protocol creates a simple way for users to earn interest on their assets without having to negotiate with a counterparty. Future users won\u2019t even know that they are using the protocol, they will simply add funds and the apps they are interacting with will then pass them onto Compound. With no counterparty to negotiate with and no hard time lock requirements, Compound makes it seamless to earn interest on your Ethereum assets. Resources Compound Docs Compound FAQ Compound cTokens Expanding Compound Governance","title":"A Graphical Guide to Compound"},{"location":"guides/graphical-guide-to-compound/#a-graphical-guide-to-compound","text":"","title":"A Graphical Guide to Compound"},{"location":"guides/graphical-guide-to-compound/#summary","text":"The Compound protocol is a series of smart contracts that allows users to earn interest on their Ethereum assets. What makes the protocol unique is that there isn\u2019t a direct counterparty that you have to negotiate with, instead a user only needs to supply their assets and they will immediately begin earning interest. There is no hassle of having to discuss a rate or a period of time your assets are required to be locked up for. Users can also borrow different assets from the protocol against the ones that they have supplied. The supply and borrow rates for each asset are dynamically calculated based on the supply and borrow demand of the protocol. In addition, the list of assets that can be supplied and borrowed on Compound can be found here . Lastly, this guide is meant to give a basic understanding of what the Compound protocol is. I recommend this article if you are interested in how to use Compound website specifically.","title":"Summary"},{"location":"guides/graphical-guide-to-compound/#supplying-assets-and-receiving-ctokens","text":"When anyone supplies an asset to the Compound protocol they are then given the corresponding cToken for their deposit. For example if someone locks up Dai they will receive an amount of cDai in return. cTokens are a deposit split that shows that you have added liquidity to the protocol and can be used to reclaim the underlying asset that was supplied plus the accrued interest, which is accrued for each block that is mined while the asset is locked in the protocol. It is important to note that the amount of cTokens a user receives isn\u2019t a 1 to 1 ratio to the token that was added. For example, if you supplied 100 Dai to the protocol you wouldn\u2019t receive 100 cDai. The reason for this is that the cDai has an ever improving redemption rate based on the interest rate set by the protocol. Let\u2019s say that for every 1 Dai you supply the protocol gives you 9 cDai. As time passes your Dai is earning interest, but your wallet will still only hold 9 cDai. However, when you go to redeem your cDai for Dai the rate will have improved, let\u2019s say to 8 cDai for 1 Dai based on the interest accrued. As a result, your interest is paid to you in an ever improving exchange rate between the cToken and the underlying asset. If you would like a more detailed example, the one below is from Compound\u2019s website . Let\u2019s say you supply 1,000 DAI to the Compound protocol, when the exchange rate is 0.020070; you would receive 49,825.61 cDAI (1,000/0.020070). A few months later, you decide it\u2019s time to withdraw your DAI from the protocol; the exchange rate is now 0.021591: Your 49,825.61 cDAI is now equal to 1,075.78 DAI (49,825.61 * 0.021591) You could withdraw 1,075.78 DAI, which would redeem all 49,825.61 cDAI Or, you could withdraw a portion, such as your original 1,000 DAI, which would redeem 46,315.59 cDAI (keeping 3,510.01 cDAI in your wallet)","title":"Supplying Assets and Receiving cTokens"},{"location":"guides/graphical-guide-to-compound/#the-utility-of-ctokens","text":"cTokens makes it easier for both users and developers to interact with the Compound protocol. cTokens are ERC20 tokens , which is the defacto token standard on Ethereum. Almost all developers are already familiar with the ERC20 standard and most users have wallets that support ERC20 tokens. Having Compound\u2019s balances tokenized allows for a greater amount of compossibility. Since these tokens can be easily transferred like any other token, they can be created with one address, sent to a cold storage address that has never been touched, and securely earn interest. They can also be sold on an exchange or even potentially used as collateral for a loan on a different platform. In addition, cTokens can also be incorporated into other financial products. One of the most interesting integrations is the ETH 20 MA Crossover Yield Set II from TokenSets. This set rebalances between cUSDC and Eth based on the 20 Day simple moving average of Ether\u2019s price. Therefore, by using cUSDC, when the set rebalances away from Eth not only has it moved to a stable position, it will also be earning interest for you until the next rebalance.","title":"The Utility of cTokens"},{"location":"guides/graphical-guide-to-compound/#borrowing-assets","text":"Once users have locked up assets and hold cTokens, they are then able to borrow different assets from the protocol. For example a user that has locked Dai to create cDai, can then use that cDai as collateral to borrow BAT. Borrowing in most cases allows users to be able to either short or long an asset. It is important to note that there are certain collateral ratios for each asset based on the quality of the collateral. If the price of the asset you borrowed versus the one that you supplied diverges too far, then you have the possibility of having a portion of your collateral liquidated. Another thing to point out is that the rate to borrow an asset from the protocol is usually higher than the rate for supplying an asset. The reason behind this is that since the protocol pools liquidity not all the funds that have been supplied will be borrowed, yet all funds added earn interest. As a result the borrow rate must be higher than the supply rate to make sure that all users that are supplying assets are given a rate even if their assets aren\u2019t currently being borrowed.","title":"Borrowing Assets"},{"location":"guides/graphical-guide-to-compound/#governance-with-comp-tokens","text":"Previously, the upgradability of the protocol\u2019s smart contracts was solely controlled by Compound Labs. However, with their recent upgrade and release of their governance token Comp, the upgrades are now controlled by a governance contract that makes changes based on votes from Comp token holders. This governance upgrade can be thought of as if a single key controlled the protocol, but that key was broken into small pieces and distributed to different people across the internet. Now if a change is to be made, then enough Comp token holders need to come together and \u201creforge\u201d the key to push the change. In addition, in order to counteract voter apathy, Comp token holders are able to delegate their voting power to another address which can vote on their behalf. Specific details on how voting works from the Compound FAQ . Any address with more than 100,000 COMP delegated to it may propose governance actions, which are executable code. When a proposal is created, the community can submit their votes during a 3 day voting period. If a majority, and at least 400,000 votes are cast for the proposal, it is queued in a Timelock contract, and can be implemented after a 2 day waiting period.","title":"Governance with Comp Tokens"},{"location":"guides/graphical-guide-to-compound/#liquidity-mining","text":"In the past, the main method of governance token distribution was by having an ICO. Recently however, many defi projects have been shifting to a new method called liquidity mining. Liquidity mining is a process where users lock up assets into a protocol and over time are rewarded with governance tokens. Users can now lock up liquidity into Compound and based on the amount that they have either supplied or borrowed are given a certain amount of Comp tokens. The main idea behind this is that it rewards people that are using the protocol, rather than having an ICO which rewards speculators. Currently, the distribution of Comp through liquidity mining is going to last a little over 4 years. Additional details can be found here 4,229,949 COMP will be placed into a Reservoir contract, which transfers 0.50 COMP per Ethereum block (~2,880 per day) into the protocol for distribution.","title":"Liquidity Mining"},{"location":"guides/graphical-guide-to-compound/#conclusion","text":"The Compound protocol creates a simple way for users to earn interest on their assets without having to negotiate with a counterparty. Future users won\u2019t even know that they are using the protocol, they will simply add funds and the apps they are interacting with will then pass them onto Compound. With no counterparty to negotiate with and no hard time lock requirements, Compound makes it seamless to earn interest on your Ethereum assets.","title":"Conclusion"},{"location":"guides/graphical-guide-to-compound/#resources","text":"Compound Docs Compound FAQ Compound cTokens Expanding Compound Governance","title":"Resources"},{"location":"guides/guide-to-ens/","text":"The Ultimate Guide to ENS Names This article initially appeared as a Medium post authored by Eric Conner . The Ethereum Name Service is one of the most popular projects on Ethereum right now and for good reason. As the website states , \"ENS offers a secure & decentralized way to address resources both on and off the blockchain using simple, human-readable names.\" In short, you are able to give your Ethereum (or favorite chain ) address a name. This is much like how the traditional web works with DNS. All websites are hosted at an IP address but no one actually puts that in their browser, instead we use names such as amazon.com, not 205.251.242.103 (try it, it works!). The ENS has many great features but I'm going to focus this guide specifically on registering and managing .eth names and their subdomains. Registering .eth Domain Names The core functionality of the ENS is registering .eth domains. There are a few important rules to keep in mind when it comes to registering domains on the ENS: Minimum domain length is 3 characters. Annual renewal fees. 3 characters: $640/year, 4 characters: $160/year, 5+ characters $5/year. Emojis are valid. \ud83d\udc4d\ud83c\udffc Creating and Managing Domains Registering a domain is extremely easy using the ENS app . First search for the ENS name that you'd like. If it is not taken (if it is, head over to OpenSea and search for it), you will be presented with this screen. Once here you can click request to register which will trigger a transaction, wait 1 minute and then you can register the name. It's now yours. Now that you own a .eth domain, you want to enable all the cool features that it offers. This starts on the domain management screen. There is a lot going on so let's put all of the pieces together: Registrant: can set the controller address, and transfer the registration to someone else. This is the ultimate owner. Controller: essentially handles the \"day to day operations\" of the domain. Expiration Date: when your renewal fee is due and you can pay it here as well. Resolver: handles resolving (translating) the records put below such as what Ethereum address is tied to this domain. Should be set the public resolver which will be the default option when clicking the Set button. Records: this is where you can add the cool stuff to your domain. Put an address here so that when you put your domain name in a wallet, it points to this address. You can also put an IPFS content hash which when going to your domain in a web browser will pull up your website. Once you set an Ethereum address in the address field, it will resolve in wallets such as MetaMask. And if you point it to an IPFS hash, you can pull up the domain at ethhub.eth/ or ethhub.eth.link for browsers that don't resolve ENS names. Subdomains Subdomains offer great flexibility for building on top of .eth domains. If you are a company such as Maker and want to issue all your employees maker.eth subdomains, this is very easy to do. This section will cover both creating subdomains on a domain you own and unique ways of allowing others to buy subdomains on a domain you own. Creating and Managing Subdomains If you own a .eth domain and simply want to create subdomains for your own use, the easiest way to do this is through the ENS app by clicking on the Subdomains button. This is where you can add new subdomains. Once subdomains are setup, they act very similar to domains in that the owner can control them and setup records. That means something like eric.ethhub.eth can also resolve to an address and an IPFS website. Allowing Anyone to Claim Subdomains on your .eth Domain All of the above is being done by the registrant of the .eth domain. They are the one setting up the subdomains and have ultimate control over them, including being able to revoke them. This is fine for a company or someone that wants full control over the subdomains but what if you want anyone in the world to be able to claim a subdomain on your domain? You obviously don't want to have to coordinate with them and they won't want you to be able to revoke access. The good news is there is a solution that easily allows you to open up registration of subdomains on your domain. You can even set a price at which you'd like to sell them. Doing this starts with turning control of your domain over to the ENS Subdomain Registrar contract . This means that the contract is able to distribute out subdomains to people but you no longer can revoke access to those subdomains. The steps at the moment are fairly manual but also easy. Nick Johnson lays out the steps well in this ENSNow domains post so I'm going to just put them here: Warning: By doing this, you are permanently giving up use of your domain! You will be able to collect registration fees, change prices, and transfer control to another user\u200a-\u200abut you will never be able to use your domain for anything else! Load up the .eth registrar contract . If you are using Etherscan, you will need to click \"Connect with Metamask\" and authorize the subsequent dialog box from Metamask. Find the 'approve' function. In the address field, enter '0xc32659651d137a18b79925449722855aa327231d' In the tokenId field, enter the labelhash of your name. You can look this up by searching for your name on etherscan (look for 'Label hash [foo]:'). Submit the transaction. Load up the new subdomain registrar contract . Find the 'configureDomain' function. In the name field, enter the name you want to list, without '.eth' (Eg, 'gimmethe', not 'gimmethe.eth'). In the price field, enter the price to charge for a new domain, in wei. 1 ether is 1,000,000,000,000,000,000 wei, so for instance to charge 0.01 ether per domain, you should enter 10000000000000000. A convertor can be found here . In the referralFeePPM field, enter the amount you want to give to any website that finds a new user for you. For instance, to keep the entire amount yourself, enter 0; to give it all to the site, enter 1000000. Submit the transaction. Your domain has now been handed over to the subdomain registrar contract. If you've set up a fee, anytime someone registers a subdomain, the funds will be directed to the original owner address. This has now opened up a lot of possibilities! Listing Your Subdomains on ENSNow The ENS team has setup a website which allows for claiming of subdomains. If you'd like your subdomains listed here the process is quite easy. Once again Nick has a blog post about the steps and I'm going to put them below: Go to this page and click 'fork' in the top right corner. Navigate to app -> js -> domains.json Click on the pencil icon in the top right corner of the file. Find the appropriate place to insert your entry (entries are listed alphabetically). Add a new line with your entry. If using the default registrar for steps 2 and 3, this should look like {\"name\": \"yourdomain\", \"version\": \"1.0\"}, . Commit your changes by clicking 'Commit changes' down the bottom of the page. Click on 'Pull requests', then 'New pull request'. Click on 'Create pull request'. Hosting Your Own Subdomain Sale Site ENSNow is great and easy, but the list of domains supported there is rather long and you cannot specifically brand your own domain. So, if you'd like to setup a site that only lists your domain and allows you to customize it, that is possible as well. A good example of this is a site I'm running called Ethmojis . The best place to start is on the Subdomain Registrar GitHub page . They have a \"getting started\" section which tells you how to run it but I'll try to summarize the steps up as best as I can below Install node.js and NPM Install Truffle on your computer using npm install -g truffle Download and install Ganache Clone the subdomain-registrar repo to your computer. In terminal, navigate to the folder you cloned it to and run npm install Find the /app/js/domains.json file and edit the whitelist to only include your domain. Mine looks like: [{\"name\": \"ethmojis\", \"version\": \"1.0\"}] Edit the index.html file however you'd like for your site. In terminal, change directory to where you cloned the subdomain registrar. Run: ganache-cli & truffle deploy npm run dev If everything looks goo, run npm run build A build folder should be created and files output here. This is your final site that you can upload to a web server or IPFS. To host on IPFS , upload the entire build folder and get your content hash. You can then put this content hash in the \"records\" section of any ENS domain or subdomain! Here's an example of how it will look: Congrats, you are now an expert on the Ethereum Name Service!","title":"The Ultimate Guide to the ENS"},{"location":"guides/guide-to-ens/#the-ultimate-guide-to-ens-names","text":"This article initially appeared as a Medium post authored by Eric Conner . The Ethereum Name Service is one of the most popular projects on Ethereum right now and for good reason. As the website states , \"ENS offers a secure & decentralized way to address resources both on and off the blockchain using simple, human-readable names.\" In short, you are able to give your Ethereum (or favorite chain ) address a name. This is much like how the traditional web works with DNS. All websites are hosted at an IP address but no one actually puts that in their browser, instead we use names such as amazon.com, not 205.251.242.103 (try it, it works!). The ENS has many great features but I'm going to focus this guide specifically on registering and managing .eth names and their subdomains.","title":"The Ultimate Guide to ENS\u00a0Names"},{"location":"guides/guide-to-ens/#registering-eth-domain-names","text":"The core functionality of the ENS is registering .eth domains. There are a few important rules to keep in mind when it comes to registering domains on the ENS: Minimum domain length is 3 characters. Annual renewal fees. 3 characters: $640/year, 4 characters: $160/year, 5+ characters $5/year. Emojis are valid. \ud83d\udc4d\ud83c\udffc","title":"Registering\u00a0.eth Domain\u00a0Names"},{"location":"guides/guide-to-ens/#creating-and-managing-domains","text":"Registering a domain is extremely easy using the ENS app . First search for the ENS name that you'd like. If it is not taken (if it is, head over to OpenSea and search for it), you will be presented with this screen. Once here you can click request to register which will trigger a transaction, wait 1 minute and then you can register the name. It's now yours. Now that you own a .eth domain, you want to enable all the cool features that it offers. This starts on the domain management screen. There is a lot going on so let's put all of the pieces together: Registrant: can set the controller address, and transfer the registration to someone else. This is the ultimate owner. Controller: essentially handles the \"day to day operations\" of the domain. Expiration Date: when your renewal fee is due and you can pay it here as well. Resolver: handles resolving (translating) the records put below such as what Ethereum address is tied to this domain. Should be set the public resolver which will be the default option when clicking the Set button. Records: this is where you can add the cool stuff to your domain. Put an address here so that when you put your domain name in a wallet, it points to this address. You can also put an IPFS content hash which when going to your domain in a web browser will pull up your website. Once you set an Ethereum address in the address field, it will resolve in wallets such as MetaMask. And if you point it to an IPFS hash, you can pull up the domain at ethhub.eth/ or ethhub.eth.link for browsers that don't resolve ENS names.","title":"Creating and Managing\u00a0Domains"},{"location":"guides/guide-to-ens/#subdomains","text":"Subdomains offer great flexibility for building on top of .eth domains. If you are a company such as Maker and want to issue all your employees maker.eth subdomains, this is very easy to do. This section will cover both creating subdomains on a domain you own and unique ways of allowing others to buy subdomains on a domain you own.","title":"Subdomains"},{"location":"guides/guide-to-ens/#creating-and-managing-subdomains","text":"If you own a .eth domain and simply want to create subdomains for your own use, the easiest way to do this is through the ENS app by clicking on the Subdomains button. This is where you can add new subdomains. Once subdomains are setup, they act very similar to domains in that the owner can control them and setup records. That means something like eric.ethhub.eth can also resolve to an address and an IPFS website.","title":"Creating and Managing Subdomains"},{"location":"guides/guide-to-ens/#allowing-anyone-to-claim-subdomains-on-your-eth-domain","text":"All of the above is being done by the registrant of the .eth domain. They are the one setting up the subdomains and have ultimate control over them, including being able to revoke them. This is fine for a company or someone that wants full control over the subdomains but what if you want anyone in the world to be able to claim a subdomain on your domain? You obviously don't want to have to coordinate with them and they won't want you to be able to revoke access. The good news is there is a solution that easily allows you to open up registration of subdomains on your domain. You can even set a price at which you'd like to sell them. Doing this starts with turning control of your domain over to the ENS Subdomain Registrar contract . This means that the contract is able to distribute out subdomains to people but you no longer can revoke access to those subdomains. The steps at the moment are fairly manual but also easy. Nick Johnson lays out the steps well in this ENSNow domains post so I'm going to just put them here: Warning: By doing this, you are permanently giving up use of your domain! You will be able to collect registration fees, change prices, and transfer control to another user\u200a-\u200abut you will never be able to use your domain for anything else! Load up the .eth registrar contract . If you are using Etherscan, you will need to click \"Connect with Metamask\" and authorize the subsequent dialog box from Metamask. Find the 'approve' function. In the address field, enter '0xc32659651d137a18b79925449722855aa327231d' In the tokenId field, enter the labelhash of your name. You can look this up by searching for your name on etherscan (look for 'Label hash [foo]:'). Submit the transaction. Load up the new subdomain registrar contract . Find the 'configureDomain' function. In the name field, enter the name you want to list, without '.eth' (Eg, 'gimmethe', not 'gimmethe.eth'). In the price field, enter the price to charge for a new domain, in wei. 1 ether is 1,000,000,000,000,000,000 wei, so for instance to charge 0.01 ether per domain, you should enter 10000000000000000. A convertor can be found here . In the referralFeePPM field, enter the amount you want to give to any website that finds a new user for you. For instance, to keep the entire amount yourself, enter 0; to give it all to the site, enter 1000000. Submit the transaction. Your domain has now been handed over to the subdomain registrar contract. If you've set up a fee, anytime someone registers a subdomain, the funds will be directed to the original owner address. This has now opened up a lot of possibilities!","title":"Allowing Anyone to Claim Subdomains on your\u00a0.eth\u00a0Domain"},{"location":"guides/guide-to-ens/#listing-your-subdomains-on-ensnow","text":"The ENS team has setup a website which allows for claiming of subdomains. If you'd like your subdomains listed here the process is quite easy. Once again Nick has a blog post about the steps and I'm going to put them below: Go to this page and click 'fork' in the top right corner. Navigate to app -> js -> domains.json Click on the pencil icon in the top right corner of the file. Find the appropriate place to insert your entry (entries are listed alphabetically). Add a new line with your entry. If using the default registrar for steps 2 and 3, this should look like {\"name\": \"yourdomain\", \"version\": \"1.0\"}, . Commit your changes by clicking 'Commit changes' down the bottom of the page. Click on 'Pull requests', then 'New pull request'. Click on 'Create pull request'.","title":"Listing Your Subdomains on\u00a0ENSNow"},{"location":"guides/guide-to-ens/#hosting-your-own-subdomain-sale-site","text":"ENSNow is great and easy, but the list of domains supported there is rather long and you cannot specifically brand your own domain. So, if you'd like to setup a site that only lists your domain and allows you to customize it, that is possible as well. A good example of this is a site I'm running called Ethmojis . The best place to start is on the Subdomain Registrar GitHub page . They have a \"getting started\" section which tells you how to run it but I'll try to summarize the steps up as best as I can below Install node.js and NPM Install Truffle on your computer using npm install -g truffle Download and install Ganache Clone the subdomain-registrar repo to your computer. In terminal, navigate to the folder you cloned it to and run npm install Find the /app/js/domains.json file and edit the whitelist to only include your domain. Mine looks like: [{\"name\": \"ethmojis\", \"version\": \"1.0\"}] Edit the index.html file however you'd like for your site. In terminal, change directory to where you cloned the subdomain registrar. Run: ganache-cli & truffle deploy npm run dev If everything looks goo, run npm run build A build folder should be created and files output here. This is your final site that you can upload to a web server or IPFS. To host on IPFS , upload the entire build folder and get your content hash. You can then put this content hash in the \"records\" section of any ENS domain or subdomain! Here's an example of how it will look: Congrats, you are now an expert on the Ethereum Name Service!","title":"Hosting Your Own Subdomain Sale\u00a0Site"},{"location":"languages/translations/","text":"EthHub Translations EthHub Docs are available in the following languages: Chinese","title":"Translations"},{"location":"languages/translations/#ethhub-translations","text":"EthHub Docs are available in the following languages: Chinese","title":"EthHub Translations"},{"location":"other/EF-COI-disclosures/","text":"Conflict of Interest (COI) Disclosures from Ethereum Foundation members The following disclosures were voluntarily provided by EF members in an AMA about Ethereum Leadership and Accountability shortly after the departure of Afri Schoedon from the Ethereum community. Vitalik Buterin Non-ethereum-ecosystem tokens: BCH, BTC, DOGE, ZEC; total value < 10% the value of my ETH Non-ETH ethereum ecosystem tokens: KNC, MKR, OMG, REP, total value <10% the value of my ETH Significant corporate shareholdings: Clearmatics, Starkware [edit, forgot to put this in before] Revenue in the last 12 months other than ethereum foundation salary: a few advisor tokens (included in above) Non-financial interests: friends in the ecosystems represented by the above projects, as well as some non-token ethereum ecosystem orgs (eg. L4, Plasma Group, EthGlobal, EDCON) and non-token non-ethereum orgs (mainly professional cryptography and economics circles) Source Justin Drake 99% of token value in ETH (was given minor airdrops for free) Paid by the EF in ETH Leverage long ETH using ETH as collateral (MakerDAO) Close to zero fiat Not associated with any blockchain project other than Ethereum Zero speaking fees, zero grants Source Martin Swende 95-99% of crypto holdings in ETH, rest is ZEC, BTC, SIA + some eth-tokens Salary/income last 12 months: all via EF (in euro) \"I previously also sometimes did consultancy audits, haven't done any in a long time\" Advisor in zero projects, zero speaking fees, zero grants received, etc. Source","title":"Ethereum Foundation COI Disclosures"},{"location":"other/EF-COI-disclosures/#conflict-of-interest-coi-disclosures-from-ethereum-foundation-members","text":"The following disclosures were voluntarily provided by EF members in an AMA about Ethereum Leadership and Accountability shortly after the departure of Afri Schoedon from the Ethereum community.","title":"Conflict of Interest (COI) Disclosures from Ethereum Foundation members"},{"location":"other/EF-COI-disclosures/#vitalik-buterin","text":"Non-ethereum-ecosystem tokens: BCH, BTC, DOGE, ZEC; total value < 10% the value of my ETH Non-ETH ethereum ecosystem tokens: KNC, MKR, OMG, REP, total value <10% the value of my ETH Significant corporate shareholdings: Clearmatics, Starkware [edit, forgot to put this in before] Revenue in the last 12 months other than ethereum foundation salary: a few advisor tokens (included in above) Non-financial interests: friends in the ecosystems represented by the above projects, as well as some non-token ethereum ecosystem orgs (eg. L4, Plasma Group, EthGlobal, EDCON) and non-token non-ethereum orgs (mainly professional cryptography and economics circles) Source","title":"Vitalik Buterin"},{"location":"other/EF-COI-disclosures/#justin-drake","text":"99% of token value in ETH (was given minor airdrops for free) Paid by the EF in ETH Leverage long ETH using ETH as collateral (MakerDAO) Close to zero fiat Not associated with any blockchain project other than Ethereum Zero speaking fees, zero grants Source","title":"Justin Drake"},{"location":"other/EF-COI-disclosures/#martin-swende","text":"95-99% of crypto holdings in ETH, rest is ZEC, BTC, SIA + some eth-tokens Salary/income last 12 months: all via EF (in euro) \"I previously also sometimes did consultancy audits, haven't done any in a long time\" Advisor in zero projects, zero speaking fees, zero grants received, etc. Source","title":"Martin Swende"},{"location":"other/ethereum-2.0-ama/","text":"Ethereum 2.0 Reddit AMA Part 1 Q: When, as in period of time, do you think Ethereum will be able to solve scalability issues? A: In phase 1 (about 2020 by my estimate) we will have shard data. Those shards, even without an EVM, can be used as the data availability layer for TrueBit (and other alternative execution engines). Phase 2 (about 2021) is when we will have scalable L1 execution. [Justin Drake] Follow up Q: ELI5 execution engines Follow up A: An execution engine is a way to compute state assuming consensus on data. The execution engine for the EVM is \"naive re-execution\". There are more fancy execution engines such as TrueBit and SNARK/STARK-based validity proofs. [Justin Drake] Q: Are economists being consulted to help decide the issuance rate of a full POS system? Stated more broadly, who is helping/advising the ETH 2.0 team on the effects certain issuance decisions will have on the network and community (both in the short and long term)? A: Personally at this point the feedback I'm most interested in is actually feedback from potential stakers. The main question basically being, are there any other tweaks we can make to the economics that, given a fixed level of reward, will (i) encourage more people to validate, and (ii) encourage many small solo validators or smaller pools, as opposed to a few large pools. [Vitalik Buterin] Q: Considering that Yoichi is not working anymore in the Foundation, what are your plans on formal verification of ETH 2.0 specs? A: I'd say that formal verification of the spec will make sense when the spec is more mature and stable, maybe mid 2019. Anyone interested in doing formal verification of the ETH 2.0 specs in a few months, please send a grant proposal. [Justin Drake] Q: What is the best response to a developer who is hesitant about building on ethereum today, given that it will be \"replaced\" by ETH 2.0 over the next few years? A: I expect that once the state and execution model for Serenity solidifies (see https://ethresear.ch/t/a-minimal-state-execution-proposal/4445 for one minimal proposal) we'll start working with the developer community on modifications to high-level languages (Solidity, Vyper, etc) and best practices. Hopefully at that point it will become clearer how to build applications in such a way that they could be redeployed as-is on the 2.0 chain. At least that's my hope. [Vitalik Buterin] A2: Building on Ethereum 1.0 today is great for learning and prototyping. It's also great for assembling a culturally-aligned team consistent with the philosophy of the Ethereum community (which may be different than the philosophy of the Bitcoin, Ripple, Bitcoin Cash, EOS, Tether, etc. communities). [Justin Drake] Q: Can we run multiple validator clients on a single machine assuming we've got multiple 32 Eth deposits? A: Yep! There's nothing preventing you from using one machine to run multiple validators. The only hard limit you'll face is that the number of shards you are assigned to validate increases linearly with the number of validator slots you have, so if you have thousands of ETH a laptop will not suffice and you'll need something more powerful. [Vitalik Buterin] A2: Short answer: Yes. Long answer: You will need to register a validator for every 32 ETH. In phase 0 (just the beacon chain, no shards) you can likely handle thousands of validators on a single machine. After phase 1 the number of validators that can be operated on a single machine depends on how resourceful your machine is. A mainstream laptop should comfortably handle one validator, and likely handle 2-10 validators at max capacity. The computational resources scales linearly with the number of validators until you reach ~1,000 validators. At that point there are scalability advantages in being a super-node, i.e. a full node for every shard. [Justin Drake] Follow up Q: How much importance are the devs placing on being able to run setups at home wrt keeping Ethereum decentralised and being able to move ETH in and out of staking pools? Follow up A: It's definitely a goal I care about. The alternative to staking at home is staking on AWS or staking through a pool, and both are risks for decentralization. Concrete ways we try to be friendly to staking at home: Relatively forgiving penalties for being offline, so you earn a net profit as long as you're online more than ~50-67% of the time Keeping the cost of validating the beacon chain low The anti-correlation penalty scheme, which more heavily penalizes validators that misbehave at the same time as many other validators (which is more likely if you're on the same pool or VPS or whatever). [Vitalik Buterin] Q: How can I help / get involved? I fell in love with Ethereum not too long ago. I\u2019ve been reading Zcash\u2019s BLS12-381 Elliptic Curves and for the past few days these are all thats been on my mind. I love this project now and just found ethresear.ch. I really wanna help in any way possible! Thanks again for all your hard work. I can\u2019t stop reading these posts. A: For researchers a good way to contribute and gain visibility is to post quality content on ethresear.ch. If you are a developer consider joining one of the numerous ETH2.0 implementation teams. [Justin Drake] A2: Hi! The best way to get involved is to find something that captures your interest and to dig in. Because Ethereum is a radically open platform, the research and development is also generally very open and very accessible. Keep reading. Follow your interests down all the little paths and begin to build a mental model of the ecosystem. https://ethresear.ch/ is a great place to follow and begin to contribute to research discussions. https://gitter.im/ethereum/sharding is where a lot of the day to day conversation about Serenity is happening (developers chatting from various projects) https://github.com/ethereum/eth2.0-specs Read the spec! but not only read it, be an active reader. If you find an error, typo, bug, etc, submit a PR. Also check out the issues and PRs in the spec repo. We are constantly discussing changes, fixes, updates and anyone can contribute. If you are a dev, open up one of the eth2.0 client projects and pick a \"good first issue\". These allow you to touch the codebase, contribute a bit, get the lay of the land, and provide the foundation to tackle bigger issues from there. ^ Those are Serenity specific suggestions, but beyond that, just find projects you are interested in and begin contributing. There is so much to do and project leads are always excited to have helping hands. This stuff doesn't build itself :) [Danny Ryan] A3: If you're interested in Cryptography especially, you can also check out another BLS - Boneh\u2013Lynn\u2013Shacham signature spec for Serenity and help to review it: https://github.com/ethereum/eth2.0-specs/blob/master/specs/bls_signature.md :) For research, as Justin and Danny said, ethresear.ch is the sanctuary. And first, you can take a look the various topics on Ethereum Sharding Research Compendium to see which area you're most interested in. For implementation, there are multiple topics: Consensus layer - implement the spec! P2P layer design and implementation - see https://github.com/ethresearch/p2p [Hsiao-Wei Wang] Q: From my limited understanding of Eth 2.0 specs, I gather that shards will be mostly independent, with cross-shard communication being slow and requiring multiple steps. As a consequence, smart contracts will only be able to interact lively with assets from within their deployed shard, and will have to go through slow cross-shard communication to interact with assets outside. Given this topology, are we not aiming to improve scalability at the cost of sacrificing user experience (slow response of smart contracts in non-obvious ways)? For instance if I want to play cryptokitties, I will need to make sure to interact with the contract that is deployed on the shard where my eth address resides, and not with any of the other contracts that reside on other shards. Then, if I want to interact with the kitties of someone else who resides on a different shard, my experience will be much slower and cumbersome than if that person would reside in my shard (or at least this is how I understand the system will work, please correct me if I am wrong). Given that the end goal is to scale to a very large number of shards, then the likelihood to have to go cross-shard increases exponentially with time, and thus the user experience gets progressively worse and worse. A: Cross-shard communication will definitely be slow at base layer, however there are higher-level mechanisms that can be used to implement fast cross-shard communication on top of a base layer that allows any cross-shard communication at all even if slow. See https://ethresear.ch/t/a-layer-2-computing-model-using-optimistic-state-roots/4481 for an example of how this could be done. In general, I expect a lot of the long-run innovation in improving the smart contract development experience to happen at higher levels in this way; I write about why this is a good idea at length here: https://vitalik.ca/general/2018/08/26/layer_1.html [Vitalik Buterin] Q: What happens to all the contracts currently running? A: It is somewhat speculative at this point. My best guess is that Ethereum 1.0 contracts will stay running as-is for a long time (say, 10+ years) without any migration to Ethereum 2.0. This can be made sustainable by doing two things: Lower the inflation (e.g. reduce it by 20x, bringing the PoW security to a blockchain such as Ethereum Classic). Completely removing inflation\u2014relying on transaction fees only\u2014would also be possible (see below for security argument). Use Ethereum 2.0 to regularly finalise Ethereum 1.0, counter-balancing the reduced security and preventing long-range 51% attacks. This requires Ethereum 1.0 nodes to be beacon chain light clients, which should take years to happen. If the community gets tired of Ethereum 1.0 a bomb mechanism (e.g. difficulty bomb, issuance bomb, gas bomb, etc.) can gracefully kill it. Another possibility is for Ethereum 1.0 to become a contract on Ethereum 2.0. I don't see this as a practical solution, but I'm open to being convinced otherwise :) [Justin Drake] A follow up: I'll add that if any specific user wants to migrate their application to the 2.0 chain, then they should be able to just take their existing high-level code (Solidity or Vyper), make relatively few changes and redeploy. The main difference between the eth1 and eth2 systems that users will need to worry about is likely to be rent (or equivalents like gas-payment-extended bounded TTLs). [Vitalik Buterin] Q: Is there a worry that shards will become \u201cgentrified\u201d until full shard interoperability? Basically, will one shard capture all the defi apps because they can't directly communicate with each other on separate shards? A: I would say if that happens, that will create a large incentive for someone to create a defi dapp that can interact with the other defi dapps through asynchronous cross-shard transactions and launch it on a cheaper shard. [Vitalik Buterin] A2: At the start in times of low usage, the economic load-balancing might result in over and under utilized shards. Overtime as usage increases, I expect the economic benefits of deploying and interacting on particular shards will become more tangible and result in a more economically rational distribution across shards. Observing the emergent behavior is going to be super fascinating :) [Danny Ryan] Q: Can we run the same validator on multiple machines - in order to avoid penalties if one machine was compromised ? If yes - what happens when we run a validator on 3 machines, one goes temporary offline, one is compromised, one is OK? A: For small amounts of ETH I'd recommend just running on one machine; unless many other validators get penalized at the same time as you, the penalties are not too large. If you do want to decentralize your validator, then we have recently made progress toward validation being more multi-party-computation friendly, which would allow you to run a validator as a 2-of-3. In that case, as long as two of the three sub-nodes are functioning correctly you'll be fine. [Vitalik Buterin] A2: Yes! Ethereum 2.0 is friendly to n-of-m schemes thanks to BLS signatures. For example, with a 2-of-3 scheme you have can three computers, each with a share of the validator private key, such that two need to be online at any given time. This improves security as well, because an attacker now needs to compromise two of the BLS key shares. [Justin Drake] Q: Is there tech from any competitors such as Dfinity (or any others) that is worth adopting into Ethereum 2.0, or is the work all other dapp/smart contract platforms doing not relevant/good enough for ETH 2.0? A: Part of the job of the research team is to absorb good ideas from research papers and other blockchain projects. I keep a keen eye on technically interesting projects such as Dfinity, Coda, Zcash, etc. Competitors definitely also have good ideas, and learning from each other is part of the game :) [Justin Drake] Q: Do we need to run a full node to also earn from network fees or would the validator client handle this? A: Depends what you mean by \"full node\". The design of the sharding system is such that no one needs to run a node that verifies all of the data of all of the shards. A validator client validates the beacon chain and the specific shards that you get assigned to validate, and that is sufficient to earn network fees. [Vitalik Buterin] A2: The validator client should abstract the necessary tasks to get revenue from the different revenue streams. (This includes being a full node for the beacon chain and one shard at any given time, but that's a technicality you don't have to worry about.) [Justin Drake] Q: Very interested to hear about the efforts currently underway at the EF and strategic partners/OEMs to design and manufacture the VDF hardware. It's also the thing that scares me the most about the proposed design;i can see how they would really increase the security of the random sample selection process in addition to RANDAO but manufacturing hw is a costly, difficult endeavor often subject to unforeseen issues and delays. On that note is an economic incentive structure for running a VDF node being considered? A: Very interested to hear about the efforts currently underway at the EF and strategic partners/OEMs to design and manufacture the VDF hardware. We're working our way with various partners, including Synopsys, AWS, TSMC, GUC, etc. VDF announcements to come in February :) manufacturing hw is a costly, difficult endeavor often subject to unforeseen issues and delays. Right. The good news is that Ethereum 2.0 can launch just fine without VDFs, so we're not betting Ethereum 2.0 on the success of VDFs. The current plan is to have VDF hardware ready in 2020, but 2021 would also be acceptable. From a financial perspective, we may share the total costs (estimated at $15m) with Filecoin and other projects interested in VDFs. We are already sharing costs with Filecoin on viability studies. On that note is an economic incentive structure for running a VDF node being considered? Short answer: yes, of course :) Long answer: the ethresear.ch post provides a bit of clarity on that. highly specialized hw always connected providing a crucial function to the network it would be a prime target for potential adversaries to disrupt or compromise Right. The good news is that we only need one VDF evaluator to be online for normal operation, and even if everyone goes down it's not a huge deal. The main negative consequence is that dApps relying on unbiasable randomness will have to wait longer than expected for the random numbers to arrive. [Justin Drake] Q: zk-STARKs are powerful and I have been reading Eli\u2019s and the others paper on it. Are recursive zk-STARKs ever doable? I know Coda is planning on using Recursive zk-SNARKs to shrink chains but the lack of transparency is worrying. A: I don't see what fundamentally prevents them from happening. Recursive [any zero knowledge proof schemme] just means using the ZKP mechanism to make a ZKP of the ZKP's own verification procedure. The main challenge in practice is just that these verification procedures themselves have a high cost (eg. there's 50-500 kB worth of hashes in a STARK to verify), and this cost multiplied by the ZKP's overhead is quite a big number. ZK SNARK verification is in contrast much more \"concise\". [Vitalik Buterin] A2: Are recursive zk-STARKs ever doable? In theory yes, but as I understand recursive zk-STARKs won't make sense from a performance standpoint for most applications, at least in the medium term. [Justin Drake] Q: What\u2019s the final scalability limit of Ethereum post Serenity? Gas limits per block? Blocks per second? A: The current design has a fixed number of shards, at most one block per 6-second slot, and fixed block sizes. This means that the data bandwidth is capped. The gas limit on the other hand will likely be floating, just like Ethereum 1.0. [Justin Drake] A follow up: Though in the current phase 1 spec that's sitting around in draft mode the block size is so far fixed to 16 kB, as keeping it fixed makes the code for proofs of custody, data availability proofs, etc much simpler. If we want to bump up capacity later increasing the shard count may well be the simpler way to do it. [Vitalik Buterin] Q: Why should anyone move to the Beacon Chain? How exactly do you envision the move to happen? A: Why should anyone move to the beacon chain. Specifically, only validator balances exist in the Beacon Chain. User balances and state exist in the shard chains. Validators will move to the beacon chain to seek profit by providing security and resources to network. Note there is a new proposal to have the beacon chain finalize the PoW chain during the transition period so the validators would be able to provide security both to the new shards and the existing chain. Users will move to the shard chains to participate in the new scalable, sharded landscape. We envision economic activity to begin to move over as the system stabilizes and begins to show clear economic benefits to the users. It is important to note that a user could choose to not move until the eth1.0 state is rolled into a shard. How exactly do you envision the move to happen? At first, this will just be a single directional deposit for validators only to begin validation. Once the state execution layer is in the new 1024 shards, users will be able to transfer eth directly to the shards from the PoW chain. In the long term, the plan is to roll the PoW state into one of the shards. The current most favorable strategy from our perspective is to fork the PoW state root into a contract along with an EVM interpreter. Users could then execute txs on the existing eth1.0 state by call the contract along with the merkle witnesses of the state they need to access. This option is nice because it allows us to cleanly deprecate eth1.0 support in the long term. [Danny Ryan] A2: Moving to the beacon chain is done by sending ETH to a so-called \"deposit contract\" on Ethereum 1.0. People would send ETH to the beacon chain to become an Ethereum 2.0 validator and gain financial rewards. [Justin Drake] Q: How much funds does Ethereum foundation have and are these enough for finishing Eth 2.0? A: The EF has tens of millions of dollars in fiat, and a bunch of ETH. More than enough to finish ETH 2.0 :) [Justin Drake] Q: How is the status of a possibly fixed eth supply at some point in the future? Do you think it's likely? A: I don't know about fixed ETH supply, but we may get to a point of decreasing ETH supply. Indeed, we are looking into transaction fee schemes that burn ETH, and burnt ETH may outweigh minted ETH. [Justin Drake] Q: Have you looked into hyraxZK. They are zk-SNARKs that do not require a trusted setup. Any thoughts on them being used in the future as the sizes are still very small. The only thing is they wouldnt be Quantum-Resistant but the proof size won\u2019t be similar to a zk-STARK. I wonder what they can be used for offchain as well, especially in networking by producing a zk proof of incoming packets that acts as Natural DDOS Protection. Just some thoughts. A: Have not looked into Hyrax specifically, but I am totally not surprised that things like it exist. I'm definitely very happy with the progress the general-purpose ZKP space has accomplished in the last few years; the very concept of general-purpose ZKP is pretty godlike compared to what I imagined was possible with cryptography as a child. Our general instinct is to find ways to make it possible to get the benefits of many different ZKP schemes with different tradeoffs in ethereum. The simplest way to do this would be to encourage the development of such tech as application-layer or network-layer addons so that it we do not need an agreement at consensus layer about a single ZKP scheme that everyone uses. [Vitalik Buterin] Q: V said that there are no fundamental problems left to solve. Is this true for only phase 0? If so, how confident are you about the other phases? A: Personally I am confident in all of the current fundamental technologies for all the phases outlined so far (Casper FFG and CBC, sharding, erasure coded data availability proofs, proofs of custody, receipt-based async transactions, layer 2 for acceleration, abstraction, rent, \"stateless client\" verification). There is definitely still a lot of room around the edges for optimization though. [Vitalik Buterin] Q: Why was Hybrid Casper ditched when it looks like the Beacon Chain kind of has nothing to do with the PoW chain? or Why not re-instate Hybrid Casper considering its testing is/was finalized? A: Honestly hybrid Casper is a bit of a dead end. Actually implementing/testing it across all the clients would require setting up a lot of infrastructure that we would then need to throw away. The design was highly inefficient because of its \"implemented-in-EVM\" nature, and it turned out that we could not really benefit from the ease-of-implementability of being done in EVM because we would need to write a lot of special-purpose code to make verification of signatures parallelizable. So we chose the route that would be somewhat more painful in the short term, but significantly lower headache to actually get to a stable sharded system overall. [Vitalik Buterin] A2: I wrote up some notes on the deprecation of EIP 1011 here https://notes.ethereum.org/s/rJDrKoBOQ [Danny Ryan] Q: 1. Since it is a one way transfer to the beacon chain, my understanding is that there will be two tokens: ETH1.0 and ETH2.0. Right? Will The beacon chain allow tokens to be send. I.e. will exchanges be able to list the token before phase 2? My feeling is that from a risk/reward perspective, stakers will expect returns more in the area of emerging market debt (+20%) esp. in the beginning. But all discussion I saw was ~2%. Any comments on this? Gutfeeling: how much \"unsolved computer science problems\" for phase 1, 2 and 3 roughly? I understood for phase zero it has arrived at 0. Will we consider some kind of tax baked into the system to ensure sustainability of core developments and infrastructure? A: Will The beacon chain allow tokens to be send. I.e. will exchanges be able to list the token before phase 2? ETH in the beacon chain would not be transferable (anywhere!) until phase 2. That will make exchanges harder, although we may see a futures' market. My guess is that we will see 1 ETH ~ 1 BETH at pretty much all times :) [Justin Drake] My feeling is that from a risk/reward perspective, stakers will expect returns more in the area of emerging market debt (+20%) esp. in the beginning. But all discussion I saw was ~2%. Any comments on this? The reward/penalty constants are certainly not yet finalized and could use more community debate and input. That said, the rate does scale depending on the number of validators participating. If the fair market rate is really 20%, then a lower number of validators will show up. If the fair rate is 2%, then a ton of validators will show up. The economics of staking will find the natural equilibrium. That said the main risk here is if we set the target rate too low and the equilibrium lands at a low participation rate (and thus low security of the network). Although ~2% (@ 10M eth validating) is not set in stone, the idea for a low rate is that a huge amount of ETH is already being held as a speculative asset. Any marginal rate of return on top of this already intended long-term hodling is a gain for the hodler. [Danny Ryan] Q: How would you (and or service providers) ensure the eth on the Beacon Chain is the same as that on the PoW chain and vice versa? A: Arbitrage is always possible in one direction by buying 1 BETH for 1 ETH. A key design goal of Ethereum 2.0 is full fungibility for ETH tokens between the Ethereum 1.0 chain, the beacon chain, and the shards. Two-way transfers between the beacon chain and the shards, as well as between shards, should come in phase 2. [Justin Drake] Follow up point: If you wait until phase 2 for two-way flow, you privilege the very few stakers able and willing to wait an undetermined number of years for access to their money. This will be great for those few (probably north of 25% interest rates!) but not very great for security. Follow up A: y ou privilege the very few stakers able and willing to wait an undetermined number of years for access to their money The ultimate loyalty test :) probably north of 25% interest rates!) but not very great for security. We do have a minimum amount at stake to launch phase 0, around 214 * 32 ETH = 524,288 ETH. So we're effectively capping the interest rate (will be less than 25%) and setting a minimum security level. [Justin Drake] Q: For how long is the 32eth locked up when running a validator client? What happens if the machine I'm using gets destroyed or stolen during the lock up period? Can you switch machines? A: For how long is the 32eth locked up when running a validator client? At least as long as you are a validator. Withdrawal times should be a few days/weeks/months depending on how many other validators are trying to withdraw. What happens if the machine I'm using gets destroyed or stolen during the lock up period? Can you switch machines? You can switch machines. You need a copy of your private keys in case your machine gets destroyed or stolen. Another thing is the withdrawal key used for withdrawals only. Keep that one in cold storage ideally. [Justin Drake] Q: Contributing to Ethereum 2.0? Are there any projects which are some sort of \"under water\", like only few people working on it. A: I feel at this point there are enough implementation teams, at least compared to some of the other issues that are underaddressed. Off the top of my head: Solidity being compile-able to E-WASM Vyper being compile-able to E-WASM Thinking about research problems related to phase 2, particularly around account abstraction, asynchronous contract programming models, etc Privacy, eg. see https://ethereum-magicians.org/t/meta-we-should-value-privacy-more/2475 Improving the state of decentralized messaging and file storage [Vitalik Buterin] Follow up A: A few more things good to work on: liibp2p implementations in various languages Doing security reviews of the spec prototyping account and state execution in eWASM a lot of work in cross client testing coming up in the next couple of months [Danny Ryan] Q: We have experienced consecutive delays with Constantinople due to bugs found late in the process on a comparatively low risk / simple upgrade. What work is being done to mitigate this on Phase 0 and 1 given how much more complex these implementations will be? (I.e. What testing, third party audits, other considerations are being taken to ensure seamless implementation/integration? A: As the phase 0 spec is moving into a more stable place, we are beginning to look into explicitly bringing in third party audits, academics, and formal analysis. In addition to this, we are currently laying down the foundations of cross client testing and fuzzing akin to eth1.0. You're correct in that the consensus/system layer of eth2.0 is much more complex than the single PoW chain so we are constantly trying to reduce complexity and simplify. This is a major engineering effort that will require many parties other than our research team to plan, build, test, execute, and maintain. I think it is a major strength that so many independent teams with a diverse set of expertise have stepped up to contribute. Note, one of the design goals in the spec readme -- \"to minimize complexity, even at the cost of some losses in efficiency\" We're excited to see new efforts like the \"Ethereum Cat Herders\" and scheduled release cycles emerging in 1.0 and plan to incorporate any best practices and efforts into the 2.0 process. DePM (decentralized project management) is hard, but we continue to learn and continue to get better. [Danny Ryan] Q: How difficult will it be for 1.0 contracts to work on Serenity? Should developers expect to rewrite their contracts to account for state rent and cross-shard communication? A: Solidity can already compile to WASM and I believe it is in Vyper's roadmap to do so as well. These naive compilations might be inefficient (e.g. keeping 256 bit types in the 64bit wasm machine) so some amount of rewrite or utilization of optimizers might be called for. Beyond that, there are some unknowns that might change the approach to certain contract programming modesl. For example, storage fees might call for a new ERC20 contract design in which user balances are stored in separate child contracts so that users become responsible for managing their own storage fees related to their coins. [Danny Ryan] Q: What is the latest view on how the \"upgrade\" to Ethereum 2.0 will happen? Can you take us through the different phases/hardforks that will in the end enable the full PoS/sharded/WASM blockchain, and what each will enable? A: Eth2.0 is broadly divided into three phases -- Phase 0, 1, and 2. Phase 0 - The Beacon Chain This phase is the launch of the core system level functionality of the new PoS chain (the beacon chain). Validators can submit deposits, join the validator set, and build/finalize the core chain. At this point the chain will have Casper finality, an RNG, shuffling into the various validator roles, and simulate crosslinking in the (currently) non-existent shard chains. Phase 1 - Shard Chains (data) This phase is the launch of the shard chains, but only as a blockchain of data. (Execution and state comes in phase 2). At this point, validators will additionally build these data chains and finalize the each shard back into the beacon chain via \"crosslinks\" and attest the availability of the data. These crosslinks were already being created in Phase 0, but had a stub for the shard hash being finalized. In this phase, that hash becomes \"unstubbed\". Shard data chains begin to have some utility for applications that need a high availability data store. Phase 2 - Shard Chains (state and execution) This phase is the launch of state and execution of state (eWASM) on the shard chains. This is when users and applications will begin to migrate to Serenity and use it to it's full potential. Cross shard txs will be available at this point, and users can begin developing any number of \"layer 2\" execution engines on top. The above (especially phase 2) might be divided into sub-forks, and there will be a fork during/after phase 2 to bring in the eth1.0 state/evm into a contract. [Danny Ryan] Q: I'm quoting James' article: \"This means there will be little reason to migrate smart contract code or users until Phase 4 is released, potentially in the mid-2020s\". Does this mean, ETH2.0 wont be usable before 2025? \"ETH2.0 designers do not know what the cross-shard communication system will look like.\" If you're so unsure about the features of ETH2.0, why is it being developed at all? What will be the advantages in daily use compared to EHT1.X? Why should anyone wait till \"the mid-2020s\" to use ETH2.0? A: 2025 sounds... unlikely! I publicly made the prediction (since July 2018) that phases 0, 1, 2 will come in 2019, 2020, 2021 respectively. Scaling from shards will come in phase 1 and phase 2. On the topic of timelines, for phase 0 specifically, ideally the spec should be close to final in Q1, cross-client testnets in Q2, security audits in Q3, mainnet launch in Q4. As a rule of thumb, launching in December is hard because of the holiday season. So November 2019 and January 2020 would be my two best guesses for phase 0. [Justin Drake] A2: I answered a related question here https://www.reddit.com/r/ethereum/comments/ajc9ip/ama_we_are_the_eth_20_research_team/eeufhqb [Danny Ryan] Q: https://hackernoon.com/what-to-expect-when-eths-expecting-80cb4951afcd From the article above, this is what I understand as the timeline of Ethereum 2.0: Phase 0 will be available in year 2020 Phase 1 will be available in 2022 Phase 2 will be available in 2023/24 Given the above timeline, is it fair to say that DAPP's have to wait at least 4 years before they can run their smart contracts on top of Ethereum 2.0? A: Hi! That article is written by an independent engineer that has been following development so it is not necessarily our 1-to-1 opinion. That said, I'm only seeing the following in the article -- \"Which is to say, while ETH2.0 may launch this year, don\u2019t expect ETH2.0 to support asset transfer or smart contracts until at least 2020.\" I agree that assets and smart contracts won't be available in eth2.0 in 2019. At the latest, I expect phase 2 to launch in 2021, but we are building a complex system and can't say for sure what unexpected challenges might arise between now and then. Waiting until 2023/24 is entirely out of the question for phase 2 imo. [Danny Ryan] Q: With eWASM will we be able to write contracts in Rust and/or any language that compiles to WASM in addition to Solidity? Where can one find out more about that and/or potentially help out? Thanks :) A: Yes you will be able to write contracts in any language that compiles to WASM :) I expect specific toolkits/frameworks to spring up in the languages people are particularly interested in (e.g. Rust, go, typescript, etc) to aid in writing contracts in these languages. https://github.com/ewasm/design is a great place to get started. The eWASM team has compiled a ton of info here to understand the project from a high level. https://gitter.im/ewasm/Lobby The eWASM team and broader community congregate in this gitter room and I'm sure would be willing to provide more guidance and answer any questions you have. [Danny Ryan] Q: Hi guys, Would you like to implement an optional decentralized identity layer in the future? like an option to use DID's or something. so the user can use zero knowledge proofs for Dapps that requires some proof of credentials of the user. Greetz A: Decentralized identity systems are definitely very interesting, but imo out-of-scope for blockchain base layers. The good news is that it's a Turing-complete platform, so anyone can build one on top of ethereum (1.0 or 2.0), and yes that are teams working on different approaches to it already. [Vitalik Buterin] Q: What is the one thing on eth 2.0 dev that keeps you up at night? A: In my mind the Ethereum 2.0 abstract design is a remarkably elegant/slick/simple design. I worry that we botch the spec with poor taste in some of the implementation details, or bugs that we miss. [Justin Drake] Q: How will the Eth1.0/PoW chain eventually be migrated over? A: See the bottom of this post https://www.reddit.com/r/ethereum/comments/ajc9ip/ama_we_are_the_eth_20_research_team/eeucd4f tldr, fork into a stateless contract on a shard [Danny Ryan] A2: See https://www.reddit.com/r/ethereum/comments/ajc9ip/ama_we_are_the_eth_20_research_team/eeub9sp/ [Justin Drake] Q: What are the current incentives for a person to run their own beacon node? A: It is a similar set of incentives as why you would run an eth1.0 node -- mining, run applications (block explorer, wallet services, dapp portal, etc), hobbyists wanting direct connection to the network, etc. If you are a validator, you will receive rewards for operating a node and signing consensus messages. If you run some sort of application, it can be beneficial to run a beacon chain to directly sync the shards you need. You also might serve light clients and applications as a business. I fully expect some some entities to experiment with this model. If you are a hobbyist, you might just like running the protocol directly for self-sovereignty :) [Danny Ryan] A2: Financial rewards through ETH inflation. I think Eric Conner has a spreadsheet somewhere. See https://twitter.com/econoar/status/1070713152864583682 for example here\u2014numbers presented here likely on the low side. [Justin Drake] Q: How do the researchers and developers feel about the complexity of ETH 2.0? A: We're definitely trying hard to bring the complexity down! Examples of complexity decreases that we've made in the last ~3 months include: Switching FFG from the \"per-block finalization\" model to a simpler epoch-based model Moving shard committee calculation outside the state Replacing the RANDAO hash onion construction with a simpler BLS construction (and same with the hash onion for proofs of custody) Storing validator state change slots in the validator record, making each validator's state transition process much more understandable Making shard blocks fixed size rather than variable size (which allows removing a lot of boilerplate for handling transitions) That said we recognize that there's still a way to go, and many features of eth2 don't feel neat and clean the way eg. Nakamoto PoW does. I personally hope a medium-term switch to Casper CBC (see https://vitalik.ca/general/2018/12/05/cbc_casper.html ) can mitigate some of that. [Vitalik Buterin] Q: Is there any work being done on reducing the size of the blockchain as it grows? A: You mean the current chain or the 2.0 chain? Since this AMA is primarily about on the 2.0 chain I'll focus on that. The beacon chain state size is bounded, and there are no objects that hang around forever; even validator records disappear once either their balance drops too low or the validators exit voluntarily and then the withdrawal and exit waiting periods pass. On the shard chains, we're looking at ongoing storage maintenance fees for every byte of storage, \"hibernating\" accounts that do not pay up (at which point their users are responsible for storing and maintaining the data needed to revive those accounts if they need them). [Vitalik Buterin] A2: If you are talking about the Ethereum 1.0 chain size there are a number of workgroups in place and some of them deal with decreasing the chain state or slowing down chain state growth. See: https://ethereum-magicians.org/t/meta-ring-to-discuss-and-coordinate-all-ethereum-1x-efforts/2048 https://ethereum-magicians.org/t/ethereum-1-dot-x-a-half-baked-roadmap-for-mainnet-improvements/1995 https://ethereum-magicians.org/t/state-rent-proposal-version-2-rushed/2494 [Hudson Jameson] Q: Inter-shard transactions - how do downstream shards protect themselves against kiting exploits (A->B B->C C->D where the transfer A->B is later challenged)?? I can imagine kiting tumblers that might make this a computationally intractable challenge. A: There isn't really a concept of \"challenging transfers\" in the current spec, and if you mean plain old fraud proofs then the answer is that if a block that was confirmed into a history turns out to be invalid then the entire history from that point on is invalid and should get discarded. [Vitalik Buterin] Q: If I deploy a contract in ETH 2.0 will it randomly be assigned to a shard? A: No. You specify the shard you want. You'll chose based on proximity to contracts of interest, and gas prices. (Each shard will have a separate gas market.) [Justin Drake] A follow-up: Though initial choice is not necessarily irreversible; contracts could be designed to be yanked ( https://ethresear.ch/t/cross-shard-contract-yanking/1450 ) from one shard to another, and I expect a lot of applications will take advantage of this feature. Q: Will there be a software implementation of VDF for those who are unable to obtain the ASIC? Also, will participants in the RANDAO/VDF mix earn rewards in a similar fashion to validators (if at all)? A: Will there be a software implementation of VDF for those who are unable to obtain the ASIC? A software implementation of the VDF would likely be useless for production. The current estimate is that a CPU implementation would be 1,000 to 10,000 times slower than the ASIC. A software implementation would be useful for testing though. will participants in the RANDAO/VDF mix earn rewards in a similar fashion to validators (if at all)? There will be a small incentive for validators to also be VDF evaluators. Other than that we're mostly drawing from external incentives (e.g. as a large ETH holder you have an incentive that Ethereum stays healthy). The good news is that we only need one VDF evaluator to do its job. There will be thousands of VDF rigs given for free to the community. [Justin Drake] Q: Do Quantum Computers pose a permanent threat to ownerless legacy addresses with significant funds and can they cause collisions with old contracts? A: One of the features of Ethereum 2.0 is \"abstraction\", which means that users can specify whatever signature scheme they want. I expect quantum-secure signature schemes to gradually become more popular. Burn addresses can easily be made quantum-secure. Do Quantum Computers pose a permanent threat to ownerless legacy addresses with significant funds Yes, definitely a threat. Ownerless legacy address could be a systemic risk for blockchains such as Ethereum and Bitcoin. Would be interesting to guestimate how much ETH is at risk. Q: ERC20/721 standards' design sucks. Is there any idea or plan to convert current tokens to ERC-1155 like, efficient format? (Code isn't Law. Seriously.) A: I'm hoping that Ethereum 2.0 standards (such as token standards) can learn from the mistakes of Ethereum 1.0 and evolve. Starting from scratch is a unique opportunity in Ethereum's lifetime. [Justin Drake] A follow-up: Agree! There's a lot from ERC20 that I dislike, the main two things being: It being a pull system vs a push system, requiring the whole approve/transferFrom mess to use tokens to pay for things in smart contracts Handling of ETH being so different from handling of tokens Definitely would like to see both issues resolved in 2.0. The other big things I want to \"get right this time\" is (i) multisig wallets and (ii) not having the \"ether used to pay for gas to withdraw funds from a mixer contract being a deanonymization vector\" issue that makes privacy hard at the moment. Q: How soon will staking pools be live when Ethereum staking goes live? A: At the consensus layer we are trying hard to be friendly to decentralised staking pools. Hopefully we will see those soon after the launch of phase 0. The research and implementation work that Dfinity is doing regarding BLS Distributed Key Generation (DKG) will likely help decentralised pools. Centralised staking pools\u2014unlike centralised mining pools\u2014are somewhat awkward because you have to trust the operator to behave properly with your funds. [Justin Drake] Q: If we want to bring our smart contracts to a new chain, could we pre-determine the corresponding starting/ending hex values for the old smart contracts? Kind of reminds me of CREATE2... A: Yes, Eth2.0 will have a CREATE2 equivalent for deploying contracts. As for existing contracts, the entire eth1.0 state will be rolled into a contract on a shard and these existing contracts will be callable via calling into this 1.0 contract targeting the existing contract address. [Danny Ryan] Q: Are there any courses or subjects in uni that one should take to help in becoming a researcher? A: I'd say you need to be a good self-learner. Math, cryptography, computer science, programming, economics, networking are all relevant. [Justin Drake] Q: Of proposed ways to tackle state rent problem, which one is your favorite? What do you think about resulting complexity from user point of view? A: As far as base protocol goes, either option here: https://ethresear.ch/t/a-minimal-state-execution-proposal/4445 The complexity is actually not so much in the rent itself, it's in how it changes the developer experience. The general approach is that application storage will need to be more \"modular\" and explicitly broken down into chunks associated with specific users, possibly with a fixed amount of \"global\" storage, plus some short-term storage not assigned to any user that goes away after some fixed amount of time, eg. 6 months. [Vitalik Buterin] Q: Question for Justin Drake and other VDF researchers: Would using Chainlink and TEEs (Intel SGX) be a viable method of generating secure randomness for the VDF function of Eth 2.0? Could this be used in lieu of specialized hardware? If so, I imagine this could be a substantial time and cost saving measure in the quest for Serenity. A: TEEs can be used to generate randomness using delay. Unfortunately TEEs is trusted hardware. We need a trustless solution :) [Justin Drake] A follow-up: Though I would add that trusted hardware could be a great thing for individual validators to use to increase their security. [Vitalik Buterin] Q: What computer science problems still need to be solved prior to the release of Phase 1? A: For phase 0 we need locally-computable shuffles. For phase 1 we want a custody scheme that is friendly to decentralised pools. Please message me if that sounds like your cup of tea :) [Justin Drake] Q: What happens to the beacon chain in the event of a controversial hardfork on the Eth 1.0 chain? Will two beacon chains form? If not, what mechanism will the beacon chain use to determine which Eth 1.0 chain is the main chain? How will this affect the transition of the Eth 1.0 chain onto a Eth 2.0 shard? What safeguards are in place to ensure that malicious participants do not create unnecessary volatility between ETH & BETH during the year long transition from phase 0 to phase 2? It is my view that this trading pair must remain stable for a successful transition to take place. A: If not, what mechanism will the beacon chain use to determine which Eth 1.0 chain is the main chain? By default the beacon chain validators will just use the voting mechanism that's specified in the spec, and whichever chain a majority of the validators support is the chain that the beacon chain will go with. That said, if we want to facilitate a peaceful split, there is a fork versioning feature built in to the beacon chain to make replay protection very easy... [Vitalik Buterin] Q: Why are you not doing \"proper\" research and submit publications to conferences? A: Not really an answer to your question, but Ethresear.ch ( https://scholar.google.co.uk/scholar?hl=en&as_sdt=0%2C5&q=\"ethresear.ch\"&btnG=&oq=\"et ) does get cited :) [Justin Drake] A follow-up: As does the Casper FFG paper! [Vitalik Buterin] Q: Let's say that I have some ethereum locked on a time locked contract, will be available after the 2.0 transition? This question can be expanded to all 1.0 contract functionality after the POS transition A: The Ethereum 1.0 will live on, even after Ethereum 2.0 is fully deployed. See https://old.reddit.com/r/ethereum/comments/ajc9ip/ama_we_are_the_eth_20_research_team/eeub9sp/ . [Justin Drake] Q: Thoughts on this tweet? https://twitter.com/zaoyang/status/1088001513459511296?s=21 A: Eth 2.0 is not really trying to maintain backwards compatibility; almost every part of the design is significantly altered, and old contracts will have to explicitly migrate over to the new system and in some cases rewrite eg. to adapt to rent. [Vitalik Buterin] Q: What's your vision for Eth 3.0? A: STARKs, STARKs and lots of STARKs. Hopefully some nice way to achieve 2 second average block times. Extremely effective cross-shard communication, either at base layer or through a variety of easy-to-use layer 2 systems. [Vitalik Buterin] A2: See https://twitter.com/drakefjustin/status/1072593728253104128 [Justin Drake] Q: In the future how will a really popular DAPP operate? Will it be possible for a single DAPP to operate across multiple shards? If not how will it operate properly with the TX/sec limits on a single shard? Will L2 solutions be the only option? A: A dApp would have to get really big to consume all the resources in a given shard to justify spreading itself over multiple shards. For example, Uber does less than 20 rides per second. A similarly popular decentralised equivalent would likely fit on a single shard, especially when fancy L2 infrastructure is involved (e.g. state channels, plasma, SNARKs/STARKs). [Justin Drake] Q: What is your take on the current state of finding consensus on randomness, in particular the current VDF construction. While certainly clever, I wouldn't say it is very elegant. Do you think this is due to theoretical constraints or do do you see potential for a 'nicer' way? More general, are there any theoretical problems in this space, relevant to Ethereum 2.0 or not, that are just interesting to think about? (starting my PhD soon and looking for inspiration if it wasn't obvious) A: I wouldn't say it is very elegant I'd say VDFs are a super elegant thin layer on top of RANDAO :) Is it the hardware you don't like? If so, would you agree that proof-of-work is an elegant solution? Then think of VDFs as being \"proof-of-work 2.0\": much better randomness at much lower cost. It's a paradigm shift from massively-parallel work to inherently-sequential work. Do you think this is due to theoretical constraints or do do you see potential for a 'nicer' way? I'm not aware of any unbiasable randomness schemes that only have strong liveness, other than VDFs :) are there any theoretical problems in this space, relevant to Ethereum 2.0 or not, that are just interesting to think about? (starting my PhD soon and looking for inspiration if it wasn't obvious) We will have an academic \"VDF day\" at Stanford on Feb 3 to work on open problems. Will you be nearby? [Justin Drake] Q: Shouldn't the smart contract stated in (4) have the ability of sending just 16 ETH for something as RocketPool v2 work (while some consider this to be \"centralization\" I think it will help a lot the average user and mitigate the risk of the average user)? A: You can send between 1 ETH and 32 ETH to the Ethereum 1.0 deposit contract at any time. A minimum balance of 32 ETH on the beacon chain is required for activation as a validator. [Justin Drake] Q: I see a lot of people talking about nodes running in cloud. Shouldn't ETH find a way to actually discourage this? If everybody is running nodes in cloud that means we have possible single point of failure, which is against what I think we are trying to achieve and what enterprise customers are looking to eliminate. A: \"Partial slashing\" and the quadratic leak during times of no-finality actually financially encourage diverse validator setups. Your potential losses are much smaller when your slashable message or validator down-time are discorrelated. Diversity in setup includes -- node software, validation software, local server vs cloud provider (and which cloud if using cloud), geographic region, etc. If a ton of validators all run on AWS and AWS goes down, these validators will suffer large penalty leaks. To guard against this, I should setup my validation node locally or on a less used cloud provider. [Danny Ryan] A2: We do have a way! It's called \"partial slashing\" and the idea is that, if something goes wrong, the more people did something wrong the more everyone gets penalised. So there is an incentive to avoid correlation with other validators, and hence avoid centralisation. [Justin Drake] Q: Can you foresee ever having to move Eth 1.0 to Eth 2.0 in order to avoid losing it forever? A: The current plan is to incorporate the eth1.0 state into a contract on a shard in eth2.0. Note that this will just be a state root and an EVM interpreter along with eth balances. Users will be able to call into this contract by providing merkle witnesses of the required state. [Danny Ryan] Q: I'm a new developer looking into Ethereum, where would you officially recommend I look to develop with an eye toward future proofing? A: A key consideration to future proof your contract code for Ethereum 2.0 is sustainable storage. It's known as \"storage rent\" and \"storage maintenance fees\". [Justin Drake] Q: What do you guys think of the Avalanche consensus mechanism and could it play a role in the ETH roadmap further into the future? A: Avalanche is interesting to me because it's a fresh approach. Looking forward to seeing how it plays out with Bitcoin Cash. Successes there can be ported to Ethereum via L2 infrastructure. [Justin Drake] Q: Is sharding smart contracts theoretically possible? How would one go about that? A: Here's a trivial example: the Ethereum Name Service (ENS) can be sharded across n shards according to the first log_2(n) bits in the domain name hash. [Justin Drake] Q: How does eth 2.0 balance security across shards holding different amounts of notional value in them? For example if there is a decentralized finance shard holding a very high % of eth + other tokens, would the stakers/validators responsible for that shard have incentives to behave badly? A: The key security guarantee of sharding comes from frequently shuffling validators into randomly-sampled committees (known as \"crosslink committees\"). The hope is that this fast shuffling resists bribing attacks, in both the \"honest majority\" and the \"slowly-adaptive rational majority\" security models. [Justin Drake] Follow-up Q: It still seems like an inefficiency where you'd be over-securing shards with low notional value + under-securing shards with high notional value. Am I thinking about this wrong? A: Every shard gets security with the same notional value. Value (validator collateral) gets spread evenly across shards. [Justin Drake] Follow-up Q: Ah think we are speaking past each other a bit, let me try to clarify my concern --> It seems likely you will have wildly varying ratios of (value sitting atop a particular shard / validator collateral securing that shard). So for example a defi shard with 90% of value in eth economy sitting in it only gets 1/1024th of the validator collateral securing it. And an empty or unused shard would get same 1/1024th of total validator collateral securing it. This seems inefficient to me. Depending on how the distribution of value shakes out across shards, potentially materially inefficient? A: This seems inefficient to me. Depending on how the distribution of value shakes out across shards, potentially materially inefficient? Oh I see! Interesting point. We consider every shard equal, and provide high security for all shards. The breakdown of even a single shard (namely, an unavailable or invalid crosslink) would likely be catastrophic for the whole system. [Justin Drake] Q: Will the Beacon Chain require its own nodes? Is this basically a brand new chain that has only one connection to ethereum: Proof of Burn? A: The beacon chain is a new system level chain that houses the validators and manages their responsibilities and rewards/penalties. In many ways this is akin to the FFG contract and sharding contract proposals that were previously deprecated but the organization breaks clean from the EVM to allow for a radically new design and increased efficiency. A node in the future can run the PoW chain and/or the beacon chain. If they run the beacon chain, they can then sync whatever shard chains they want. The connection at first is just an economic connection -- use the existing economics and community to seed validation in the beacon chain. Beyond that, we expect the beacon chain to be used to finalize the pow chain in the short to medium term. In the end, there are a number of proposals to either fork the eth1.0 state into eth2.0. [Danny Ryan] Q: How does Eth 2.0 account for DDOS attacks? If people run nodes at home on consumer hardware with a normal internet connection they can be taken offline easily with DDOS attacks or am I interpreting this wrong? A: It is the responsibility of a validator to remain online to fulfill their responsibilities and gain rewards. A validator can remain profitable if they generally remain online greater than 50-67% of the time. A validator's inactivity penalties are also minimized if their being offline is dis-correlated from other validators. This incentivizes to utilize different node and validation software from the majority so that in the case of a ddos attack vector against a particular node implementation, your offline losses are minimized. The validator's protocol level identity and it's node's network identity are completely decoupled. This allows for a validator to create any type of obfuscated network setup that serves their purposes. I expect many tools and best practices to arise for home validators in the coming months. [Danny Ryan] Q: What are your thoughts on formal verification of smart contracts? Will this be possible with Ethereum 2.0? A: Formal verification of smart contracts is awesome and super valuable IMO. Formal verification will be possible in eth2.0. I believe the WASM semantics are already available in K which will provide some good opportunities for contract verification. Opening up more languages by using WASM will also allow for utilization of more restricted languages that are more amenable to FV. [Danny Ryan] Q: What are some good cypherpunk books that you would recommend to people getting interested in this space? (Or just good book recommendations in general) A: I don't read many books nowadays. I mostly consume academic papers, whitepapers, podcasts, videos, blog posts, Reddit, Twitter, etc. I did enjoy \"Zero to One\" by Peter Thiel when I was an entrepreneur. [Justin Drake] **Q: How do you prevent single shard corruption attacks? Basically will there be resharding? If so, how is resharding done? How are you solving the fast state syncing problem if nodes need to be reshuffled around shards? A: How do you prevent single shard corruption attacks? By randomly shuffling validators across shards. Basically will there be resharding? If so, how is resharding done? Right now crosslink committees are shuffled every epoch (6.4 minutes) and shard proposer committees are shuffled every ~9 days. Crosslink committees are critical, hence why there are shuffled fast. See this answer also. [Justin Drake] Q: You said in a comment some days ago that there are basically no unsolved problems of Serenity Phase 0 left. Which problems of Phase 1 and 2 are still left to be solved? A: The short answer is there are no big fundamental problems for phases 0, 1, 2. The more detailed answer is that for phase 0 we need locally-computable shuffles. For phase 1 we want a custody scheme that is friendly to decentralised pools. For phase 2 we need to figure out sustainable storage. [Justin Drake] Q: Before Eth 2.0 Enhancements come in, what is the best recommended approach for storing private data on Ehereum? A: Storing data on Ethereum is expensive per byte. Infrastructure like Filecoin may prove to be a good trustless storage solution. For privacy, just encrypt the data. [Justin Drake] Q: Will there be any zk-snarks related enhancements coming with Eth 2.0? A: We are hoping to have a SNARK- and STARK-friendly hash function in Ethereum 2.0 at some point. Unfortunately those likely won't be ready for phase 0. At the application layer, WASM will ideally mean that SNARK-specific precompiles won't be necessary. [Justin Drake] Q: Is there some kind of roadmap for the migration from ETH 1.0 to ETH 2.0 in layman's terms? For true decentralization it is required to get more people on board that understand the full process. A: I described the three phases here https://www.reddit.com/r/ethereum/comments/ajc9ip/ama_we_are_the_eth_20_research_team/eeueuzc EthHub also does a great job at simply describing the path https://docs.ethhub.io/ethereum-roadmap/ethereum-2.0/eth-2.0-phases/ [Danny Ryan] Q: ETH token will not be transferable back after migration to ETH2.0 What will be the token ticker for the ETH2.0 chain native token? A: ETH\u2014at least when Ethereum 2.0 is fully deployed. Fungibility is a key design goal. [Justin Drake] Q: Where does new client software take lists of peers with their ip addresses and ports? Is there is centralized server? A: This is an implementation detail. Some clients may have a hardcoded list of \"bootstrap node\" IPs and ports. [Justin Drake] **Q: Do you have any final plans in mind about the current ETH inflation? A: Nothing final. Ultimately the community will have to make a tradeoff between low inflation and high security. See https://github.com/ethereum/eth2.0-specs/issues/251 . [Justin Drake] Q: What are the odds that a fully sharded chain including state transitions is feasible? A: Very high. No fundamental problems unsolved. The tricky part is getting everything to fit together cleanly. [Danny Ryan] Q: Can I use a raspberry Pi to stake when staking is possible? And what do I do with it in the mean time? A: Nimbus ( https://github.com/status-im/nimbus ) is targeting resource-constrained validators :) [Justin Drake] Q: What's your opinion of EOS (or TRON, STEEM) in terms of dapp platform? A: I tend to be critical of that class of systems. See https://vitalik.ca/general/2017/12/17/voting.html and https://vitalik.ca/general/2018/03/28/plutocracy.html for reasons why. [Vitalik Buterin] Q: Any updates as far as overall inflation rate per year or per milestone/HF? Any updates as far as TPS per year or per milestone/HF? A: See https://github.com/ethereum/eth2.0-specs/issues/251 [Justin Drake] Q: Can I make a Zcash coin on ETH 2.0 for example with all or most of the advantages of Zcash? A: Yes, there are already a number of experiments in eth1.0 to demonstrate usage of ZKSNARKs for both privacy and scalability. Check out miximus for privacy and roll up for scalability (both by barry whitehat!). Usage of ZKSNARKs will be supported in eWASM state execution so I expect more privacy solutions akin to Zcash to continue to be built on eth2.0. [Danny Ryan] Q: Why is ETH 2.0 Phase 0 even needed as a \"main\" chain, and need Bether transform from real ether (hence risk losing some value), instead of doing a testnet only, because after all this is what phase 0 is, based on TestnetBEther? A: ETH 2.0 needs a main chain as a single point of truth for all the shards. The reason we have phases 0, 1, 2 is to break things down conceptually, and in terms of incremental releases to limit risk. [Justin Drake] Q: What work is being done to make the research behind ETH 2.0 more geographically decentralized? Are there any efforts to translate research specifications into other languages? A: Are there any efforts to translate research specifications into other languages? Once the spec is more mature I expect the community to pick this up, somewhat similar to how Andreas's books get translated. English seems to be the a lingua franca for research and development. [Justin Drake] Q: After PoS, if a node gets hacked, can the hacker make the node to lose its stake by confirming false transactions? A: When your validator gets penalised it is automatically deregistered to prevent further damage. We have a mechanism called \"partial slashing\". The idea is that, if something goes wrong with your validator it only gets penalised a bit if not many other validators also mess up around that time. So in the optimistic case of a lone hack you should recover most of your funds with your withdrawal key (kept secure, e.g. in cold storage). [Justin Drake] Q: Will contracts be able to pay for gas in Eth 2.0? A: That will likely be unlocked with abstraction (which includes gas abstraction). [Justin Drake] Q: Assuming the number of network nodes remains the same and the network graduates to full PoS... what is your expected maximum theoretical transaction throughout? A: Rough ballpark figures. 1024 shards * 10 transactions per second per shard ~= 10k transactions per second. [Justin Drake] Q: What is the most updated timeline for rolling out PoS? Since Vitalik already said 'research is done', what are developers' incentives to push things forward? Are there any specific measures taken to ensure a smooth transition? A: I expect the beacon chain (the core PoS chain) to launch late 2019. Ideally the spec should be close to final in Q1, cross-client testnets in Q2, security audits in Q3, mainnet launch in Q4. As a rule of thumb, launching in December is hard because of the holiday season. So November 2019 and January 2020 would be my two best guesses. Having the Ethereum 2.0 chain finalise the Ethereum 1.0 chain will take more time. [Justin Drake] Q: Will it be possible with sharding to have shards with different rules and/or technology independent from the other shards/beacon chain, but still using the same base tech in terms of transacting and security? For example: private eth network run in a shard connected to main eth network from which it takes just security from validators. Private transaction with ZKsnarks shard(s). Encrypted data shards. Erc20 like coin launched on ETH 2.0, but with it's own rules and maybe own shards somehow controlled by the smart contract of that erc20. A: Every shard has the same data availability layer, and the option to use EVM2.0 as an execution engine. That's common base-layer infrastructure. At the application layer contracts can be powered by non-EVM2.0 execution engines (so-called alternative execution engines). There's also a huge L2 design around state channels, plasma, cross-shard communication, etc. So at the application layer I expect lots of non-homogeneity across shards, as well as a lots of homogeneity thanks to standardisation. [Justin Drake] Q: Today, running full nodes isn\u2019t that hard, but the resource requirements are slowly increasing. How much thinking is being devoted to the greater infrastructure requirements of Eth 2.0 and how they will impact node participation and decentralization? A: Ethereum 2.0 validation should be sustainable from a resource perspective: Bandwidth: fixed cost (thanks for fixes shard block sizes) Storage: if not fixed then sustainable (thanks to ideas such as storage maintenance fees). Note that storing shard blocks since genesis is not required. CPU, memory I/O: similar situation to Ethereum 1.0 (gas limit that can be voted up or down). [Justin Drake] Q: How ETH 2.0 differs from ETH, and why POS instead of POW. A: PoS enables goodies such as economic finality and sharding. It is also much cheaper (in terms of inflation cost for hodlers, as well as ecologically) than PoW. [Justin Drake] Part 2 Q: What do you feel is the biggest unsolved challenge left in Eth 2.0 research which must be addressed before Phase 1 or Phase 2 could be implemented in the future? A: I really honestly think that there are no unsolved research challenges at this point. It's mostly \"how do we make this thing more elegant and take up fewer lines of code and have fewer edge cases\" on the research side. [Vitalik] Better understanding the incentives and various actors that might arise in a stateless and highly abstracted execution model. There is really great work being led by both the EF eWASM team and the Consensys Quilt team to better understand the design space and active build prototypes to vet ideas. [Danny] Q: Previously, a release date of January 2020 for Phase 0 was informally articulated. Do you feel this date is realistic and achievable? A: Thanks for noting its informality. :) Launching early next year is my personal target, but there is a lot that needs to be done before then! We need: long-running test nets (however that is defined), formal verification of the deposit contract, and clients to be ready for prime time, but right now it looks like everything will come together in time. We also don't want to rush clients into developing buggy software just to be ready by an arbitrary date. If anything, I think BLS standardisation efforts are the most likely to slow us down. We (as a greater blockchain community) are trying very hard to have a standardised signature scheme for better interoperability between all the chains. There is a high degree of consensus on this already, but establishing a new standard is always a slow process. [Carl] The client teams are doing a great job and continuing to push the envelope. I expect exciting progress to be made in the coming months, but I also expect that the last mile might be long. Early 2020 is realistic and still the target. [Danny] Q: Are the researchers happy with the current state of the economics of Ethereum 2.0? A: I don't think it's productive for us to worry about the absolute numbers at this point; the network will launch, and either the rewards will prove sufficient or they won't. The other thing worth worrying about is centralization incentives, but that's difficult to work out \"in theory land\"; much of the result in practice has to do with how lazy people are. [Vitalik] Q: My biggest worry about ETH 2.0 is that it will kill composability. Won't most dapps end up trying to build on the same shard as say MakerDAO so they can use Dai? A: Composability between shards is definitely unchartered territory but there are reasons to be optimistic: The shards are designed for homogeneity (unlike, say, Polkadot or Cosmos) to facilitate cross-shard communication. There are design patterns which abstract away the boundaries between shards. For example, one could consider shards 0 and 1 as a combined data availability substrate for an execution engine which requires more bandwidth. These design patterns will be more easily exploitable in the context of programmable execution engines. The shards are designed to be friendly to \"fast optimistic finality\" thanks to shard attestations which are somewhat analogous to block confirmations in the context of Eth1. What this means that is, in practice, the shards may act as one logical blockchain thanks to quick probabilistic finality of individual shards. The UI layer is also an opportunity to abstract away the boundary between shards. [Justin] Q: When can we expect the Beacon Chain to be finalizing/checkpointing the Eth1.x chain? A: My best guess is early 2021. See here . [Justin] Q: Under the specs there is a \" block.eth1_data \" property; based on that I thought that somehow we were going to have an hybrid validation starting Jan 2020 (if all goes well) from both PoW and PoS. As stakers, what are we going to validate except the validators, staking rewards & penalties if all the traffic will still be on eth 1.0 and we're not taking part? A: In order for Eth2 to finalise Eth1, 2 things are needed, Eth2 must vote on Eth1 (as is implemented as you point out) and Eth1 must change its fork rule to follow the finalised blocks on Eth1. The latter requirement requires an Eth1 hardfork. It is therefore easier to just have validator finalise the things you mention for now and later on add in Eth1 finalisation. Additionally, it is safer to launch without Eth1 finalisation in case of a Eth2 black-swan event in the early days. [Carl] Q: Rebuttals to the criticism that Eth 2.0 is extremely complex? A: It got considerably simpler over the last year. If you do a word count on the spec, it seems to be considerably smaller than the yellow paper at this point. There's a lot of things in eth2 that are much simpler than eth1. But there's definitely lingering complexity and I deeply care about minimizing it. [Vitalik] While the research path has been somewhat tortuous and hard to follow, the end product is arguably simple and clean. Expect more educational material highlighting the simplicity of the current design. Phase 0 is about 1024 lines of code to specify (assuming SHA256 and BLS12-381 as primitives). I expect phases 1 and 2 to be 1024 lines of code combined (assuming WASM as primitive). That's just the phase 0 consensus (deposit contract, beacon chain state transition function, and beacon chain fork choice rule). [Justin] Q: Why are there so many teams building eth2.0 clients? I understand the point of client diversity but don't you think 6 clients seem to be pushing it? Supporting so many clients would also divide the resources in terms of funding. Which clients do you see as the geth and parity of eth2.0? A: A few notes on client diversity: There's more than 6 clients being developed\u2014it's closer to 8. I expect consolidation\u2014a bunch of clients may not survive 2020. I expect specialisation\u2014one can focus on the browser (e.g. Lodestar), resource-constrained devices (e.g. Nimbus), the enterprise (e.g. Artemis), prototyping (e.g. Trinity), etc. A minimum of two production-ready clients are necessary for launch. I expect the first-mover advantage to be strong. All the above have, to an extent, historically happened on Eth1. [Carl] We definitely don't want a duopoly! For me personally, the ideal would be to have no single client exceed 1/3 of the network, so any software bug in any single client would not stop the network. Though having no single client exceed 1/2 is ok too and gets us most of the same benefit (if a major client has a bug, having no finality for a while while things are being figured out may even be an improvement...) I expect a power law distribution, and it's definitely likely that some of the clients will not survive to see significant usage on mainnet. [Vitalik] My guess on why so many clients showed up to do the hard work is that eth2.0 is both exciting as a purely technical challenge as well as a chance to make a mark on Ethereum and the crypto space in general. I'm pleased that there are so many great teams doing the hard work, but recently, I've been more focused on finding contributors to do value-add work outside of the core client implementation. Formal verification, academic analysis of protocols, testing, light clients, web3 interfaces and developer tooling, validator clients with great UX that plug into any underlying node, etc, etc. [Danny] Q: Are the Ethereum 2.0 clients eventually going to replace the 1.0 counterparts? For example, will Prism ever get merged to Geth? A: I expect the Eth1 clients to live a long and prosperous life :) On Prism: \"Likely not. Other than the language (Go), Prysm and Geth have very little in common.\" [Justin] Q: what happens when I stake 32 eth, and get slashed once? now that my stake is below 32 eth do i get kicked out of the validator set? A: Validators get kicked out when they get slashed. There is another ejection mechanism if your balance goes below 16 ETH from accumulating (non-slashing) penalties. [Justin] You also lose some amount of ETH. The minimum being set to 1 ETH currently. There is an additional penalty related to the number of other slashable offenses that have occurred in the recent time period. If more validators have been slashed recently, you lose more ETH. The maximum penalty occurs if ~1/3 of validators have been slashed recently, at which point you lose all ETH. This highlights the importance of having a discorrelated validator setup from other nodes and potentially having some fault tolerance setup with yourself before you sign things. [Danny] Q: What are the non-slashing offences? A: There are micro-penalties for not voting to finalise the same blocks as other validators and the inactivity penalty (for offline validators) for when the chain is not finalising for an extended period of time. [Carl] We have a bunch of micro-penalties for not optimally crafting attestations and penalties for being offline (search for get_attestation_deltasand get_crosslink_deltas here ). [Justin] Q: i hear a lot of hype around staking rewards, but what are the penalties for getting slashed? does the network have different punishments for different misbehavior (offline vs. double-signing)? is the \"up to 60.8% slash in 18 days\" still correct? A: I think you are conflating two thigs here, slashing and the inactivity leak. Inactivity leak If your validator node goes offline for 18 days, and the beacon chain is not finalizing, then your balance will be reduced by \"up to 60.8% slash in 18 days\". Slashing If a validator behaves provably maliciously, then they are slashed by having their balance reduced. Assuming client software is written well, this should be basically impossible to happen to you. Minimum penalty is 1 ETH, but it goes up linearly in the number of people slashed at the same time as you. See here for more [Carl] Important to note that if you are offline, but the chain is still finalizing you only stand to lose approximately the same as you would have gained. The quick reduction in balance over a ~2 week period only occurs when not finalizing. Another reason to have a discorrelated setup from the rest of the network! [Danny] Q:What is currently the most exciting new research development in Ethereum 2.0? A: The execution engine abstraction in phase 2 is quite exciting, taking account abstraction to the next level. It allows for the consensus part of execution to be an ultra thin layer of abstraction on top of data availability. Assuming WASM as a black box, it may be on the order of 256 lines of code to specify. There's an initial proposal from Vitalik here . The idea is that even the notion of a \"transaction\" is an application-layer detail which can be specified as WASM code. Compare this to Eth1 which \"enshrines\" an opinionated notion of replay protection (nonces), signatures (ECDSA), contracts, accounts (vs UTXOs), gas, storage, etc. [Justin] I'm lately most excited about this . The OVM work by Karl Floersch and co is along similar lines and also very interesting. [Vitalik] Q: Theres been some debate over the necessity of ASICs in Eth 2.0. I understand theres an effort to spread the cost out among various communities, but I think many people feel this might just end up being an expensive science project where the rewards dont justify the costs and if you itemised Eth 2.0, it seems like it might be the most expensive part. Are there alternatives besides relying on just Randao/Randao + ASICs (VDF)? What are the ELI5 upsides + downsides of the alternatives? I appreciate that the researchers are a tackling a difficult problem with randomness for a blockchain. A: It's important to stress that the VDF mechanism's safety is not critical to the safety of the Eth2 consensus; if the VDF scheme gets broken or someone makes an ASIC fast enough to predict all the outputs, all that happens is that the percentage of validators they need to corrupt a single committee drops by a few percentage points (think, from ~50% to ~33-40% plus a lot of computing power). I actually think the main value of the VDF is that it provides global trustable secure randomness to applications that need it. [Vitalik] +1 on consensus-layer security and/or performance gains, and value-add at the application-layer. The other \"promise\" of VDFs is that they are a new cryptographic building block with the rather unique notion of time. They can used for proofs of space, proofs of replication, proofs of history, anti-frontrunning, expiring zk-proofs, and hopefully further applications which are hard to predict today. [Justin] Q: I'd like to know more about the data availability layer of Ethereum 2.0 - particularly the economic costs of long-term data storage. Part of my political platform includes integrating blockchain technology with government operations. For example, I'd like to see all of America's public records stored on a public, open source, sufficiently decentralized blockchain. Would it make sense to build something like this on top of Ethereum 2.0? Why or why not? A: Realistically you would want an incentivized data storage platform like Swarm, with hashes of the documents stored on the ethereum blockchain. But I'd recommend thinking harder and trying to figure out how to answer the deeper question \"how could we use blockchains as a tool to minimize opportunities for misbehavior in government?\" Places to start I can think of include: Things like https://opencerts.io/ for all government-issued records Using https://ethresear.ch/t/minimal-anti-collusion-infrastructure/5413/ to do online votes, starting in low-security contexts (I think petitions would be a good place to start and underexplored) An internal-use stablecoin where only government agencies can hold balances but transactions are visible to and auditable by the public Some kind of zero-knowledge privacy-preserving sales tax collection thing Blockchain-based solutions for esoteric government things like spectrum auctions Get your country (I'm speaking generically to all readers here :D) to make an Estonian-style E-ID system that lets people make digital signatures that can be verified by anyone publicly. This is not technically a blockchain application, but it would be a tool useful in many blockchain applications [Vitalik] Q: I recall /u/bobthesponge once saying that almost his entire Net worth is in Ether (even his salary from the EF). Are there any other researchers on the research team that are as convinced of Ethereum's future, besides Vitalik and Justin of course? No need to call someone out. Just percentages, ie. \"Over 50% of the research team is heavily (over 30% of net worth) invested in Ether financially\", would be sufficient. A: Somewhat ingrained in our culture, the research team doesn't talk much about net worths. Having said that, the research team has a lot of fresh blood (e.g. Dankrad, Proto, Carl) which I don't expect to be crazy invested in ETH.[Justin] I am not an eth whale, but I get paid in eth and have high exposure. [Danny] The aforementioned Carl here, let's put it this way: financially, emotionally, and intellectually, I am heavily exposed to ETH. [Carl] Q: How many Eth2.0 client teams have to have a finished client for the Beacon chain to go live? A: I asked the same question a few days ago. At this moment, it is still an open question and will likely be until much loser to the time. Obviously having more clients is better, but that should be played off against the launch date. I am currently torn between 2 and 3. (Having > 2 would be great because otherwise there is a client guaranteed to have a majority of the validator-base.) At the end of the day, it will come down to who is ready and when. [Carl] Two at minimum, ideally three. [Justin] Q: I understand that about 10 million eth is expected to provide good enough security for the network. In a hypothetical scenario, what happens in the situation where a large organization manage to secure more than 50% of the total eth staked and use it to maliciously attack the network? As i understand, the side with less total eth staked will be slashed, so won't this malicious actor be able to effectively kill the network? A: If a large actor were to aquire a large enough stake to take over the network they would need to buy >2/3 of the total staking supply which would drive the price up, so it's not a cheap attack in the first place. Secondly, you are not slashed if you vote for a minority chain, only if you behave provably maliciously in the eyes of 2/3 of the validators. One of the beautiful things about PoS is that these attacks can be handled with grace. We, as a community, can go in and hard-fork out the malicious actors so they have no more voting power. The malicious actors just burnt a lot of money to temporally halt a network. In PoW, by contrast, if someone buys ASICS with 51% hash power, there is no way to remove them from the system. [Carl] Q:Do the client teams feel their implementations will be sufficiently robust enough, stable enough, and easy enough to use that normal nerds (like myself) can safely run their node software, stake 32 ETH on it, and not be slashed or lose ETH due to client bugs? My biggest concern is losing ETH while being a well intentioned actor. I've ran Geth, Parity, Trinity, and EthereumJ (Harmony) nodes for multiple years now and those clients have been around a lot longer than any of the ETH 2.0 clients have, but they still have issues, still have bugs, still sometimes crash. A: I hope so! One key component in the incentive design is that penalties (for going offline and for being slashed) are only high if many other validators go offline at the same time. So any bug that doesn't hit every node at the same time should only cost you a minimal amount. [Vitalik] Q:suppose ethereum reaches 1 mllion tps, ledger size will grow 1 terabyte everyday, any solution to this? what is your projections in terms of ledger size growh and what is your solution to this A: The sharded eth2.0 is expected to handle ~10MB/s of data availability. This is data that is come to consensus upon in shard chains and guaranteed to be available in at least the ~2 week time frame. This is not necessarily state size. The current approach to state and state execution is to take a \"state-less\" approach in which blocks must contain the merkle witnesses of the relevant state to perform the tx executions. This is reduces the amount of state any consensus node must store, but does bring up other issues about state size, who stores it, how users get it, etc. In fact, the entirety of state execution is being abstracted away such that we can experiment with multiple schemes to deal with this problem (state rent, users/dapps storing their own data, etc). Much of the state rent research that @ledgerwatch has driven in the past year or so will likely come into play. [Danny] Q: Lets assume you are a guy with very little cryptotech-knowledge, but you do have >32 ETHER. Question #1: Would staking be made easy-to-do, so \"ordinary\" people can earn interest on their holdings? Question #2: Does staking pose any risks of losing ETH by accident? Trying to understand if you can stake without any risks unless you \"intentionally\" try to harm the network (eg. if your validator node goes offline, because your internet provider has an issue and likewise) A: Would staking be made easy-to-do, s\u00e5 \"ordinary\" people can earn interest on their holdings? I expect a cottage industry will be setup around accessibility. Infrastructure to be built includes staking pools (centralised\u2014think Coinbase\u2014as well as decentralised one) as well as plug-and-play \"validator in a box\" solutions. Trying to understand if you can stake without any risks unless you \"intentionally\" try to harm the network That's definitely the goal. eg. if your validator node goes offline, because your internet provider has an issue and likewise Penalties should be marginal for validator nodes that go offline for short periods of time every once in a while. [Justin] Q: What is the current thinking around the Eth1>Eth2 migration plan? A: The current approach is to fold eth1 into eth2 as an execution environment. In practice, this will mean that we would need to have a hard fork on the eth1 side to rebalance some gas costs (opcodes that read storage or read accounts would see their gas costs increased to 2000-10000), and after that at some point there will be a \"flag block height\" from which the eth1 state root will be moved into the eth2 system (or possibly some one-time processing will be run on the eth1 state to make some optimizations, eg. replacing the patricia hex trie with a binary tree) and after that eth1 will be part of eth2, with applications being able to run as before. I do think the likely gas cost increase of storage/account reading opcodes (basically the same opcodes whose gas costs were already increased in Tangerine Whistle; those costs will need to go up at least another order of magnitude) is something that contract devs should be aware and plan for. The reason that change will be necessary is that those opcodes greatly increase the size of a Merkle proof needed to statelessly verify a block, so currently Merkle proofs for a worst-case block are >100 MB; with those gas repricings plus trie optimization plus charging per byte of any contract being read, we could get it down to acceptable levels. [Vitalik] Q: Regarding Proof-of-Stake and wealth distribution (and issuance reduction), by the looks of it the majority of ETH will be held by the minority of entities, does that cause any concern since a single entity can run multiple validator nodes (and earn more rewards)? It's a question from inequality perspective not security; if ETH were to take a significant role in the global economy, wouldn't this widen the gap between rich and poor by orders of magnitude (MUCH worse than the current economic system)? Basically, economic inequality on steroids. A: I definitely think income inequality issues from crypto are an issue! It's a big part of why I am not a single-cryptocurrency maximalist. But I still think that PoW is not better than PoS from an inequality point of view, because although PoW does distribute coins into \"fresh hands\", you need so much capital to become a PoW miner that PoW itself is a big rich-get-richer mechanic in practice. [Vitalik] Q: I know its still early but are there some rough estimates of when we might see Spec freezes for Phase 1 and 2? A: Phase 2 is a bit too far out to say, but my hope for phase 1 is Q3/4 of this year. [Carl] That said, the current minimal execution design with EEs for phase 2 (once better researched and prototyped) is a super simple addition on top of phase 1 [Danny] Q: Please ELI5 (\"explain like I'm five\") why the need for a second chain instead keeping on evolving the first one? A: Building Eth2 on Eth1 would be a bad design decision for a few reasons: We would be constrained by the Eth1 gas limit, which would severely affect performance (e.g. 1024 shards and 32 ETH to validate would not be possible). We would be mixing the consensus and application layers. This means the consensus layer is subject to the application-layer DoS vectors (e.g. high gas prices). It would also mean \"enshrining\" application-layer contracts, which is far from ideal from a governance standpoint which should be as neutral as possible with regards to deployed contracts (i.e. The DAO interventions should be the exception, not the norm). We would be constrained by the EVM, which is notoriously hard to safely program complex contracts in. Eth1 does not have support for BLS12-381. We would be subject to the Eth1 block time Poisson distribution (as opposed to the regular\u2014and shorter\u2014slots durations in Eth2). The list goes on :) [Justin] Q: I am considering to stake during phase 0, but i am a bit concerned about the inactivity leak. I want to know how to stop/pause being a validator if I change my mind? I am asking this as there may be certain situations in which I think I will be offline for a while, and I do not want my balance to slowly leak out due to that. A: You will only suffer large penalties if you are offline at the same time that >1/3 of other validators are offline. Otherwise the penalties for being offline will be tiny, to the point where you will be net-profitable (not including computer costs etc) as long as you are online more than ~50-67% of the time. The incentives are deliberately designed to be forgiving to avoid discouraging amateur setups to promote decentralization. [Vitalik] The closest to a \"pause\" button is to first exit (which can take as little as half an hour, but may take days/weeks since there's a queuing mechanism) and later re-activate. [Justin] Q: 1024 shards, 131,000+ validator slots... what happens if there aren't enough validator slots filled by the time sharding goes live? A: With 1024 shards, and 128 validators in a committee, a minimum of 131,072 validators are needed to crosslink every shard every slot. If there are fewer validators than this, then shards are skipped to ensure the 128/committee validator number. [Carl] The system can naturally handle as low as ~64 validators. In this case, security is obviously insanely degraded, but the protocol can technically move forward. [Danny] Technically the system can \"move forward\" with one validator :D But yes, below the 131,072 validator (4.1M ETH) level the properties of the system progressively degrade as the number of validators goes lower and lower. [Vitalik] Q: if i understand finalization correctly, the more validators you have the longer it takes to finalize. how is eth2 addressing this issue without pounding the network with tons of messages being sent between all the validators? A: Correct. I wrote an article about this fundamental tradeoff here: https://medium.com/@VitalikButerin/parametrizing-casper-the-decentralization-finality-time-overhead-tradeoff-3f2011672735 We managed to get a couple orders of magnitude more favorable tradeoff curve than other projects through BLS signature aggregation, which reduces the marginal cost of a signature to 1 bit of data and 1 ECADD (~0.001 traditional signature verifications) of computation. [Vitalik] In Eth2, more validators should not lead to (significantly) longer finalization times. By making use of BLS signature aggregation and by grouping the validators into committees, we're able to support hundreds of thousands (and hopefully into the millions) of validators. [Carl] Q: Has the EF given any thought to maybe issuing \"official\" NFTs (i.e. collectibles) to initial stakers upon the launch of Beacon Chain as an \"extra incentive\"? What's your opinion on this? I'd say this would be the remit of the community, not the EF. Note that the Eth2 designers avoided giving early validators a special reward (e.g. giving the first 16,384 validators a 1 ETH bounty) to avoid distorting the economic experiment. We want to learn whether or not the basic incentivises are sufficient to incentivise participation. [Justin] I actually like the idea of an NFT. The deposit contract is readable in such a way that proofs can be made to a separate contract to generate NFTs. Been talking to Austin Griffith about this. He/burner-wallet might take the charge. I don't think an NFT would hinder our ability to understand the pure incentivizes here. It's at best a trophy and of little economic value imo. [Danny] Q: How is the work on evaluating the feasibility of producing dedicated VDF hardware coming along? A: At this point there's reasonably high confidence that VDFs (including building hardware) are viable. A few updates: A team of 3 ex-Intel people (Simon, Sean, Kelly from Supranational) is dedicated to the hardware aspects. The Rivest timelock challenge (open for 20 years, designed to last 35 years) was cracked in a few months using an FPGA (see here, and here). There's also code on Github. Work by Erdinc Ozturk has improved the state-of-the-art circuit depth for the modular exponentiation in VDFs. The ePrint paper was submitted a few days ago and should be published soon. A prominent complexity theorist (Ryan Williams from MIT) is working on circuit depth lower bounds for modular multiplication. Significant progress was made by Ligero on the RSA ceremony. We are planning for a ceremony with unprecedented scale (1024 participants) in 2020. New research papers keep flowing in\u2014see http://vdfresearch.org The $100K FPGA competition is starting in a few weeks. We have relevant corporate sponsors for the FPGA and ASIC competitions. In addition to the Ethereum Foundation and Protocol Labs (i.e. Filecoin), a new blockchain project (to be announced with the FPGA competition) is helping with funding. $900K was raised in the latest round of funding. [Justin] Q: Is there a chance for obligatory anonymity of future validator withdrawals? Force every withdrawal to go to a shielded pool - like zcash does with mining rewards. I fear without the obligatory anonymity here just using a mixer/etc is going to be treated as extremely suspicious - forcing stakers would add plausible deniability. A: I definitely support moving toward more and more privacy being a default over time! I'd say validator deposits are more important to mix than withdrawals, as that way it becomes harder to locate the nodes of specific validators which seems like it would increase security and censorship resistance. [Vitalik] Q: What are the main incentives to run a beacon node for validators if they can just connect to high-up time beacon nodes?If there are beacon node providers with high up-time - how is this going to be decentralized? A: There is an anti-centralisation incentive mechanism baked in. Basically, validators get punished for going offline the more other validators are offline at the same time. So \"uncorrelated downtime\" should be optimised in addition to \"high uptime\". [Justin] Q: If, as a validator, I know that I'm going to be offline for a period of time, is is possible to 'pause' validating without suffering an inactivity leak? A: The closest to a \"pause\" button is to first exit (which can take as little as half an hour, but may take days/weeks since there's a queuing mechanism) and later re-activate. [Justin] Clarification: there's a minimum ~1 day period before you can withdraw after you exit. It's safe to be offline during that time, but it does prevent you from re-entering. If we want to, in some future version we could add a \"re-enter\" feature that allows immediate re-depositing without waiting to withdraw first.... there's no theoretical reason why such a thing would not be possible. [Vitalik] Q: Do we have clarity yet on whether currently locked-down smart contracts (eg metronomes 4 contracts by Jeff garzik) will continue to work seamless in ETH2.0 or whether these contracts will be deprecated with all ETH in them lost? And how can storage costs be added to locked-down contracts in ETH 1.x ? In other words can we all assume immutable contracts on ETH1.0 will continue to work forever (provided enough people want them to)? Thx A: The current plan is that eth1 will be folded into eth2 as an execution environment via the stateless client approach, in which case, yes, contracts will keep working as expected. [Vitalik] Q: According to this paper, it may be possible for Quantum Computers to hijack and re-sign transactions DURING BLOCKTIME by (as early as) 2027. In other words, ownership of ANY wallet that has not upgraded to a quantum secure signature scheme BEFORE THEN can no longer be trusted AT ALL (even WITHOUT previous outgoing transactions). SO THE QUESTION IS THIS: Is anyone who fails to manually upgrade their wallets before a deadline (in order to become quantum secure) guaranteed to lose their funds after the advent of Quantum Computers? For example, if someone stores a PAPER WALLET for let's say 20 years, are they going to lose their funds by that time? Can QCs just monitor the entire blockchain and automatically attempt to hijack any transaction with insecure signature scheme during one blocktime, even if the sender has no previous outgoing transactions? A: Even if a quantum computer gets announced as immediately usable tomorrow, it is possible to do an emergency procedure to secure the funds of everyone who has not yet publicly released their public key or a signature (ie. every standard account holder that has not signed a transaction). You do this by doing a soft fork to disallow standard transactions, and replace them with a special transaction type that uses a STARK to prove that you own the private key k such that the given address A equals to hash(G * k)[12:] , and then moves the funds over into a new address type that uses a quantum-secure signature scheme, eg. Winternitz signatures. If we get more warning, then we can get people to update to Winternitz on an orderly schedule. TLDR: we're fine. [Vitalik] Q: how do/will the performance bottlenecks compare between 1.x and 2.0 A: 2.0 removes the disk I/O bottleneck for consensus participants by heavily leaning towards stateless clients. Finality greatly mitigates the sync latency bottleneck, and the requirement for consensus participants to store historical blocks. [Justin] I'd also add that I expect light clients to be massively more viable in eth2 than in eth1. About the same order of magnitude load as a bitcoin light client to stay synced (as opposed to eth1, where light clients are not light enough in practice to run on phones...) [Vitalik] Q: As an ETH miner, my main concern is how to prep for ETH 2.0. Any wiki, tips, or advice on how to proceed contributing (and profiting) for Ethereum? A: Eth2 has no mining. You may be able to put those GPUs to good use at the application layer with protocols like Golem, or maybe protocols that incentivise GPU-accelerated SNARK proofs. [Justin] Q: Approximately when is ETH issuance supposed to drop dramatically? (I believe the figure I've come accross is 10x reduction in issuance, is this correct also?) A: When the PoW chain starts piggybacking on the PoS chain for security (this could happen during phase 1 or phase 2), it becomes safe to lower the PoW chain reward by maybe ~4x. Further reductions would happen when the PoW chain stops entirely. [Vitalik] Q: During Phase 0, will ETH 2.0 be transferrable between wallets? 2.0 to 2.0? If so, are there concerns exchanges will list ETH 2.0? A: Transfers will probably only go live in Phase 1 at which point exchanges will list ETH2.0. Having exchanges to so will help maintain price-parity between ETH and ETH2.0. [Carl] Q: if block reward is X eth, and it is enough to secure the block, why do we pay X+gas to miners? Will this change? A: In Eth2 the economic security is not a direct function of the block rewards. Instead, it is a function of the total amount at stake. Will this change? Eth2 should have a partial fee burning mechanism (see EIP1559). [Justin] Q: As ETH 2.0 currently stands what are the odds of a uni-directional vs bi-directional 1.x to 2.0 bridge? A: The uni-directional Eth1 -> Eth2 bridge comes with the beacon chain. I'd say it's likely there will be a bi-directional bridge eventually (though unlikely to happen in 2020). Even better than a bi-directional bridge (based on light clients, which comes with non-negligible latency) is native integration of Eth1 into Eth2 (see here). [Justin] Q: Will the issuance rate be enough to incentivize validators given the competition from say DeFi products and will it be changed in the future if needed? A: Compound rates for ETH are ~0.02% AFAIK, so very easy to compete with. The \"do you take 3% interest staking or 6% lending DAI on Compound\" framing is highly misleading, because that 6% is on USD, which is very different to having 3% on ETH. But over time I do expect interest rates on ETH to slide up as more forms of staking become available (eg. channels, Plasma, Truebit, other security deposit games...). [Vitalik] Q: What are the research team's thoughts / plans on if there is extreme price differences between ETH 1.0 and ETH 2.0? I would think arbitrage would solve the issue but haven't thought too deeply on the subject myself. In paticular, if ETH 1.0 coins are worth significantly more causing people to not want to redeem their ETH 2.0 coins because they will instantly take a price hit versus just selling. A: I'm not too worried: Transfers and exchanges can be used to redeploy \"cheap\" Eth2 coins for validation. Large holders (e.g. the EF) can be arbitragers. The greater the price delta, the greater the incentive to deliver a two-way bridge ASAP. [Justin] Q: Is it still the plan that the frequently rotated notaries perform stateless validation of the blocks? If yes, are there any insights into how much extra network overhead will sending blocks with merkle proofs incur? If no, is there any other mechanism to prevent adversaries that can corrupt a shard quickly from applying an invalid state transition? A: Is it still the plan that the frequently rotated notaries perform stateless validation of the blocks? Yep! If yes, are there any insights into how much extra network overhead will sending blocks with merkle proofs incur? Looks like ~10x data (though very low computation, and we expect data to be cheaper than computation). But with techniques like https://ethresear.ch/t/layer-2-state-schemes/5691, even that could potentially be unnecessary. [Vitalik] Is it still the plan that the frequently rotated notaries perform stateless validation of the blocks? Yes. are there any insights into how much extra network overhead will sending blocks with merkle proofs incur? Now that execution engines are application layer, the answer is technically 0 :) For execution engines that use large Merkle trees (e.g. Eth1) the rough estimate at one point was 8x. I'm personally excited for execution engines that do Merkle path \"witness compression\" using SNARKs (proof creation accelerated by GPUs, FPGAs, or even ASICs). [Justin] Q: What is the current design to move Ether tokens on eth1 to eth2? A: That depends on what you mean by \"Ether tokens\". Validators can send a deposit of 32 ETH to the deposit contract which is then transferred to the beacon chain where they can begin validation. For people who wish to transfer their ETH from Eth1->2, that is not something that has been decided upon yet, but there will (probably) exist a dedicated bridge for this purpose (otherwise they can go through the deposit contract). It is still too early to know about ERC20/721 tokens. If Eth2 has an Eth1 execution engine, then it could be pretty painless, but even if not, an ERC20 token could just be transferred by copying over its state root. [Carl] Q: Sorry in advance if my questions are dumb but I didn't follow closely Ethereum 2.0 for couple months. Is there an approximative release date? Concerning staking, how much is needed and do we know for now the rewards? What is the main point in eth2.0 you are the most proud of? Do you feel that the Binance Chain is an enemy to Ethereum? A: Is there an approximative release date? January 3, 2020 at the earliest for phase 0. I'd say Q1 2020 is likely. Concerning staking, how much is needed and do we know for now the rewards? 32 ETH. Rewards depend on the total number of validators, individual validator performance, and the gas markets. I wouldn't be surprised if the typical validator has an annual return around 10%. What is the main point in eth2.0 you are the most proud of? I'm proud to have been able to make a contribution in a beautiful piece of infrastructure I believe will radically change the world in a positive way :) Do you feel that the Binance Chain is an enemy to Ethereum? No. [Justin] Q: When sharding is released, will there just suddenly be 1024 shards in existence, or will there be a small but growing number of shards as usage goes up? Starting with such a high number will leave a lot of unused space/capacity A: All 1024 shards will be launched at once. Growing the number of shards is (probably) unneeded complexity. Shards with lots of unused capacity will have lower gas prices attracting more users. Q: How can the average person help with eth2.0? Donations? Documentation? Are there any organized efforts underway? A: Educating yourself enough to feel comfortable to participate as a validator would be fantastic :) [Justin] Q: After the scaling issues are solved will this be an economical platform to host backend logic on? How will this compare to running your own server or going through a cloud hosting company in terms of cost and ease of use for light or heavy workloads? Personally, my highest anticipated use case is hosting multiplayer matchmaking and signaling, though I haven\u2019t built such a system yet out of concern for difficulty and cost. A: It's unlikely that Eth2 on its will be used as a backend for heavy workloads, the data throughput is likely just too high. That said, it works really well as a dispute resolution layer so a centralised service can run the backend optimistically and if someone disagrees with the execution, they can contest and have it resolved on Eth2. For lighter use-cases it probably can, but this is more in the context of a dapp. [Carl] Q: I was under the assumption that ETH would just update to the new ETH 2.0 chain, no need to swap coins or anything but will this transition from ETH1 to ETH2 cause a fork in the community similar to ETC Ethereum classic and ETH chain? Does the circulating supply of ETH 2.0 depend on how many people 'evolve' their ETH1 tokens to ETH2 tokens? A: ETH would just update to the new ETH 2.0 chain Unfortunately, it is not quite that simple. Eth2 is such a big upgrade over Eth1 that it is easier to implement as an entirely new chain than to upgrade. See Justin's ELI5 here for more . Does the circulating supply of ETH 2.0 depend on how many people 'evolve' their ETH1 tokens to ETH2 tokens? The large majority of it, yes. Rewards are also issued on the Eth2 chain so that increases the supply there too. Ultimately, the expectation is that all Eth1 ETH will be transferred to Eth2. Q: Do you think its worth laying 6 month/1 year/2 year 'ground rules' for Eth 2.0 chain assuming something unexpectedly goes wrong? A: My concern with doing something like this is its inflexibility. It is basically impossible to cover all the possible cases and even if we could, I'd argue that such an approach is too inflexible to handle the intricacies of exactly how something has failed. Handling it on a case-by-case basis seems like a better solution to me. [Carl] Q: Are there any plans to have the ETH 2.0 chain finalize blocks of the ETH 1.0 chain during Phase 0? For example like proposed with Casper, every 100th block will be validated by PoS. A: The integration between Eth1 and Eth2 is a roadmap orthogonal to phases 1, 2, 3 of Eth2. Are there any plans to have the ETH 2.0 chain finalize blocks of the ETH 1.0 chain during Phase 0? My best guess is this will happen in 2021. See here . [Justin] Q: What happens if you send more ETH to the deposit contract? Like 32.1 or 40? A: Nothing is stopping you from sending >32 Eth to the deposit contract, but you'll only receive rewards on the first 32 Eth, so it's not something I'd really recommend. [Carl] That's fine. Your balance will reflect the deposit, and the balance in excess of 32 ETH can be transferred to another validator (phase 1) or to a shard (phase 2). [Justin] Q: What's the easiest set up to stake let's say 320 ETH? A: A laptop should be capable of handling around 10 validators so you should be able to send 10*32 Eth to the deposit contract and start validating on your 1 machine. [Carl] A laptop should be sufficient. We'll know more in a few months when the numbers for block sizes and gas limits of shard blocks get finalized. [Vitalik] Q: What's your opinion on Harmony one's approach to a high scalability smart contract platform using PoS? I read you're involved in discussions with them, have you helped each other in developing code? A: I read you're involved in discussions with them I've had brief VDF discussions with Harmony. have you helped each other in developing code? Don't think so, at least not yet. What's your opinion on Harmony one's approach to a high scalability smart contract platform using PoS? I had a brief look at their whitepaper which seems to be inspired by Ethereum. So I guess my opinion is that their approach to scalability is great :) [Justin] Q: If Eth 2.0 introduces PoS, are there legal hurdles to be clarified upon? Could the token be considered a security token? A: I'm not aware of any jurisdiction that considers ETH on Eth1 a security, and since ETH on Eth2 is basically the same as ETH on Eth1 (other than the temporary technicality of two separate tokens) then ETH on Eth2 should not be a security. [Justin] Q: I'm planning to run a beacon node + N validators. Do you think this will will be able to be managed by a Raspberry Pi 4? I'm aware that it is being worked out to have ARM64 binaries ready soon, the question is if it seems realistic not to have a computer running at home and instead running something smaller and cleaner environmentally speaking like a Pi4. A: That depends on \"N\". I (personally) fully expect a RPi3 to be able to run at least one validator node, but we'll only know this when clients are closer to delivery. [Carl] Q: What are some smaller things that you guys would like an average r/ethtrader community member could help with? A: Educating yourself enough to feel comfortable to participate as a validator would be fantastic :) [Justin] Q: Is there any clarity on the transition process regarding basic aspects like whether Beacon eth can be sold on exchanges for example, and whether the PoW chain knows of the Beacon eth? Better asked, how do you ensure there is one network when there are two chains? A: whether Beacon eth can be sold on exchanges for example Beacon eth will be sellable on exchanges when transfers are enabled in phase 1. whether the PoW chain knows of the Beacon eth? That will come later, see here . how do you ensure there is one network when there are two chains? The long term plan is to natively integrate Eth1 into Eth2. See here . [Justin] Q: Can you explain somewhat precisely how cross sharding communication would work. As in how does shard node A talk to shard node B without going through some sort of intermediary? If they can do this talking, why can't it be used for eth to talk to say bitcoin. A: The intermediary is the beacon chain, or infrastructure optimistically predicting what will eventually get finalised in the beacon chain. [Justin] Q: How would you objectively judge the level of technological advancement of current eth and current bitcoin as far as the very limited function of sending coins from A to B is concerned? A: Eth1 and Bitcoin are comparable for on-chain payments. [Justin] Q: Presuming you agree price drives security, and presuming you agree all cryptos reside in a very competitive environment, are there any plans to address the increased issuance that the Beacon chain would bring? In addition, are there any plans to meet or maybe even surpass bitcoin's coded reduction of new supply to 2% next year. And related, what would you say to the criticisms that have already been expressed whereby if you can reduce issuance by say 10x, you can increase it too. Or asked in a more open question manner, what do you think of this process through which increases or decreases of issuance are made? A: It's possible Eth2 will cause net-negative issuance. The reason is that ETH gets burned via transaction fees. Pushing code to the beacon chain will also burn ETH. Finality, the penalties also burns ETH. [Justin] Q: Will phase 0 contain any scalability improvements? How many transactions per second will Ethereum be able to handle with Sharding? A: Phase 0 will allow for a light client that can give you hashes of the eth1 chain in a fairly lightweight way (but not too lightweight, you'll need ~200kb per 6 minutes to keep up with the committees, this will go down to 200kb per a few days with phase 1). This could be used to allow eg. light clients inside of browsers to work efficiently. That's a kind of scalability improvement, and an underdiscussed one imo. [Vitalik] Phase 0's purpose is tracking validators' states and producing randomness, asking about its scalability is not really meaningful. Regarding Tx/s, the answer is not really known. As a basic calculation, if each shard has the same throughput as Eth1.x, then we'll have 16 * 1024 = 16,384 Tx/s (assuming no inter-shard Txs). That said, the above numbers are kinda meaningless as Eth2 is designed to be used along with L2 scaling solutions like Rollups and OVM which could yield insanely high throughputs. [Carl] Q: Can you address points 2 - 4 in this tweet ? A: The default idea for clocks in eth2 is https://ethresear.ch/t/network-adjusted-timestamps/4187. There has not been that much work done on writing \"policeman\" software that would detect slashable violations by validators and penalize them, but I am not worried about this. Reasons: Even if no one writes the code, that just means the security model degrades to honest majority, which is not the worst One client implementing the code correctly is sufficient If a client implements the code badly, there's no consensus risk, they could just ship with badly written code that only works half the time and it would catch half the slashable violations. I'll defer to Danny on wire protocol stuff. [Vitalik] Point 2: \"Wire protocol\" => This is an implementation detail that I'm sure the implementers will agree upon soon enough :) The high-level recommendation from the research team is to use libp2p as the networking stack (dicv5 for discovery) and SSZ for serialisation. But this cannot enforced at the consensus layer, and we've already seen alternatives (e.g. clients using Whiteblock for networking, and Prysm is using protobufs in some places). Point 3: \"Clients to slash surround votes\" => Not sure what this means. The spec clearly defines the slashing mechanism for surround votes. See is_slashable_attestation_data. Point 4: \"Decentralized network time protocol\" => Just like Eth1, clocking is an implementation detail. It is to an extent decentralised (e.g. there are alternatives to NTP such as GPS, one can choose his/her NTP servers, one can use local clocks, etc.). It would be nice to have something even more robust but this is research territory\u2014not required for launch of Eth2. [Justin] Q: Why aren't Beacon nodes rewarded? Wouldn't this allow the network to be more decentralized? A: Validators are rewarded. Beacon nodes that are not validators are not rewarded in protocol because the protocol can't tell who's a beacon node vs just pretending to be one (eg. via 100 fake nodes pointing to the same real node). Though non-validator nodes may be able to earn money in eth2 through incentivized light client protocols. Q: In regards to the recent proposal of vitalik to use the bcash chain as a short-term scaling solution until eth 2.0 launches: is eth 2.0 still on track? is there a concrete demand for an interim solution? A: The main motivation for proposing an interim solution (if you don't like bitcoin cash for political reasons, I also recommended ethereum classic, I think it's also a good choice) is to make it easier for the work on building these layer 2s to be able to get off the ground in parallel with finalizing the work on the eth2 layer 1 itself. In general, the ethereum community is large, so doing things in parallel is its advantage. [Vitalik] Q: You do not plan to work on the creation of parachain (eth 2.0.) On Polkadot? I don't think EF will have to drive this. Web3/Parity are on it and I believe consider it to be a top priority. The Shasper (Parity) client is written in substrate to help facilitate this happening. [Danny] Q: Pretty basic but what's a realistic estimate of throughput after every is put together? A: Somewhere between 5000 and 500000 TPS depending on what execution environment and transaction type you're using. [Vitalik] Q: Could you say anything about the adoption of Ethereum Blockchain? Are there plans to create something like a B2B team actively approaching \"qualified\" companys? A: I'd say the Ethereum Foundation's primary focus is the consensus layer (research, development, education, maintenance, etc.), more so than the application layer. [Justin] Data Questions with Justin Drake Q: How much data will there be in Eth2? JD: As the spec currently stands, on average 2.8MB/s across all shards with a \"burst mode\" which is 4x that (i.e. 11.3MB/s). Q: What does this translate into for state size? JD: At the consensus layer block size and state size are basically orthogonal considerations. Consensus-layer state size will always remain very small since we lean heavily on stateless clients. In theory application-layer state (\"L2 state\") can grow up to 2.8MB/s. For execution engines without state rent, you can expect state to grow roughly as fast as Eth1 state grows today. Multiply that by 1024 shards and the situation is possibly not long-term sustainable. This is a significant reason why I personally believe we should progressively launch execution engines (as opposed to allowing anyone to deploy EEs at launch), starting with an EE that has state rent. Q: What role do nodes play (versus validators)? JD: At the consensus layer non-validator nodes don't play any role. At the networking layer they can act as lubricants to relay message. They may also help create blocks for block proposers, i.e. be \"relayers\". Q: Who will run these nodes? JD: Nodes can be run by anyone who wants \"direct\" access to Eth2 (e.g. service providers such as exchanges, etherscan, power users). Relayer nodes may be run by specialised businesses. Q:For someone that needs to run a node (EtherScan), what will the resourcing look like? JD: They will get their data by being nodes and listening on the gossip networks. The bad news is that bandwidth should grow by roughly 1024x to keep track of all shards. But then again, that's not terrible news because a good internet connection (especially server-class) can handle 4 11.2MB/s (the 4 is, say, the gossiping overhead). The good news is that consensus state is minimal (again, stateless clients), which means zero consensus-layer I/O which is currently an Eth1 bottleneck. They can then choose withever EEs and/or dApps it wants to support, i.e. it's opt-in. Q:How do we assume all data is stored and available? JD: For recent blocks we have quite sophisticated infrastructure, including proofs of custody in phase 1 and data availability proofs (possibly phase 2). For historical blocks we rely on the ecosystem to keep them around. Q:What will \"historical blocks\" be needed for. As in, if they were lost forever, what would be messed up? JD: Historical blocks are required to recompute application-layer state, and may also contain application-layer receipts. If they were lost forever (which I don't expect would ever happen) then applications without at least one synced full node may lose user state. Q:Will people congregate on a few shards? JD: Hard to tell. Naive dApp design would suggest that dApps would aggregate into clusters within shard boundaries. We are exploring dApp designs that are somewhat shard-agnostic, i.e. consume data availability from shards as a fungible resource. Q:Quick explanation of cross shard communication and where research is? JD: Cross shard communication is a huge design space, just like \"plasma\" or \"state channels\". At the consensus layer we don't provide much infrastructure beyond crosslinks. I'm expecting significant experimentation in the early days followed by standardisation, somewhat similar to the token transfer design space and the ERC20 standard. One big idea is the concept of \"optimistic crosslink\" which are shared between shards in advance of the real crosslinks, and which with high probability will match the actual crosslinks that get finalised. dApps can use optimistic crosslinks to get super-low cross-shard latency. Q:Why 1024 shards? JD: Because 2048 shards would be stressing the beacon chain and 512 shards would be under-utilising the beacon chain. Resources: Part 1 Part 2","title":"Ethereum 2.0 AMA"},{"location":"other/ethereum-2.0-ama/#ethereum-20-reddit-ama","text":"","title":"Ethereum 2.0 Reddit AMA"},{"location":"other/ethereum-2.0-ama/#part-1","text":"Q: When, as in period of time, do you think Ethereum will be able to solve scalability issues? A: In phase 1 (about 2020 by my estimate) we will have shard data. Those shards, even without an EVM, can be used as the data availability layer for TrueBit (and other alternative execution engines). Phase 2 (about 2021) is when we will have scalable L1 execution. [Justin Drake] Follow up Q: ELI5 execution engines Follow up A: An execution engine is a way to compute state assuming consensus on data. The execution engine for the EVM is \"naive re-execution\". There are more fancy execution engines such as TrueBit and SNARK/STARK-based validity proofs. [Justin Drake] Q: Are economists being consulted to help decide the issuance rate of a full POS system? Stated more broadly, who is helping/advising the ETH 2.0 team on the effects certain issuance decisions will have on the network and community (both in the short and long term)? A: Personally at this point the feedback I'm most interested in is actually feedback from potential stakers. The main question basically being, are there any other tweaks we can make to the economics that, given a fixed level of reward, will (i) encourage more people to validate, and (ii) encourage many small solo validators or smaller pools, as opposed to a few large pools. [Vitalik Buterin] Q: Considering that Yoichi is not working anymore in the Foundation, what are your plans on formal verification of ETH 2.0 specs? A: I'd say that formal verification of the spec will make sense when the spec is more mature and stable, maybe mid 2019. Anyone interested in doing formal verification of the ETH 2.0 specs in a few months, please send a grant proposal. [Justin Drake] Q: What is the best response to a developer who is hesitant about building on ethereum today, given that it will be \"replaced\" by ETH 2.0 over the next few years? A: I expect that once the state and execution model for Serenity solidifies (see https://ethresear.ch/t/a-minimal-state-execution-proposal/4445 for one minimal proposal) we'll start working with the developer community on modifications to high-level languages (Solidity, Vyper, etc) and best practices. Hopefully at that point it will become clearer how to build applications in such a way that they could be redeployed as-is on the 2.0 chain. At least that's my hope. [Vitalik Buterin] A2: Building on Ethereum 1.0 today is great for learning and prototyping. It's also great for assembling a culturally-aligned team consistent with the philosophy of the Ethereum community (which may be different than the philosophy of the Bitcoin, Ripple, Bitcoin Cash, EOS, Tether, etc. communities). [Justin Drake] Q: Can we run multiple validator clients on a single machine assuming we've got multiple 32 Eth deposits? A: Yep! There's nothing preventing you from using one machine to run multiple validators. The only hard limit you'll face is that the number of shards you are assigned to validate increases linearly with the number of validator slots you have, so if you have thousands of ETH a laptop will not suffice and you'll need something more powerful. [Vitalik Buterin] A2: Short answer: Yes. Long answer: You will need to register a validator for every 32 ETH. In phase 0 (just the beacon chain, no shards) you can likely handle thousands of validators on a single machine. After phase 1 the number of validators that can be operated on a single machine depends on how resourceful your machine is. A mainstream laptop should comfortably handle one validator, and likely handle 2-10 validators at max capacity. The computational resources scales linearly with the number of validators until you reach ~1,000 validators. At that point there are scalability advantages in being a super-node, i.e. a full node for every shard. [Justin Drake] Follow up Q: How much importance are the devs placing on being able to run setups at home wrt keeping Ethereum decentralised and being able to move ETH in and out of staking pools? Follow up A: It's definitely a goal I care about. The alternative to staking at home is staking on AWS or staking through a pool, and both are risks for decentralization. Concrete ways we try to be friendly to staking at home: Relatively forgiving penalties for being offline, so you earn a net profit as long as you're online more than ~50-67% of the time Keeping the cost of validating the beacon chain low The anti-correlation penalty scheme, which more heavily penalizes validators that misbehave at the same time as many other validators (which is more likely if you're on the same pool or VPS or whatever). [Vitalik Buterin] Q: How can I help / get involved? I fell in love with Ethereum not too long ago. I\u2019ve been reading Zcash\u2019s BLS12-381 Elliptic Curves and for the past few days these are all thats been on my mind. I love this project now and just found ethresear.ch. I really wanna help in any way possible! Thanks again for all your hard work. I can\u2019t stop reading these posts. A: For researchers a good way to contribute and gain visibility is to post quality content on ethresear.ch. If you are a developer consider joining one of the numerous ETH2.0 implementation teams. [Justin Drake] A2: Hi! The best way to get involved is to find something that captures your interest and to dig in. Because Ethereum is a radically open platform, the research and development is also generally very open and very accessible. Keep reading. Follow your interests down all the little paths and begin to build a mental model of the ecosystem. https://ethresear.ch/ is a great place to follow and begin to contribute to research discussions. https://gitter.im/ethereum/sharding is where a lot of the day to day conversation about Serenity is happening (developers chatting from various projects) https://github.com/ethereum/eth2.0-specs Read the spec! but not only read it, be an active reader. If you find an error, typo, bug, etc, submit a PR. Also check out the issues and PRs in the spec repo. We are constantly discussing changes, fixes, updates and anyone can contribute. If you are a dev, open up one of the eth2.0 client projects and pick a \"good first issue\". These allow you to touch the codebase, contribute a bit, get the lay of the land, and provide the foundation to tackle bigger issues from there. ^ Those are Serenity specific suggestions, but beyond that, just find projects you are interested in and begin contributing. There is so much to do and project leads are always excited to have helping hands. This stuff doesn't build itself :) [Danny Ryan] A3: If you're interested in Cryptography especially, you can also check out another BLS - Boneh\u2013Lynn\u2013Shacham signature spec for Serenity and help to review it: https://github.com/ethereum/eth2.0-specs/blob/master/specs/bls_signature.md :) For research, as Justin and Danny said, ethresear.ch is the sanctuary. And first, you can take a look the various topics on Ethereum Sharding Research Compendium to see which area you're most interested in. For implementation, there are multiple topics: Consensus layer - implement the spec! P2P layer design and implementation - see https://github.com/ethresearch/p2p [Hsiao-Wei Wang] Q: From my limited understanding of Eth 2.0 specs, I gather that shards will be mostly independent, with cross-shard communication being slow and requiring multiple steps. As a consequence, smart contracts will only be able to interact lively with assets from within their deployed shard, and will have to go through slow cross-shard communication to interact with assets outside. Given this topology, are we not aiming to improve scalability at the cost of sacrificing user experience (slow response of smart contracts in non-obvious ways)? For instance if I want to play cryptokitties, I will need to make sure to interact with the contract that is deployed on the shard where my eth address resides, and not with any of the other contracts that reside on other shards. Then, if I want to interact with the kitties of someone else who resides on a different shard, my experience will be much slower and cumbersome than if that person would reside in my shard (or at least this is how I understand the system will work, please correct me if I am wrong). Given that the end goal is to scale to a very large number of shards, then the likelihood to have to go cross-shard increases exponentially with time, and thus the user experience gets progressively worse and worse. A: Cross-shard communication will definitely be slow at base layer, however there are higher-level mechanisms that can be used to implement fast cross-shard communication on top of a base layer that allows any cross-shard communication at all even if slow. See https://ethresear.ch/t/a-layer-2-computing-model-using-optimistic-state-roots/4481 for an example of how this could be done. In general, I expect a lot of the long-run innovation in improving the smart contract development experience to happen at higher levels in this way; I write about why this is a good idea at length here: https://vitalik.ca/general/2018/08/26/layer_1.html [Vitalik Buterin] Q: What happens to all the contracts currently running? A: It is somewhat speculative at this point. My best guess is that Ethereum 1.0 contracts will stay running as-is for a long time (say, 10+ years) without any migration to Ethereum 2.0. This can be made sustainable by doing two things: Lower the inflation (e.g. reduce it by 20x, bringing the PoW security to a blockchain such as Ethereum Classic). Completely removing inflation\u2014relying on transaction fees only\u2014would also be possible (see below for security argument). Use Ethereum 2.0 to regularly finalise Ethereum 1.0, counter-balancing the reduced security and preventing long-range 51% attacks. This requires Ethereum 1.0 nodes to be beacon chain light clients, which should take years to happen. If the community gets tired of Ethereum 1.0 a bomb mechanism (e.g. difficulty bomb, issuance bomb, gas bomb, etc.) can gracefully kill it. Another possibility is for Ethereum 1.0 to become a contract on Ethereum 2.0. I don't see this as a practical solution, but I'm open to being convinced otherwise :) [Justin Drake] A follow up: I'll add that if any specific user wants to migrate their application to the 2.0 chain, then they should be able to just take their existing high-level code (Solidity or Vyper), make relatively few changes and redeploy. The main difference between the eth1 and eth2 systems that users will need to worry about is likely to be rent (or equivalents like gas-payment-extended bounded TTLs). [Vitalik Buterin] Q: Is there a worry that shards will become \u201cgentrified\u201d until full shard interoperability? Basically, will one shard capture all the defi apps because they can't directly communicate with each other on separate shards? A: I would say if that happens, that will create a large incentive for someone to create a defi dapp that can interact with the other defi dapps through asynchronous cross-shard transactions and launch it on a cheaper shard. [Vitalik Buterin] A2: At the start in times of low usage, the economic load-balancing might result in over and under utilized shards. Overtime as usage increases, I expect the economic benefits of deploying and interacting on particular shards will become more tangible and result in a more economically rational distribution across shards. Observing the emergent behavior is going to be super fascinating :) [Danny Ryan] Q: Can we run the same validator on multiple machines - in order to avoid penalties if one machine was compromised ? If yes - what happens when we run a validator on 3 machines, one goes temporary offline, one is compromised, one is OK? A: For small amounts of ETH I'd recommend just running on one machine; unless many other validators get penalized at the same time as you, the penalties are not too large. If you do want to decentralize your validator, then we have recently made progress toward validation being more multi-party-computation friendly, which would allow you to run a validator as a 2-of-3. In that case, as long as two of the three sub-nodes are functioning correctly you'll be fine. [Vitalik Buterin] A2: Yes! Ethereum 2.0 is friendly to n-of-m schemes thanks to BLS signatures. For example, with a 2-of-3 scheme you have can three computers, each with a share of the validator private key, such that two need to be online at any given time. This improves security as well, because an attacker now needs to compromise two of the BLS key shares. [Justin Drake] Q: Is there tech from any competitors such as Dfinity (or any others) that is worth adopting into Ethereum 2.0, or is the work all other dapp/smart contract platforms doing not relevant/good enough for ETH 2.0? A: Part of the job of the research team is to absorb good ideas from research papers and other blockchain projects. I keep a keen eye on technically interesting projects such as Dfinity, Coda, Zcash, etc. Competitors definitely also have good ideas, and learning from each other is part of the game :) [Justin Drake] Q: Do we need to run a full node to also earn from network fees or would the validator client handle this? A: Depends what you mean by \"full node\". The design of the sharding system is such that no one needs to run a node that verifies all of the data of all of the shards. A validator client validates the beacon chain and the specific shards that you get assigned to validate, and that is sufficient to earn network fees. [Vitalik Buterin] A2: The validator client should abstract the necessary tasks to get revenue from the different revenue streams. (This includes being a full node for the beacon chain and one shard at any given time, but that's a technicality you don't have to worry about.) [Justin Drake] Q: Very interested to hear about the efforts currently underway at the EF and strategic partners/OEMs to design and manufacture the VDF hardware. It's also the thing that scares me the most about the proposed design;i can see how they would really increase the security of the random sample selection process in addition to RANDAO but manufacturing hw is a costly, difficult endeavor often subject to unforeseen issues and delays. On that note is an economic incentive structure for running a VDF node being considered? A: Very interested to hear about the efforts currently underway at the EF and strategic partners/OEMs to design and manufacture the VDF hardware. We're working our way with various partners, including Synopsys, AWS, TSMC, GUC, etc. VDF announcements to come in February :) manufacturing hw is a costly, difficult endeavor often subject to unforeseen issues and delays. Right. The good news is that Ethereum 2.0 can launch just fine without VDFs, so we're not betting Ethereum 2.0 on the success of VDFs. The current plan is to have VDF hardware ready in 2020, but 2021 would also be acceptable. From a financial perspective, we may share the total costs (estimated at $15m) with Filecoin and other projects interested in VDFs. We are already sharing costs with Filecoin on viability studies. On that note is an economic incentive structure for running a VDF node being considered? Short answer: yes, of course :) Long answer: the ethresear.ch post provides a bit of clarity on that. highly specialized hw always connected providing a crucial function to the network it would be a prime target for potential adversaries to disrupt or compromise Right. The good news is that we only need one VDF evaluator to be online for normal operation, and even if everyone goes down it's not a huge deal. The main negative consequence is that dApps relying on unbiasable randomness will have to wait longer than expected for the random numbers to arrive. [Justin Drake] Q: zk-STARKs are powerful and I have been reading Eli\u2019s and the others paper on it. Are recursive zk-STARKs ever doable? I know Coda is planning on using Recursive zk-SNARKs to shrink chains but the lack of transparency is worrying. A: I don't see what fundamentally prevents them from happening. Recursive [any zero knowledge proof schemme] just means using the ZKP mechanism to make a ZKP of the ZKP's own verification procedure. The main challenge in practice is just that these verification procedures themselves have a high cost (eg. there's 50-500 kB worth of hashes in a STARK to verify), and this cost multiplied by the ZKP's overhead is quite a big number. ZK SNARK verification is in contrast much more \"concise\". [Vitalik Buterin] A2: Are recursive zk-STARKs ever doable? In theory yes, but as I understand recursive zk-STARKs won't make sense from a performance standpoint for most applications, at least in the medium term. [Justin Drake] Q: What\u2019s the final scalability limit of Ethereum post Serenity? Gas limits per block? Blocks per second? A: The current design has a fixed number of shards, at most one block per 6-second slot, and fixed block sizes. This means that the data bandwidth is capped. The gas limit on the other hand will likely be floating, just like Ethereum 1.0. [Justin Drake] A follow up: Though in the current phase 1 spec that's sitting around in draft mode the block size is so far fixed to 16 kB, as keeping it fixed makes the code for proofs of custody, data availability proofs, etc much simpler. If we want to bump up capacity later increasing the shard count may well be the simpler way to do it. [Vitalik Buterin] Q: Why should anyone move to the Beacon Chain? How exactly do you envision the move to happen? A: Why should anyone move to the beacon chain. Specifically, only validator balances exist in the Beacon Chain. User balances and state exist in the shard chains. Validators will move to the beacon chain to seek profit by providing security and resources to network. Note there is a new proposal to have the beacon chain finalize the PoW chain during the transition period so the validators would be able to provide security both to the new shards and the existing chain. Users will move to the shard chains to participate in the new scalable, sharded landscape. We envision economic activity to begin to move over as the system stabilizes and begins to show clear economic benefits to the users. It is important to note that a user could choose to not move until the eth1.0 state is rolled into a shard. How exactly do you envision the move to happen? At first, this will just be a single directional deposit for validators only to begin validation. Once the state execution layer is in the new 1024 shards, users will be able to transfer eth directly to the shards from the PoW chain. In the long term, the plan is to roll the PoW state into one of the shards. The current most favorable strategy from our perspective is to fork the PoW state root into a contract along with an EVM interpreter. Users could then execute txs on the existing eth1.0 state by call the contract along with the merkle witnesses of the state they need to access. This option is nice because it allows us to cleanly deprecate eth1.0 support in the long term. [Danny Ryan] A2: Moving to the beacon chain is done by sending ETH to a so-called \"deposit contract\" on Ethereum 1.0. People would send ETH to the beacon chain to become an Ethereum 2.0 validator and gain financial rewards. [Justin Drake] Q: How much funds does Ethereum foundation have and are these enough for finishing Eth 2.0? A: The EF has tens of millions of dollars in fiat, and a bunch of ETH. More than enough to finish ETH 2.0 :) [Justin Drake] Q: How is the status of a possibly fixed eth supply at some point in the future? Do you think it's likely? A: I don't know about fixed ETH supply, but we may get to a point of decreasing ETH supply. Indeed, we are looking into transaction fee schemes that burn ETH, and burnt ETH may outweigh minted ETH. [Justin Drake] Q: Have you looked into hyraxZK. They are zk-SNARKs that do not require a trusted setup. Any thoughts on them being used in the future as the sizes are still very small. The only thing is they wouldnt be Quantum-Resistant but the proof size won\u2019t be similar to a zk-STARK. I wonder what they can be used for offchain as well, especially in networking by producing a zk proof of incoming packets that acts as Natural DDOS Protection. Just some thoughts. A: Have not looked into Hyrax specifically, but I am totally not surprised that things like it exist. I'm definitely very happy with the progress the general-purpose ZKP space has accomplished in the last few years; the very concept of general-purpose ZKP is pretty godlike compared to what I imagined was possible with cryptography as a child. Our general instinct is to find ways to make it possible to get the benefits of many different ZKP schemes with different tradeoffs in ethereum. The simplest way to do this would be to encourage the development of such tech as application-layer or network-layer addons so that it we do not need an agreement at consensus layer about a single ZKP scheme that everyone uses. [Vitalik Buterin] Q: V said that there are no fundamental problems left to solve. Is this true for only phase 0? If so, how confident are you about the other phases? A: Personally I am confident in all of the current fundamental technologies for all the phases outlined so far (Casper FFG and CBC, sharding, erasure coded data availability proofs, proofs of custody, receipt-based async transactions, layer 2 for acceleration, abstraction, rent, \"stateless client\" verification). There is definitely still a lot of room around the edges for optimization though. [Vitalik Buterin] Q: Why was Hybrid Casper ditched when it looks like the Beacon Chain kind of has nothing to do with the PoW chain? or Why not re-instate Hybrid Casper considering its testing is/was finalized? A: Honestly hybrid Casper is a bit of a dead end. Actually implementing/testing it across all the clients would require setting up a lot of infrastructure that we would then need to throw away. The design was highly inefficient because of its \"implemented-in-EVM\" nature, and it turned out that we could not really benefit from the ease-of-implementability of being done in EVM because we would need to write a lot of special-purpose code to make verification of signatures parallelizable. So we chose the route that would be somewhat more painful in the short term, but significantly lower headache to actually get to a stable sharded system overall. [Vitalik Buterin] A2: I wrote up some notes on the deprecation of EIP 1011 here https://notes.ethereum.org/s/rJDrKoBOQ [Danny Ryan] Q: 1. Since it is a one way transfer to the beacon chain, my understanding is that there will be two tokens: ETH1.0 and ETH2.0. Right? Will The beacon chain allow tokens to be send. I.e. will exchanges be able to list the token before phase 2? My feeling is that from a risk/reward perspective, stakers will expect returns more in the area of emerging market debt (+20%) esp. in the beginning. But all discussion I saw was ~2%. Any comments on this? Gutfeeling: how much \"unsolved computer science problems\" for phase 1, 2 and 3 roughly? I understood for phase zero it has arrived at 0. Will we consider some kind of tax baked into the system to ensure sustainability of core developments and infrastructure? A: Will The beacon chain allow tokens to be send. I.e. will exchanges be able to list the token before phase 2? ETH in the beacon chain would not be transferable (anywhere!) until phase 2. That will make exchanges harder, although we may see a futures' market. My guess is that we will see 1 ETH ~ 1 BETH at pretty much all times :) [Justin Drake] My feeling is that from a risk/reward perspective, stakers will expect returns more in the area of emerging market debt (+20%) esp. in the beginning. But all discussion I saw was ~2%. Any comments on this? The reward/penalty constants are certainly not yet finalized and could use more community debate and input. That said, the rate does scale depending on the number of validators participating. If the fair market rate is really 20%, then a lower number of validators will show up. If the fair rate is 2%, then a ton of validators will show up. The economics of staking will find the natural equilibrium. That said the main risk here is if we set the target rate too low and the equilibrium lands at a low participation rate (and thus low security of the network). Although ~2% (@ 10M eth validating) is not set in stone, the idea for a low rate is that a huge amount of ETH is already being held as a speculative asset. Any marginal rate of return on top of this already intended long-term hodling is a gain for the hodler. [Danny Ryan] Q: How would you (and or service providers) ensure the eth on the Beacon Chain is the same as that on the PoW chain and vice versa? A: Arbitrage is always possible in one direction by buying 1 BETH for 1 ETH. A key design goal of Ethereum 2.0 is full fungibility for ETH tokens between the Ethereum 1.0 chain, the beacon chain, and the shards. Two-way transfers between the beacon chain and the shards, as well as between shards, should come in phase 2. [Justin Drake] Follow up point: If you wait until phase 2 for two-way flow, you privilege the very few stakers able and willing to wait an undetermined number of years for access to their money. This will be great for those few (probably north of 25% interest rates!) but not very great for security. Follow up A: y ou privilege the very few stakers able and willing to wait an undetermined number of years for access to their money The ultimate loyalty test :) probably north of 25% interest rates!) but not very great for security. We do have a minimum amount at stake to launch phase 0, around 214 * 32 ETH = 524,288 ETH. So we're effectively capping the interest rate (will be less than 25%) and setting a minimum security level. [Justin Drake] Q: For how long is the 32eth locked up when running a validator client? What happens if the machine I'm using gets destroyed or stolen during the lock up period? Can you switch machines? A: For how long is the 32eth locked up when running a validator client? At least as long as you are a validator. Withdrawal times should be a few days/weeks/months depending on how many other validators are trying to withdraw. What happens if the machine I'm using gets destroyed or stolen during the lock up period? Can you switch machines? You can switch machines. You need a copy of your private keys in case your machine gets destroyed or stolen. Another thing is the withdrawal key used for withdrawals only. Keep that one in cold storage ideally. [Justin Drake] Q: Contributing to Ethereum 2.0? Are there any projects which are some sort of \"under water\", like only few people working on it. A: I feel at this point there are enough implementation teams, at least compared to some of the other issues that are underaddressed. Off the top of my head: Solidity being compile-able to E-WASM Vyper being compile-able to E-WASM Thinking about research problems related to phase 2, particularly around account abstraction, asynchronous contract programming models, etc Privacy, eg. see https://ethereum-magicians.org/t/meta-we-should-value-privacy-more/2475 Improving the state of decentralized messaging and file storage [Vitalik Buterin] Follow up A: A few more things good to work on: liibp2p implementations in various languages Doing security reviews of the spec prototyping account and state execution in eWASM a lot of work in cross client testing coming up in the next couple of months [Danny Ryan] Q: We have experienced consecutive delays with Constantinople due to bugs found late in the process on a comparatively low risk / simple upgrade. What work is being done to mitigate this on Phase 0 and 1 given how much more complex these implementations will be? (I.e. What testing, third party audits, other considerations are being taken to ensure seamless implementation/integration? A: As the phase 0 spec is moving into a more stable place, we are beginning to look into explicitly bringing in third party audits, academics, and formal analysis. In addition to this, we are currently laying down the foundations of cross client testing and fuzzing akin to eth1.0. You're correct in that the consensus/system layer of eth2.0 is much more complex than the single PoW chain so we are constantly trying to reduce complexity and simplify. This is a major engineering effort that will require many parties other than our research team to plan, build, test, execute, and maintain. I think it is a major strength that so many independent teams with a diverse set of expertise have stepped up to contribute. Note, one of the design goals in the spec readme -- \"to minimize complexity, even at the cost of some losses in efficiency\" We're excited to see new efforts like the \"Ethereum Cat Herders\" and scheduled release cycles emerging in 1.0 and plan to incorporate any best practices and efforts into the 2.0 process. DePM (decentralized project management) is hard, but we continue to learn and continue to get better. [Danny Ryan] Q: How difficult will it be for 1.0 contracts to work on Serenity? Should developers expect to rewrite their contracts to account for state rent and cross-shard communication? A: Solidity can already compile to WASM and I believe it is in Vyper's roadmap to do so as well. These naive compilations might be inefficient (e.g. keeping 256 bit types in the 64bit wasm machine) so some amount of rewrite or utilization of optimizers might be called for. Beyond that, there are some unknowns that might change the approach to certain contract programming modesl. For example, storage fees might call for a new ERC20 contract design in which user balances are stored in separate child contracts so that users become responsible for managing their own storage fees related to their coins. [Danny Ryan] Q: What is the latest view on how the \"upgrade\" to Ethereum 2.0 will happen? Can you take us through the different phases/hardforks that will in the end enable the full PoS/sharded/WASM blockchain, and what each will enable? A: Eth2.0 is broadly divided into three phases -- Phase 0, 1, and 2. Phase 0 - The Beacon Chain This phase is the launch of the core system level functionality of the new PoS chain (the beacon chain). Validators can submit deposits, join the validator set, and build/finalize the core chain. At this point the chain will have Casper finality, an RNG, shuffling into the various validator roles, and simulate crosslinking in the (currently) non-existent shard chains. Phase 1 - Shard Chains (data) This phase is the launch of the shard chains, but only as a blockchain of data. (Execution and state comes in phase 2). At this point, validators will additionally build these data chains and finalize the each shard back into the beacon chain via \"crosslinks\" and attest the availability of the data. These crosslinks were already being created in Phase 0, but had a stub for the shard hash being finalized. In this phase, that hash becomes \"unstubbed\". Shard data chains begin to have some utility for applications that need a high availability data store. Phase 2 - Shard Chains (state and execution) This phase is the launch of state and execution of state (eWASM) on the shard chains. This is when users and applications will begin to migrate to Serenity and use it to it's full potential. Cross shard txs will be available at this point, and users can begin developing any number of \"layer 2\" execution engines on top. The above (especially phase 2) might be divided into sub-forks, and there will be a fork during/after phase 2 to bring in the eth1.0 state/evm into a contract. [Danny Ryan] Q: I'm quoting James' article: \"This means there will be little reason to migrate smart contract code or users until Phase 4 is released, potentially in the mid-2020s\". Does this mean, ETH2.0 wont be usable before 2025? \"ETH2.0 designers do not know what the cross-shard communication system will look like.\" If you're so unsure about the features of ETH2.0, why is it being developed at all? What will be the advantages in daily use compared to EHT1.X? Why should anyone wait till \"the mid-2020s\" to use ETH2.0? A: 2025 sounds... unlikely! I publicly made the prediction (since July 2018) that phases 0, 1, 2 will come in 2019, 2020, 2021 respectively. Scaling from shards will come in phase 1 and phase 2. On the topic of timelines, for phase 0 specifically, ideally the spec should be close to final in Q1, cross-client testnets in Q2, security audits in Q3, mainnet launch in Q4. As a rule of thumb, launching in December is hard because of the holiday season. So November 2019 and January 2020 would be my two best guesses for phase 0. [Justin Drake] A2: I answered a related question here https://www.reddit.com/r/ethereum/comments/ajc9ip/ama_we_are_the_eth_20_research_team/eeufhqb [Danny Ryan] Q: https://hackernoon.com/what-to-expect-when-eths-expecting-80cb4951afcd From the article above, this is what I understand as the timeline of Ethereum 2.0: Phase 0 will be available in year 2020 Phase 1 will be available in 2022 Phase 2 will be available in 2023/24 Given the above timeline, is it fair to say that DAPP's have to wait at least 4 years before they can run their smart contracts on top of Ethereum 2.0? A: Hi! That article is written by an independent engineer that has been following development so it is not necessarily our 1-to-1 opinion. That said, I'm only seeing the following in the article -- \"Which is to say, while ETH2.0 may launch this year, don\u2019t expect ETH2.0 to support asset transfer or smart contracts until at least 2020.\" I agree that assets and smart contracts won't be available in eth2.0 in 2019. At the latest, I expect phase 2 to launch in 2021, but we are building a complex system and can't say for sure what unexpected challenges might arise between now and then. Waiting until 2023/24 is entirely out of the question for phase 2 imo. [Danny Ryan] Q: With eWASM will we be able to write contracts in Rust and/or any language that compiles to WASM in addition to Solidity? Where can one find out more about that and/or potentially help out? Thanks :) A: Yes you will be able to write contracts in any language that compiles to WASM :) I expect specific toolkits/frameworks to spring up in the languages people are particularly interested in (e.g. Rust, go, typescript, etc) to aid in writing contracts in these languages. https://github.com/ewasm/design is a great place to get started. The eWASM team has compiled a ton of info here to understand the project from a high level. https://gitter.im/ewasm/Lobby The eWASM team and broader community congregate in this gitter room and I'm sure would be willing to provide more guidance and answer any questions you have. [Danny Ryan] Q: Hi guys, Would you like to implement an optional decentralized identity layer in the future? like an option to use DID's or something. so the user can use zero knowledge proofs for Dapps that requires some proof of credentials of the user. Greetz A: Decentralized identity systems are definitely very interesting, but imo out-of-scope for blockchain base layers. The good news is that it's a Turing-complete platform, so anyone can build one on top of ethereum (1.0 or 2.0), and yes that are teams working on different approaches to it already. [Vitalik Buterin] Q: What is the one thing on eth 2.0 dev that keeps you up at night? A: In my mind the Ethereum 2.0 abstract design is a remarkably elegant/slick/simple design. I worry that we botch the spec with poor taste in some of the implementation details, or bugs that we miss. [Justin Drake] Q: How will the Eth1.0/PoW chain eventually be migrated over? A: See the bottom of this post https://www.reddit.com/r/ethereum/comments/ajc9ip/ama_we_are_the_eth_20_research_team/eeucd4f tldr, fork into a stateless contract on a shard [Danny Ryan] A2: See https://www.reddit.com/r/ethereum/comments/ajc9ip/ama_we_are_the_eth_20_research_team/eeub9sp/ [Justin Drake] Q: What are the current incentives for a person to run their own beacon node? A: It is a similar set of incentives as why you would run an eth1.0 node -- mining, run applications (block explorer, wallet services, dapp portal, etc), hobbyists wanting direct connection to the network, etc. If you are a validator, you will receive rewards for operating a node and signing consensus messages. If you run some sort of application, it can be beneficial to run a beacon chain to directly sync the shards you need. You also might serve light clients and applications as a business. I fully expect some some entities to experiment with this model. If you are a hobbyist, you might just like running the protocol directly for self-sovereignty :) [Danny Ryan] A2: Financial rewards through ETH inflation. I think Eric Conner has a spreadsheet somewhere. See https://twitter.com/econoar/status/1070713152864583682 for example here\u2014numbers presented here likely on the low side. [Justin Drake] Q: How do the researchers and developers feel about the complexity of ETH 2.0? A: We're definitely trying hard to bring the complexity down! Examples of complexity decreases that we've made in the last ~3 months include: Switching FFG from the \"per-block finalization\" model to a simpler epoch-based model Moving shard committee calculation outside the state Replacing the RANDAO hash onion construction with a simpler BLS construction (and same with the hash onion for proofs of custody) Storing validator state change slots in the validator record, making each validator's state transition process much more understandable Making shard blocks fixed size rather than variable size (which allows removing a lot of boilerplate for handling transitions) That said we recognize that there's still a way to go, and many features of eth2 don't feel neat and clean the way eg. Nakamoto PoW does. I personally hope a medium-term switch to Casper CBC (see https://vitalik.ca/general/2018/12/05/cbc_casper.html ) can mitigate some of that. [Vitalik Buterin] Q: Is there any work being done on reducing the size of the blockchain as it grows? A: You mean the current chain or the 2.0 chain? Since this AMA is primarily about on the 2.0 chain I'll focus on that. The beacon chain state size is bounded, and there are no objects that hang around forever; even validator records disappear once either their balance drops too low or the validators exit voluntarily and then the withdrawal and exit waiting periods pass. On the shard chains, we're looking at ongoing storage maintenance fees for every byte of storage, \"hibernating\" accounts that do not pay up (at which point their users are responsible for storing and maintaining the data needed to revive those accounts if they need them). [Vitalik Buterin] A2: If you are talking about the Ethereum 1.0 chain size there are a number of workgroups in place and some of them deal with decreasing the chain state or slowing down chain state growth. See: https://ethereum-magicians.org/t/meta-ring-to-discuss-and-coordinate-all-ethereum-1x-efforts/2048 https://ethereum-magicians.org/t/ethereum-1-dot-x-a-half-baked-roadmap-for-mainnet-improvements/1995 https://ethereum-magicians.org/t/state-rent-proposal-version-2-rushed/2494 [Hudson Jameson] Q: Inter-shard transactions - how do downstream shards protect themselves against kiting exploits (A->B B->C C->D where the transfer A->B is later challenged)?? I can imagine kiting tumblers that might make this a computationally intractable challenge. A: There isn't really a concept of \"challenging transfers\" in the current spec, and if you mean plain old fraud proofs then the answer is that if a block that was confirmed into a history turns out to be invalid then the entire history from that point on is invalid and should get discarded. [Vitalik Buterin] Q: If I deploy a contract in ETH 2.0 will it randomly be assigned to a shard? A: No. You specify the shard you want. You'll chose based on proximity to contracts of interest, and gas prices. (Each shard will have a separate gas market.) [Justin Drake] A follow-up: Though initial choice is not necessarily irreversible; contracts could be designed to be yanked ( https://ethresear.ch/t/cross-shard-contract-yanking/1450 ) from one shard to another, and I expect a lot of applications will take advantage of this feature. Q: Will there be a software implementation of VDF for those who are unable to obtain the ASIC? Also, will participants in the RANDAO/VDF mix earn rewards in a similar fashion to validators (if at all)? A: Will there be a software implementation of VDF for those who are unable to obtain the ASIC? A software implementation of the VDF would likely be useless for production. The current estimate is that a CPU implementation would be 1,000 to 10,000 times slower than the ASIC. A software implementation would be useful for testing though. will participants in the RANDAO/VDF mix earn rewards in a similar fashion to validators (if at all)? There will be a small incentive for validators to also be VDF evaluators. Other than that we're mostly drawing from external incentives (e.g. as a large ETH holder you have an incentive that Ethereum stays healthy). The good news is that we only need one VDF evaluator to do its job. There will be thousands of VDF rigs given for free to the community. [Justin Drake] Q: Do Quantum Computers pose a permanent threat to ownerless legacy addresses with significant funds and can they cause collisions with old contracts? A: One of the features of Ethereum 2.0 is \"abstraction\", which means that users can specify whatever signature scheme they want. I expect quantum-secure signature schemes to gradually become more popular. Burn addresses can easily be made quantum-secure. Do Quantum Computers pose a permanent threat to ownerless legacy addresses with significant funds Yes, definitely a threat. Ownerless legacy address could be a systemic risk for blockchains such as Ethereum and Bitcoin. Would be interesting to guestimate how much ETH is at risk. Q: ERC20/721 standards' design sucks. Is there any idea or plan to convert current tokens to ERC-1155 like, efficient format? (Code isn't Law. Seriously.) A: I'm hoping that Ethereum 2.0 standards (such as token standards) can learn from the mistakes of Ethereum 1.0 and evolve. Starting from scratch is a unique opportunity in Ethereum's lifetime. [Justin Drake] A follow-up: Agree! There's a lot from ERC20 that I dislike, the main two things being: It being a pull system vs a push system, requiring the whole approve/transferFrom mess to use tokens to pay for things in smart contracts Handling of ETH being so different from handling of tokens Definitely would like to see both issues resolved in 2.0. The other big things I want to \"get right this time\" is (i) multisig wallets and (ii) not having the \"ether used to pay for gas to withdraw funds from a mixer contract being a deanonymization vector\" issue that makes privacy hard at the moment. Q: How soon will staking pools be live when Ethereum staking goes live? A: At the consensus layer we are trying hard to be friendly to decentralised staking pools. Hopefully we will see those soon after the launch of phase 0. The research and implementation work that Dfinity is doing regarding BLS Distributed Key Generation (DKG) will likely help decentralised pools. Centralised staking pools\u2014unlike centralised mining pools\u2014are somewhat awkward because you have to trust the operator to behave properly with your funds. [Justin Drake] Q: If we want to bring our smart contracts to a new chain, could we pre-determine the corresponding starting/ending hex values for the old smart contracts? Kind of reminds me of CREATE2... A: Yes, Eth2.0 will have a CREATE2 equivalent for deploying contracts. As for existing contracts, the entire eth1.0 state will be rolled into a contract on a shard and these existing contracts will be callable via calling into this 1.0 contract targeting the existing contract address. [Danny Ryan] Q: Are there any courses or subjects in uni that one should take to help in becoming a researcher? A: I'd say you need to be a good self-learner. Math, cryptography, computer science, programming, economics, networking are all relevant. [Justin Drake] Q: Of proposed ways to tackle state rent problem, which one is your favorite? What do you think about resulting complexity from user point of view? A: As far as base protocol goes, either option here: https://ethresear.ch/t/a-minimal-state-execution-proposal/4445 The complexity is actually not so much in the rent itself, it's in how it changes the developer experience. The general approach is that application storage will need to be more \"modular\" and explicitly broken down into chunks associated with specific users, possibly with a fixed amount of \"global\" storage, plus some short-term storage not assigned to any user that goes away after some fixed amount of time, eg. 6 months. [Vitalik Buterin] Q: Question for Justin Drake and other VDF researchers: Would using Chainlink and TEEs (Intel SGX) be a viable method of generating secure randomness for the VDF function of Eth 2.0? Could this be used in lieu of specialized hardware? If so, I imagine this could be a substantial time and cost saving measure in the quest for Serenity. A: TEEs can be used to generate randomness using delay. Unfortunately TEEs is trusted hardware. We need a trustless solution :) [Justin Drake] A follow-up: Though I would add that trusted hardware could be a great thing for individual validators to use to increase their security. [Vitalik Buterin] Q: What computer science problems still need to be solved prior to the release of Phase 1? A: For phase 0 we need locally-computable shuffles. For phase 1 we want a custody scheme that is friendly to decentralised pools. Please message me if that sounds like your cup of tea :) [Justin Drake] Q: What happens to the beacon chain in the event of a controversial hardfork on the Eth 1.0 chain? Will two beacon chains form? If not, what mechanism will the beacon chain use to determine which Eth 1.0 chain is the main chain? How will this affect the transition of the Eth 1.0 chain onto a Eth 2.0 shard? What safeguards are in place to ensure that malicious participants do not create unnecessary volatility between ETH & BETH during the year long transition from phase 0 to phase 2? It is my view that this trading pair must remain stable for a successful transition to take place. A: If not, what mechanism will the beacon chain use to determine which Eth 1.0 chain is the main chain? By default the beacon chain validators will just use the voting mechanism that's specified in the spec, and whichever chain a majority of the validators support is the chain that the beacon chain will go with. That said, if we want to facilitate a peaceful split, there is a fork versioning feature built in to the beacon chain to make replay protection very easy... [Vitalik Buterin] Q: Why are you not doing \"proper\" research and submit publications to conferences? A: Not really an answer to your question, but Ethresear.ch ( https://scholar.google.co.uk/scholar?hl=en&as_sdt=0%2C5&q=\"ethresear.ch\"&btnG=&oq=\"et ) does get cited :) [Justin Drake] A follow-up: As does the Casper FFG paper! [Vitalik Buterin] Q: Let's say that I have some ethereum locked on a time locked contract, will be available after the 2.0 transition? This question can be expanded to all 1.0 contract functionality after the POS transition A: The Ethereum 1.0 will live on, even after Ethereum 2.0 is fully deployed. See https://old.reddit.com/r/ethereum/comments/ajc9ip/ama_we_are_the_eth_20_research_team/eeub9sp/ . [Justin Drake] Q: Thoughts on this tweet? https://twitter.com/zaoyang/status/1088001513459511296?s=21 A: Eth 2.0 is not really trying to maintain backwards compatibility; almost every part of the design is significantly altered, and old contracts will have to explicitly migrate over to the new system and in some cases rewrite eg. to adapt to rent. [Vitalik Buterin] Q: What's your vision for Eth 3.0? A: STARKs, STARKs and lots of STARKs. Hopefully some nice way to achieve 2 second average block times. Extremely effective cross-shard communication, either at base layer or through a variety of easy-to-use layer 2 systems. [Vitalik Buterin] A2: See https://twitter.com/drakefjustin/status/1072593728253104128 [Justin Drake] Q: In the future how will a really popular DAPP operate? Will it be possible for a single DAPP to operate across multiple shards? If not how will it operate properly with the TX/sec limits on a single shard? Will L2 solutions be the only option? A: A dApp would have to get really big to consume all the resources in a given shard to justify spreading itself over multiple shards. For example, Uber does less than 20 rides per second. A similarly popular decentralised equivalent would likely fit on a single shard, especially when fancy L2 infrastructure is involved (e.g. state channels, plasma, SNARKs/STARKs). [Justin Drake] Q: What is your take on the current state of finding consensus on randomness, in particular the current VDF construction. While certainly clever, I wouldn't say it is very elegant. Do you think this is due to theoretical constraints or do do you see potential for a 'nicer' way? More general, are there any theoretical problems in this space, relevant to Ethereum 2.0 or not, that are just interesting to think about? (starting my PhD soon and looking for inspiration if it wasn't obvious) A: I wouldn't say it is very elegant I'd say VDFs are a super elegant thin layer on top of RANDAO :) Is it the hardware you don't like? If so, would you agree that proof-of-work is an elegant solution? Then think of VDFs as being \"proof-of-work 2.0\": much better randomness at much lower cost. It's a paradigm shift from massively-parallel work to inherently-sequential work. Do you think this is due to theoretical constraints or do do you see potential for a 'nicer' way? I'm not aware of any unbiasable randomness schemes that only have strong liveness, other than VDFs :) are there any theoretical problems in this space, relevant to Ethereum 2.0 or not, that are just interesting to think about? (starting my PhD soon and looking for inspiration if it wasn't obvious) We will have an academic \"VDF day\" at Stanford on Feb 3 to work on open problems. Will you be nearby? [Justin Drake] Q: Shouldn't the smart contract stated in (4) have the ability of sending just 16 ETH for something as RocketPool v2 work (while some consider this to be \"centralization\" I think it will help a lot the average user and mitigate the risk of the average user)? A: You can send between 1 ETH and 32 ETH to the Ethereum 1.0 deposit contract at any time. A minimum balance of 32 ETH on the beacon chain is required for activation as a validator. [Justin Drake] Q: I see a lot of people talking about nodes running in cloud. Shouldn't ETH find a way to actually discourage this? If everybody is running nodes in cloud that means we have possible single point of failure, which is against what I think we are trying to achieve and what enterprise customers are looking to eliminate. A: \"Partial slashing\" and the quadratic leak during times of no-finality actually financially encourage diverse validator setups. Your potential losses are much smaller when your slashable message or validator down-time are discorrelated. Diversity in setup includes -- node software, validation software, local server vs cloud provider (and which cloud if using cloud), geographic region, etc. If a ton of validators all run on AWS and AWS goes down, these validators will suffer large penalty leaks. To guard against this, I should setup my validation node locally or on a less used cloud provider. [Danny Ryan] A2: We do have a way! It's called \"partial slashing\" and the idea is that, if something goes wrong, the more people did something wrong the more everyone gets penalised. So there is an incentive to avoid correlation with other validators, and hence avoid centralisation. [Justin Drake] Q: Can you foresee ever having to move Eth 1.0 to Eth 2.0 in order to avoid losing it forever? A: The current plan is to incorporate the eth1.0 state into a contract on a shard in eth2.0. Note that this will just be a state root and an EVM interpreter along with eth balances. Users will be able to call into this contract by providing merkle witnesses of the required state. [Danny Ryan] Q: I'm a new developer looking into Ethereum, where would you officially recommend I look to develop with an eye toward future proofing? A: A key consideration to future proof your contract code for Ethereum 2.0 is sustainable storage. It's known as \"storage rent\" and \"storage maintenance fees\". [Justin Drake] Q: What do you guys think of the Avalanche consensus mechanism and could it play a role in the ETH roadmap further into the future? A: Avalanche is interesting to me because it's a fresh approach. Looking forward to seeing how it plays out with Bitcoin Cash. Successes there can be ported to Ethereum via L2 infrastructure. [Justin Drake] Q: Is sharding smart contracts theoretically possible? How would one go about that? A: Here's a trivial example: the Ethereum Name Service (ENS) can be sharded across n shards according to the first log_2(n) bits in the domain name hash. [Justin Drake] Q: How does eth 2.0 balance security across shards holding different amounts of notional value in them? For example if there is a decentralized finance shard holding a very high % of eth + other tokens, would the stakers/validators responsible for that shard have incentives to behave badly? A: The key security guarantee of sharding comes from frequently shuffling validators into randomly-sampled committees (known as \"crosslink committees\"). The hope is that this fast shuffling resists bribing attacks, in both the \"honest majority\" and the \"slowly-adaptive rational majority\" security models. [Justin Drake] Follow-up Q: It still seems like an inefficiency where you'd be over-securing shards with low notional value + under-securing shards with high notional value. Am I thinking about this wrong? A: Every shard gets security with the same notional value. Value (validator collateral) gets spread evenly across shards. [Justin Drake] Follow-up Q: Ah think we are speaking past each other a bit, let me try to clarify my concern --> It seems likely you will have wildly varying ratios of (value sitting atop a particular shard / validator collateral securing that shard). So for example a defi shard with 90% of value in eth economy sitting in it only gets 1/1024th of the validator collateral securing it. And an empty or unused shard would get same 1/1024th of total validator collateral securing it. This seems inefficient to me. Depending on how the distribution of value shakes out across shards, potentially materially inefficient? A: This seems inefficient to me. Depending on how the distribution of value shakes out across shards, potentially materially inefficient? Oh I see! Interesting point. We consider every shard equal, and provide high security for all shards. The breakdown of even a single shard (namely, an unavailable or invalid crosslink) would likely be catastrophic for the whole system. [Justin Drake] Q: Will the Beacon Chain require its own nodes? Is this basically a brand new chain that has only one connection to ethereum: Proof of Burn? A: The beacon chain is a new system level chain that houses the validators and manages their responsibilities and rewards/penalties. In many ways this is akin to the FFG contract and sharding contract proposals that were previously deprecated but the organization breaks clean from the EVM to allow for a radically new design and increased efficiency. A node in the future can run the PoW chain and/or the beacon chain. If they run the beacon chain, they can then sync whatever shard chains they want. The connection at first is just an economic connection -- use the existing economics and community to seed validation in the beacon chain. Beyond that, we expect the beacon chain to be used to finalize the pow chain in the short to medium term. In the end, there are a number of proposals to either fork the eth1.0 state into eth2.0. [Danny Ryan] Q: How does Eth 2.0 account for DDOS attacks? If people run nodes at home on consumer hardware with a normal internet connection they can be taken offline easily with DDOS attacks or am I interpreting this wrong? A: It is the responsibility of a validator to remain online to fulfill their responsibilities and gain rewards. A validator can remain profitable if they generally remain online greater than 50-67% of the time. A validator's inactivity penalties are also minimized if their being offline is dis-correlated from other validators. This incentivizes to utilize different node and validation software from the majority so that in the case of a ddos attack vector against a particular node implementation, your offline losses are minimized. The validator's protocol level identity and it's node's network identity are completely decoupled. This allows for a validator to create any type of obfuscated network setup that serves their purposes. I expect many tools and best practices to arise for home validators in the coming months. [Danny Ryan] Q: What are your thoughts on formal verification of smart contracts? Will this be possible with Ethereum 2.0? A: Formal verification of smart contracts is awesome and super valuable IMO. Formal verification will be possible in eth2.0. I believe the WASM semantics are already available in K which will provide some good opportunities for contract verification. Opening up more languages by using WASM will also allow for utilization of more restricted languages that are more amenable to FV. [Danny Ryan] Q: What are some good cypherpunk books that you would recommend to people getting interested in this space? (Or just good book recommendations in general) A: I don't read many books nowadays. I mostly consume academic papers, whitepapers, podcasts, videos, blog posts, Reddit, Twitter, etc. I did enjoy \"Zero to One\" by Peter Thiel when I was an entrepreneur. [Justin Drake] **Q: How do you prevent single shard corruption attacks? Basically will there be resharding? If so, how is resharding done? How are you solving the fast state syncing problem if nodes need to be reshuffled around shards? A: How do you prevent single shard corruption attacks? By randomly shuffling validators across shards. Basically will there be resharding? If so, how is resharding done? Right now crosslink committees are shuffled every epoch (6.4 minutes) and shard proposer committees are shuffled every ~9 days. Crosslink committees are critical, hence why there are shuffled fast. See this answer also. [Justin Drake] Q: You said in a comment some days ago that there are basically no unsolved problems of Serenity Phase 0 left. Which problems of Phase 1 and 2 are still left to be solved? A: The short answer is there are no big fundamental problems for phases 0, 1, 2. The more detailed answer is that for phase 0 we need locally-computable shuffles. For phase 1 we want a custody scheme that is friendly to decentralised pools. For phase 2 we need to figure out sustainable storage. [Justin Drake] Q: Before Eth 2.0 Enhancements come in, what is the best recommended approach for storing private data on Ehereum? A: Storing data on Ethereum is expensive per byte. Infrastructure like Filecoin may prove to be a good trustless storage solution. For privacy, just encrypt the data. [Justin Drake] Q: Will there be any zk-snarks related enhancements coming with Eth 2.0? A: We are hoping to have a SNARK- and STARK-friendly hash function in Ethereum 2.0 at some point. Unfortunately those likely won't be ready for phase 0. At the application layer, WASM will ideally mean that SNARK-specific precompiles won't be necessary. [Justin Drake] Q: Is there some kind of roadmap for the migration from ETH 1.0 to ETH 2.0 in layman's terms? For true decentralization it is required to get more people on board that understand the full process. A: I described the three phases here https://www.reddit.com/r/ethereum/comments/ajc9ip/ama_we_are_the_eth_20_research_team/eeueuzc EthHub also does a great job at simply describing the path https://docs.ethhub.io/ethereum-roadmap/ethereum-2.0/eth-2.0-phases/ [Danny Ryan] Q: ETH token will not be transferable back after migration to ETH2.0 What will be the token ticker for the ETH2.0 chain native token? A: ETH\u2014at least when Ethereum 2.0 is fully deployed. Fungibility is a key design goal. [Justin Drake] Q: Where does new client software take lists of peers with their ip addresses and ports? Is there is centralized server? A: This is an implementation detail. Some clients may have a hardcoded list of \"bootstrap node\" IPs and ports. [Justin Drake] **Q: Do you have any final plans in mind about the current ETH inflation? A: Nothing final. Ultimately the community will have to make a tradeoff between low inflation and high security. See https://github.com/ethereum/eth2.0-specs/issues/251 . [Justin Drake] Q: What are the odds that a fully sharded chain including state transitions is feasible? A: Very high. No fundamental problems unsolved. The tricky part is getting everything to fit together cleanly. [Danny Ryan] Q: Can I use a raspberry Pi to stake when staking is possible? And what do I do with it in the mean time? A: Nimbus ( https://github.com/status-im/nimbus ) is targeting resource-constrained validators :) [Justin Drake] Q: What's your opinion of EOS (or TRON, STEEM) in terms of dapp platform? A: I tend to be critical of that class of systems. See https://vitalik.ca/general/2017/12/17/voting.html and https://vitalik.ca/general/2018/03/28/plutocracy.html for reasons why. [Vitalik Buterin] Q: Any updates as far as overall inflation rate per year or per milestone/HF? Any updates as far as TPS per year or per milestone/HF? A: See https://github.com/ethereum/eth2.0-specs/issues/251 [Justin Drake] Q: Can I make a Zcash coin on ETH 2.0 for example with all or most of the advantages of Zcash? A: Yes, there are already a number of experiments in eth1.0 to demonstrate usage of ZKSNARKs for both privacy and scalability. Check out miximus for privacy and roll up for scalability (both by barry whitehat!). Usage of ZKSNARKs will be supported in eWASM state execution so I expect more privacy solutions akin to Zcash to continue to be built on eth2.0. [Danny Ryan] Q: Why is ETH 2.0 Phase 0 even needed as a \"main\" chain, and need Bether transform from real ether (hence risk losing some value), instead of doing a testnet only, because after all this is what phase 0 is, based on TestnetBEther? A: ETH 2.0 needs a main chain as a single point of truth for all the shards. The reason we have phases 0, 1, 2 is to break things down conceptually, and in terms of incremental releases to limit risk. [Justin Drake] Q: What work is being done to make the research behind ETH 2.0 more geographically decentralized? Are there any efforts to translate research specifications into other languages? A: Are there any efforts to translate research specifications into other languages? Once the spec is more mature I expect the community to pick this up, somewhat similar to how Andreas's books get translated. English seems to be the a lingua franca for research and development. [Justin Drake] Q: After PoS, if a node gets hacked, can the hacker make the node to lose its stake by confirming false transactions? A: When your validator gets penalised it is automatically deregistered to prevent further damage. We have a mechanism called \"partial slashing\". The idea is that, if something goes wrong with your validator it only gets penalised a bit if not many other validators also mess up around that time. So in the optimistic case of a lone hack you should recover most of your funds with your withdrawal key (kept secure, e.g. in cold storage). [Justin Drake] Q: Will contracts be able to pay for gas in Eth 2.0? A: That will likely be unlocked with abstraction (which includes gas abstraction). [Justin Drake] Q: Assuming the number of network nodes remains the same and the network graduates to full PoS... what is your expected maximum theoretical transaction throughout? A: Rough ballpark figures. 1024 shards * 10 transactions per second per shard ~= 10k transactions per second. [Justin Drake] Q: What is the most updated timeline for rolling out PoS? Since Vitalik already said 'research is done', what are developers' incentives to push things forward? Are there any specific measures taken to ensure a smooth transition? A: I expect the beacon chain (the core PoS chain) to launch late 2019. Ideally the spec should be close to final in Q1, cross-client testnets in Q2, security audits in Q3, mainnet launch in Q4. As a rule of thumb, launching in December is hard because of the holiday season. So November 2019 and January 2020 would be my two best guesses. Having the Ethereum 2.0 chain finalise the Ethereum 1.0 chain will take more time. [Justin Drake] Q: Will it be possible with sharding to have shards with different rules and/or technology independent from the other shards/beacon chain, but still using the same base tech in terms of transacting and security? For example: private eth network run in a shard connected to main eth network from which it takes just security from validators. Private transaction with ZKsnarks shard(s). Encrypted data shards. Erc20 like coin launched on ETH 2.0, but with it's own rules and maybe own shards somehow controlled by the smart contract of that erc20. A: Every shard has the same data availability layer, and the option to use EVM2.0 as an execution engine. That's common base-layer infrastructure. At the application layer contracts can be powered by non-EVM2.0 execution engines (so-called alternative execution engines). There's also a huge L2 design around state channels, plasma, cross-shard communication, etc. So at the application layer I expect lots of non-homogeneity across shards, as well as a lots of homogeneity thanks to standardisation. [Justin Drake] Q: Today, running full nodes isn\u2019t that hard, but the resource requirements are slowly increasing. How much thinking is being devoted to the greater infrastructure requirements of Eth 2.0 and how they will impact node participation and decentralization? A: Ethereum 2.0 validation should be sustainable from a resource perspective: Bandwidth: fixed cost (thanks for fixes shard block sizes) Storage: if not fixed then sustainable (thanks to ideas such as storage maintenance fees). Note that storing shard blocks since genesis is not required. CPU, memory I/O: similar situation to Ethereum 1.0 (gas limit that can be voted up or down). [Justin Drake] Q: How ETH 2.0 differs from ETH, and why POS instead of POW. A: PoS enables goodies such as economic finality and sharding. It is also much cheaper (in terms of inflation cost for hodlers, as well as ecologically) than PoW. [Justin Drake]","title":"Part 1"},{"location":"other/ethereum-2.0-ama/#part-2","text":"Q: What do you feel is the biggest unsolved challenge left in Eth 2.0 research which must be addressed before Phase 1 or Phase 2 could be implemented in the future? A: I really honestly think that there are no unsolved research challenges at this point. It's mostly \"how do we make this thing more elegant and take up fewer lines of code and have fewer edge cases\" on the research side. [Vitalik] Better understanding the incentives and various actors that might arise in a stateless and highly abstracted execution model. There is really great work being led by both the EF eWASM team and the Consensys Quilt team to better understand the design space and active build prototypes to vet ideas. [Danny] Q: Previously, a release date of January 2020 for Phase 0 was informally articulated. Do you feel this date is realistic and achievable? A: Thanks for noting its informality. :) Launching early next year is my personal target, but there is a lot that needs to be done before then! We need: long-running test nets (however that is defined), formal verification of the deposit contract, and clients to be ready for prime time, but right now it looks like everything will come together in time. We also don't want to rush clients into developing buggy software just to be ready by an arbitrary date. If anything, I think BLS standardisation efforts are the most likely to slow us down. We (as a greater blockchain community) are trying very hard to have a standardised signature scheme for better interoperability between all the chains. There is a high degree of consensus on this already, but establishing a new standard is always a slow process. [Carl] The client teams are doing a great job and continuing to push the envelope. I expect exciting progress to be made in the coming months, but I also expect that the last mile might be long. Early 2020 is realistic and still the target. [Danny] Q: Are the researchers happy with the current state of the economics of Ethereum 2.0? A: I don't think it's productive for us to worry about the absolute numbers at this point; the network will launch, and either the rewards will prove sufficient or they won't. The other thing worth worrying about is centralization incentives, but that's difficult to work out \"in theory land\"; much of the result in practice has to do with how lazy people are. [Vitalik] Q: My biggest worry about ETH 2.0 is that it will kill composability. Won't most dapps end up trying to build on the same shard as say MakerDAO so they can use Dai? A: Composability between shards is definitely unchartered territory but there are reasons to be optimistic: The shards are designed for homogeneity (unlike, say, Polkadot or Cosmos) to facilitate cross-shard communication. There are design patterns which abstract away the boundaries between shards. For example, one could consider shards 0 and 1 as a combined data availability substrate for an execution engine which requires more bandwidth. These design patterns will be more easily exploitable in the context of programmable execution engines. The shards are designed to be friendly to \"fast optimistic finality\" thanks to shard attestations which are somewhat analogous to block confirmations in the context of Eth1. What this means that is, in practice, the shards may act as one logical blockchain thanks to quick probabilistic finality of individual shards. The UI layer is also an opportunity to abstract away the boundary between shards. [Justin] Q: When can we expect the Beacon Chain to be finalizing/checkpointing the Eth1.x chain? A: My best guess is early 2021. See here . [Justin] Q: Under the specs there is a \" block.eth1_data \" property; based on that I thought that somehow we were going to have an hybrid validation starting Jan 2020 (if all goes well) from both PoW and PoS. As stakers, what are we going to validate except the validators, staking rewards & penalties if all the traffic will still be on eth 1.0 and we're not taking part? A: In order for Eth2 to finalise Eth1, 2 things are needed, Eth2 must vote on Eth1 (as is implemented as you point out) and Eth1 must change its fork rule to follow the finalised blocks on Eth1. The latter requirement requires an Eth1 hardfork. It is therefore easier to just have validator finalise the things you mention for now and later on add in Eth1 finalisation. Additionally, it is safer to launch without Eth1 finalisation in case of a Eth2 black-swan event in the early days. [Carl] Q: Rebuttals to the criticism that Eth 2.0 is extremely complex? A: It got considerably simpler over the last year. If you do a word count on the spec, it seems to be considerably smaller than the yellow paper at this point. There's a lot of things in eth2 that are much simpler than eth1. But there's definitely lingering complexity and I deeply care about minimizing it. [Vitalik] While the research path has been somewhat tortuous and hard to follow, the end product is arguably simple and clean. Expect more educational material highlighting the simplicity of the current design. Phase 0 is about 1024 lines of code to specify (assuming SHA256 and BLS12-381 as primitives). I expect phases 1 and 2 to be 1024 lines of code combined (assuming WASM as primitive). That's just the phase 0 consensus (deposit contract, beacon chain state transition function, and beacon chain fork choice rule). [Justin] Q: Why are there so many teams building eth2.0 clients? I understand the point of client diversity but don't you think 6 clients seem to be pushing it? Supporting so many clients would also divide the resources in terms of funding. Which clients do you see as the geth and parity of eth2.0? A: A few notes on client diversity: There's more than 6 clients being developed\u2014it's closer to 8. I expect consolidation\u2014a bunch of clients may not survive 2020. I expect specialisation\u2014one can focus on the browser (e.g. Lodestar), resource-constrained devices (e.g. Nimbus), the enterprise (e.g. Artemis), prototyping (e.g. Trinity), etc. A minimum of two production-ready clients are necessary for launch. I expect the first-mover advantage to be strong. All the above have, to an extent, historically happened on Eth1. [Carl] We definitely don't want a duopoly! For me personally, the ideal would be to have no single client exceed 1/3 of the network, so any software bug in any single client would not stop the network. Though having no single client exceed 1/2 is ok too and gets us most of the same benefit (if a major client has a bug, having no finality for a while while things are being figured out may even be an improvement...) I expect a power law distribution, and it's definitely likely that some of the clients will not survive to see significant usage on mainnet. [Vitalik] My guess on why so many clients showed up to do the hard work is that eth2.0 is both exciting as a purely technical challenge as well as a chance to make a mark on Ethereum and the crypto space in general. I'm pleased that there are so many great teams doing the hard work, but recently, I've been more focused on finding contributors to do value-add work outside of the core client implementation. Formal verification, academic analysis of protocols, testing, light clients, web3 interfaces and developer tooling, validator clients with great UX that plug into any underlying node, etc, etc. [Danny] Q: Are the Ethereum 2.0 clients eventually going to replace the 1.0 counterparts? For example, will Prism ever get merged to Geth? A: I expect the Eth1 clients to live a long and prosperous life :) On Prism: \"Likely not. Other than the language (Go), Prysm and Geth have very little in common.\" [Justin] Q: what happens when I stake 32 eth, and get slashed once? now that my stake is below 32 eth do i get kicked out of the validator set? A: Validators get kicked out when they get slashed. There is another ejection mechanism if your balance goes below 16 ETH from accumulating (non-slashing) penalties. [Justin] You also lose some amount of ETH. The minimum being set to 1 ETH currently. There is an additional penalty related to the number of other slashable offenses that have occurred in the recent time period. If more validators have been slashed recently, you lose more ETH. The maximum penalty occurs if ~1/3 of validators have been slashed recently, at which point you lose all ETH. This highlights the importance of having a discorrelated validator setup from other nodes and potentially having some fault tolerance setup with yourself before you sign things. [Danny] Q: What are the non-slashing offences? A: There are micro-penalties for not voting to finalise the same blocks as other validators and the inactivity penalty (for offline validators) for when the chain is not finalising for an extended period of time. [Carl] We have a bunch of micro-penalties for not optimally crafting attestations and penalties for being offline (search for get_attestation_deltasand get_crosslink_deltas here ). [Justin] Q: i hear a lot of hype around staking rewards, but what are the penalties for getting slashed? does the network have different punishments for different misbehavior (offline vs. double-signing)? is the \"up to 60.8% slash in 18 days\" still correct? A: I think you are conflating two thigs here, slashing and the inactivity leak. Inactivity leak If your validator node goes offline for 18 days, and the beacon chain is not finalizing, then your balance will be reduced by \"up to 60.8% slash in 18 days\". Slashing If a validator behaves provably maliciously, then they are slashed by having their balance reduced. Assuming client software is written well, this should be basically impossible to happen to you. Minimum penalty is 1 ETH, but it goes up linearly in the number of people slashed at the same time as you. See here for more [Carl] Important to note that if you are offline, but the chain is still finalizing you only stand to lose approximately the same as you would have gained. The quick reduction in balance over a ~2 week period only occurs when not finalizing. Another reason to have a discorrelated setup from the rest of the network! [Danny] Q:What is currently the most exciting new research development in Ethereum 2.0? A: The execution engine abstraction in phase 2 is quite exciting, taking account abstraction to the next level. It allows for the consensus part of execution to be an ultra thin layer of abstraction on top of data availability. Assuming WASM as a black box, it may be on the order of 256 lines of code to specify. There's an initial proposal from Vitalik here . The idea is that even the notion of a \"transaction\" is an application-layer detail which can be specified as WASM code. Compare this to Eth1 which \"enshrines\" an opinionated notion of replay protection (nonces), signatures (ECDSA), contracts, accounts (vs UTXOs), gas, storage, etc. [Justin] I'm lately most excited about this . The OVM work by Karl Floersch and co is along similar lines and also very interesting. [Vitalik] Q: Theres been some debate over the necessity of ASICs in Eth 2.0. I understand theres an effort to spread the cost out among various communities, but I think many people feel this might just end up being an expensive science project where the rewards dont justify the costs and if you itemised Eth 2.0, it seems like it might be the most expensive part. Are there alternatives besides relying on just Randao/Randao + ASICs (VDF)? What are the ELI5 upsides + downsides of the alternatives? I appreciate that the researchers are a tackling a difficult problem with randomness for a blockchain. A: It's important to stress that the VDF mechanism's safety is not critical to the safety of the Eth2 consensus; if the VDF scheme gets broken or someone makes an ASIC fast enough to predict all the outputs, all that happens is that the percentage of validators they need to corrupt a single committee drops by a few percentage points (think, from ~50% to ~33-40% plus a lot of computing power). I actually think the main value of the VDF is that it provides global trustable secure randomness to applications that need it. [Vitalik] +1 on consensus-layer security and/or performance gains, and value-add at the application-layer. The other \"promise\" of VDFs is that they are a new cryptographic building block with the rather unique notion of time. They can used for proofs of space, proofs of replication, proofs of history, anti-frontrunning, expiring zk-proofs, and hopefully further applications which are hard to predict today. [Justin] Q: I'd like to know more about the data availability layer of Ethereum 2.0 - particularly the economic costs of long-term data storage. Part of my political platform includes integrating blockchain technology with government operations. For example, I'd like to see all of America's public records stored on a public, open source, sufficiently decentralized blockchain. Would it make sense to build something like this on top of Ethereum 2.0? Why or why not? A: Realistically you would want an incentivized data storage platform like Swarm, with hashes of the documents stored on the ethereum blockchain. But I'd recommend thinking harder and trying to figure out how to answer the deeper question \"how could we use blockchains as a tool to minimize opportunities for misbehavior in government?\" Places to start I can think of include: Things like https://opencerts.io/ for all government-issued records Using https://ethresear.ch/t/minimal-anti-collusion-infrastructure/5413/ to do online votes, starting in low-security contexts (I think petitions would be a good place to start and underexplored) An internal-use stablecoin where only government agencies can hold balances but transactions are visible to and auditable by the public Some kind of zero-knowledge privacy-preserving sales tax collection thing Blockchain-based solutions for esoteric government things like spectrum auctions Get your country (I'm speaking generically to all readers here :D) to make an Estonian-style E-ID system that lets people make digital signatures that can be verified by anyone publicly. This is not technically a blockchain application, but it would be a tool useful in many blockchain applications [Vitalik] Q: I recall /u/bobthesponge once saying that almost his entire Net worth is in Ether (even his salary from the EF). Are there any other researchers on the research team that are as convinced of Ethereum's future, besides Vitalik and Justin of course? No need to call someone out. Just percentages, ie. \"Over 50% of the research team is heavily (over 30% of net worth) invested in Ether financially\", would be sufficient. A: Somewhat ingrained in our culture, the research team doesn't talk much about net worths. Having said that, the research team has a lot of fresh blood (e.g. Dankrad, Proto, Carl) which I don't expect to be crazy invested in ETH.[Justin] I am not an eth whale, but I get paid in eth and have high exposure. [Danny] The aforementioned Carl here, let's put it this way: financially, emotionally, and intellectually, I am heavily exposed to ETH. [Carl] Q: How many Eth2.0 client teams have to have a finished client for the Beacon chain to go live? A: I asked the same question a few days ago. At this moment, it is still an open question and will likely be until much loser to the time. Obviously having more clients is better, but that should be played off against the launch date. I am currently torn between 2 and 3. (Having > 2 would be great because otherwise there is a client guaranteed to have a majority of the validator-base.) At the end of the day, it will come down to who is ready and when. [Carl] Two at minimum, ideally three. [Justin] Q: I understand that about 10 million eth is expected to provide good enough security for the network. In a hypothetical scenario, what happens in the situation where a large organization manage to secure more than 50% of the total eth staked and use it to maliciously attack the network? As i understand, the side with less total eth staked will be slashed, so won't this malicious actor be able to effectively kill the network? A: If a large actor were to aquire a large enough stake to take over the network they would need to buy >2/3 of the total staking supply which would drive the price up, so it's not a cheap attack in the first place. Secondly, you are not slashed if you vote for a minority chain, only if you behave provably maliciously in the eyes of 2/3 of the validators. One of the beautiful things about PoS is that these attacks can be handled with grace. We, as a community, can go in and hard-fork out the malicious actors so they have no more voting power. The malicious actors just burnt a lot of money to temporally halt a network. In PoW, by contrast, if someone buys ASICS with 51% hash power, there is no way to remove them from the system. [Carl] Q:Do the client teams feel their implementations will be sufficiently robust enough, stable enough, and easy enough to use that normal nerds (like myself) can safely run their node software, stake 32 ETH on it, and not be slashed or lose ETH due to client bugs? My biggest concern is losing ETH while being a well intentioned actor. I've ran Geth, Parity, Trinity, and EthereumJ (Harmony) nodes for multiple years now and those clients have been around a lot longer than any of the ETH 2.0 clients have, but they still have issues, still have bugs, still sometimes crash. A: I hope so! One key component in the incentive design is that penalties (for going offline and for being slashed) are only high if many other validators go offline at the same time. So any bug that doesn't hit every node at the same time should only cost you a minimal amount. [Vitalik] Q:suppose ethereum reaches 1 mllion tps, ledger size will grow 1 terabyte everyday, any solution to this? what is your projections in terms of ledger size growh and what is your solution to this A: The sharded eth2.0 is expected to handle ~10MB/s of data availability. This is data that is come to consensus upon in shard chains and guaranteed to be available in at least the ~2 week time frame. This is not necessarily state size. The current approach to state and state execution is to take a \"state-less\" approach in which blocks must contain the merkle witnesses of the relevant state to perform the tx executions. This is reduces the amount of state any consensus node must store, but does bring up other issues about state size, who stores it, how users get it, etc. In fact, the entirety of state execution is being abstracted away such that we can experiment with multiple schemes to deal with this problem (state rent, users/dapps storing their own data, etc). Much of the state rent research that @ledgerwatch has driven in the past year or so will likely come into play. [Danny] Q: Lets assume you are a guy with very little cryptotech-knowledge, but you do have >32 ETHER. Question #1: Would staking be made easy-to-do, so \"ordinary\" people can earn interest on their holdings? Question #2: Does staking pose any risks of losing ETH by accident? Trying to understand if you can stake without any risks unless you \"intentionally\" try to harm the network (eg. if your validator node goes offline, because your internet provider has an issue and likewise) A: Would staking be made easy-to-do, s\u00e5 \"ordinary\" people can earn interest on their holdings? I expect a cottage industry will be setup around accessibility. Infrastructure to be built includes staking pools (centralised\u2014think Coinbase\u2014as well as decentralised one) as well as plug-and-play \"validator in a box\" solutions. Trying to understand if you can stake without any risks unless you \"intentionally\" try to harm the network That's definitely the goal. eg. if your validator node goes offline, because your internet provider has an issue and likewise Penalties should be marginal for validator nodes that go offline for short periods of time every once in a while. [Justin] Q: What is the current thinking around the Eth1>Eth2 migration plan? A: The current approach is to fold eth1 into eth2 as an execution environment. In practice, this will mean that we would need to have a hard fork on the eth1 side to rebalance some gas costs (opcodes that read storage or read accounts would see their gas costs increased to 2000-10000), and after that at some point there will be a \"flag block height\" from which the eth1 state root will be moved into the eth2 system (or possibly some one-time processing will be run on the eth1 state to make some optimizations, eg. replacing the patricia hex trie with a binary tree) and after that eth1 will be part of eth2, with applications being able to run as before. I do think the likely gas cost increase of storage/account reading opcodes (basically the same opcodes whose gas costs were already increased in Tangerine Whistle; those costs will need to go up at least another order of magnitude) is something that contract devs should be aware and plan for. The reason that change will be necessary is that those opcodes greatly increase the size of a Merkle proof needed to statelessly verify a block, so currently Merkle proofs for a worst-case block are >100 MB; with those gas repricings plus trie optimization plus charging per byte of any contract being read, we could get it down to acceptable levels. [Vitalik] Q: Regarding Proof-of-Stake and wealth distribution (and issuance reduction), by the looks of it the majority of ETH will be held by the minority of entities, does that cause any concern since a single entity can run multiple validator nodes (and earn more rewards)? It's a question from inequality perspective not security; if ETH were to take a significant role in the global economy, wouldn't this widen the gap between rich and poor by orders of magnitude (MUCH worse than the current economic system)? Basically, economic inequality on steroids. A: I definitely think income inequality issues from crypto are an issue! It's a big part of why I am not a single-cryptocurrency maximalist. But I still think that PoW is not better than PoS from an inequality point of view, because although PoW does distribute coins into \"fresh hands\", you need so much capital to become a PoW miner that PoW itself is a big rich-get-richer mechanic in practice. [Vitalik] Q: I know its still early but are there some rough estimates of when we might see Spec freezes for Phase 1 and 2? A: Phase 2 is a bit too far out to say, but my hope for phase 1 is Q3/4 of this year. [Carl] That said, the current minimal execution design with EEs for phase 2 (once better researched and prototyped) is a super simple addition on top of phase 1 [Danny] Q: Please ELI5 (\"explain like I'm five\") why the need for a second chain instead keeping on evolving the first one? A: Building Eth2 on Eth1 would be a bad design decision for a few reasons: We would be constrained by the Eth1 gas limit, which would severely affect performance (e.g. 1024 shards and 32 ETH to validate would not be possible). We would be mixing the consensus and application layers. This means the consensus layer is subject to the application-layer DoS vectors (e.g. high gas prices). It would also mean \"enshrining\" application-layer contracts, which is far from ideal from a governance standpoint which should be as neutral as possible with regards to deployed contracts (i.e. The DAO interventions should be the exception, not the norm). We would be constrained by the EVM, which is notoriously hard to safely program complex contracts in. Eth1 does not have support for BLS12-381. We would be subject to the Eth1 block time Poisson distribution (as opposed to the regular\u2014and shorter\u2014slots durations in Eth2). The list goes on :) [Justin] Q: I am considering to stake during phase 0, but i am a bit concerned about the inactivity leak. I want to know how to stop/pause being a validator if I change my mind? I am asking this as there may be certain situations in which I think I will be offline for a while, and I do not want my balance to slowly leak out due to that. A: You will only suffer large penalties if you are offline at the same time that >1/3 of other validators are offline. Otherwise the penalties for being offline will be tiny, to the point where you will be net-profitable (not including computer costs etc) as long as you are online more than ~50-67% of the time. The incentives are deliberately designed to be forgiving to avoid discouraging amateur setups to promote decentralization. [Vitalik] The closest to a \"pause\" button is to first exit (which can take as little as half an hour, but may take days/weeks since there's a queuing mechanism) and later re-activate. [Justin] Q: 1024 shards, 131,000+ validator slots... what happens if there aren't enough validator slots filled by the time sharding goes live? A: With 1024 shards, and 128 validators in a committee, a minimum of 131,072 validators are needed to crosslink every shard every slot. If there are fewer validators than this, then shards are skipped to ensure the 128/committee validator number. [Carl] The system can naturally handle as low as ~64 validators. In this case, security is obviously insanely degraded, but the protocol can technically move forward. [Danny] Technically the system can \"move forward\" with one validator :D But yes, below the 131,072 validator (4.1M ETH) level the properties of the system progressively degrade as the number of validators goes lower and lower. [Vitalik] Q: if i understand finalization correctly, the more validators you have the longer it takes to finalize. how is eth2 addressing this issue without pounding the network with tons of messages being sent between all the validators? A: Correct. I wrote an article about this fundamental tradeoff here: https://medium.com/@VitalikButerin/parametrizing-casper-the-decentralization-finality-time-overhead-tradeoff-3f2011672735 We managed to get a couple orders of magnitude more favorable tradeoff curve than other projects through BLS signature aggregation, which reduces the marginal cost of a signature to 1 bit of data and 1 ECADD (~0.001 traditional signature verifications) of computation. [Vitalik] In Eth2, more validators should not lead to (significantly) longer finalization times. By making use of BLS signature aggregation and by grouping the validators into committees, we're able to support hundreds of thousands (and hopefully into the millions) of validators. [Carl] Q: Has the EF given any thought to maybe issuing \"official\" NFTs (i.e. collectibles) to initial stakers upon the launch of Beacon Chain as an \"extra incentive\"? What's your opinion on this? I'd say this would be the remit of the community, not the EF. Note that the Eth2 designers avoided giving early validators a special reward (e.g. giving the first 16,384 validators a 1 ETH bounty) to avoid distorting the economic experiment. We want to learn whether or not the basic incentivises are sufficient to incentivise participation. [Justin] I actually like the idea of an NFT. The deposit contract is readable in such a way that proofs can be made to a separate contract to generate NFTs. Been talking to Austin Griffith about this. He/burner-wallet might take the charge. I don't think an NFT would hinder our ability to understand the pure incentivizes here. It's at best a trophy and of little economic value imo. [Danny] Q: How is the work on evaluating the feasibility of producing dedicated VDF hardware coming along? A: At this point there's reasonably high confidence that VDFs (including building hardware) are viable. A few updates: A team of 3 ex-Intel people (Simon, Sean, Kelly from Supranational) is dedicated to the hardware aspects. The Rivest timelock challenge (open for 20 years, designed to last 35 years) was cracked in a few months using an FPGA (see here, and here). There's also code on Github. Work by Erdinc Ozturk has improved the state-of-the-art circuit depth for the modular exponentiation in VDFs. The ePrint paper was submitted a few days ago and should be published soon. A prominent complexity theorist (Ryan Williams from MIT) is working on circuit depth lower bounds for modular multiplication. Significant progress was made by Ligero on the RSA ceremony. We are planning for a ceremony with unprecedented scale (1024 participants) in 2020. New research papers keep flowing in\u2014see http://vdfresearch.org The $100K FPGA competition is starting in a few weeks. We have relevant corporate sponsors for the FPGA and ASIC competitions. In addition to the Ethereum Foundation and Protocol Labs (i.e. Filecoin), a new blockchain project (to be announced with the FPGA competition) is helping with funding. $900K was raised in the latest round of funding. [Justin] Q: Is there a chance for obligatory anonymity of future validator withdrawals? Force every withdrawal to go to a shielded pool - like zcash does with mining rewards. I fear without the obligatory anonymity here just using a mixer/etc is going to be treated as extremely suspicious - forcing stakers would add plausible deniability. A: I definitely support moving toward more and more privacy being a default over time! I'd say validator deposits are more important to mix than withdrawals, as that way it becomes harder to locate the nodes of specific validators which seems like it would increase security and censorship resistance. [Vitalik] Q: What are the main incentives to run a beacon node for validators if they can just connect to high-up time beacon nodes?If there are beacon node providers with high up-time - how is this going to be decentralized? A: There is an anti-centralisation incentive mechanism baked in. Basically, validators get punished for going offline the more other validators are offline at the same time. So \"uncorrelated downtime\" should be optimised in addition to \"high uptime\". [Justin] Q: If, as a validator, I know that I'm going to be offline for a period of time, is is possible to 'pause' validating without suffering an inactivity leak? A: The closest to a \"pause\" button is to first exit (which can take as little as half an hour, but may take days/weeks since there's a queuing mechanism) and later re-activate. [Justin] Clarification: there's a minimum ~1 day period before you can withdraw after you exit. It's safe to be offline during that time, but it does prevent you from re-entering. If we want to, in some future version we could add a \"re-enter\" feature that allows immediate re-depositing without waiting to withdraw first.... there's no theoretical reason why such a thing would not be possible. [Vitalik] Q: Do we have clarity yet on whether currently locked-down smart contracts (eg metronomes 4 contracts by Jeff garzik) will continue to work seamless in ETH2.0 or whether these contracts will be deprecated with all ETH in them lost? And how can storage costs be added to locked-down contracts in ETH 1.x ? In other words can we all assume immutable contracts on ETH1.0 will continue to work forever (provided enough people want them to)? Thx A: The current plan is that eth1 will be folded into eth2 as an execution environment via the stateless client approach, in which case, yes, contracts will keep working as expected. [Vitalik] Q: According to this paper, it may be possible for Quantum Computers to hijack and re-sign transactions DURING BLOCKTIME by (as early as) 2027. In other words, ownership of ANY wallet that has not upgraded to a quantum secure signature scheme BEFORE THEN can no longer be trusted AT ALL (even WITHOUT previous outgoing transactions). SO THE QUESTION IS THIS: Is anyone who fails to manually upgrade their wallets before a deadline (in order to become quantum secure) guaranteed to lose their funds after the advent of Quantum Computers? For example, if someone stores a PAPER WALLET for let's say 20 years, are they going to lose their funds by that time? Can QCs just monitor the entire blockchain and automatically attempt to hijack any transaction with insecure signature scheme during one blocktime, even if the sender has no previous outgoing transactions? A: Even if a quantum computer gets announced as immediately usable tomorrow, it is possible to do an emergency procedure to secure the funds of everyone who has not yet publicly released their public key or a signature (ie. every standard account holder that has not signed a transaction). You do this by doing a soft fork to disallow standard transactions, and replace them with a special transaction type that uses a STARK to prove that you own the private key k such that the given address A equals to hash(G * k)[12:] , and then moves the funds over into a new address type that uses a quantum-secure signature scheme, eg. Winternitz signatures. If we get more warning, then we can get people to update to Winternitz on an orderly schedule. TLDR: we're fine. [Vitalik] Q: how do/will the performance bottlenecks compare between 1.x and 2.0 A: 2.0 removes the disk I/O bottleneck for consensus participants by heavily leaning towards stateless clients. Finality greatly mitigates the sync latency bottleneck, and the requirement for consensus participants to store historical blocks. [Justin] I'd also add that I expect light clients to be massively more viable in eth2 than in eth1. About the same order of magnitude load as a bitcoin light client to stay synced (as opposed to eth1, where light clients are not light enough in practice to run on phones...) [Vitalik] Q: As an ETH miner, my main concern is how to prep for ETH 2.0. Any wiki, tips, or advice on how to proceed contributing (and profiting) for Ethereum? A: Eth2 has no mining. You may be able to put those GPUs to good use at the application layer with protocols like Golem, or maybe protocols that incentivise GPU-accelerated SNARK proofs. [Justin] Q: Approximately when is ETH issuance supposed to drop dramatically? (I believe the figure I've come accross is 10x reduction in issuance, is this correct also?) A: When the PoW chain starts piggybacking on the PoS chain for security (this could happen during phase 1 or phase 2), it becomes safe to lower the PoW chain reward by maybe ~4x. Further reductions would happen when the PoW chain stops entirely. [Vitalik] Q: During Phase 0, will ETH 2.0 be transferrable between wallets? 2.0 to 2.0? If so, are there concerns exchanges will list ETH 2.0? A: Transfers will probably only go live in Phase 1 at which point exchanges will list ETH2.0. Having exchanges to so will help maintain price-parity between ETH and ETH2.0. [Carl] Q: if block reward is X eth, and it is enough to secure the block, why do we pay X+gas to miners? Will this change? A: In Eth2 the economic security is not a direct function of the block rewards. Instead, it is a function of the total amount at stake. Will this change? Eth2 should have a partial fee burning mechanism (see EIP1559). [Justin] Q: As ETH 2.0 currently stands what are the odds of a uni-directional vs bi-directional 1.x to 2.0 bridge? A: The uni-directional Eth1 -> Eth2 bridge comes with the beacon chain. I'd say it's likely there will be a bi-directional bridge eventually (though unlikely to happen in 2020). Even better than a bi-directional bridge (based on light clients, which comes with non-negligible latency) is native integration of Eth1 into Eth2 (see here). [Justin] Q: Will the issuance rate be enough to incentivize validators given the competition from say DeFi products and will it be changed in the future if needed? A: Compound rates for ETH are ~0.02% AFAIK, so very easy to compete with. The \"do you take 3% interest staking or 6% lending DAI on Compound\" framing is highly misleading, because that 6% is on USD, which is very different to having 3% on ETH. But over time I do expect interest rates on ETH to slide up as more forms of staking become available (eg. channels, Plasma, Truebit, other security deposit games...). [Vitalik] Q: What are the research team's thoughts / plans on if there is extreme price differences between ETH 1.0 and ETH 2.0? I would think arbitrage would solve the issue but haven't thought too deeply on the subject myself. In paticular, if ETH 1.0 coins are worth significantly more causing people to not want to redeem their ETH 2.0 coins because they will instantly take a price hit versus just selling. A: I'm not too worried: Transfers and exchanges can be used to redeploy \"cheap\" Eth2 coins for validation. Large holders (e.g. the EF) can be arbitragers. The greater the price delta, the greater the incentive to deliver a two-way bridge ASAP. [Justin] Q: Is it still the plan that the frequently rotated notaries perform stateless validation of the blocks? If yes, are there any insights into how much extra network overhead will sending blocks with merkle proofs incur? If no, is there any other mechanism to prevent adversaries that can corrupt a shard quickly from applying an invalid state transition? A: Is it still the plan that the frequently rotated notaries perform stateless validation of the blocks? Yep! If yes, are there any insights into how much extra network overhead will sending blocks with merkle proofs incur? Looks like ~10x data (though very low computation, and we expect data to be cheaper than computation). But with techniques like https://ethresear.ch/t/layer-2-state-schemes/5691, even that could potentially be unnecessary. [Vitalik] Is it still the plan that the frequently rotated notaries perform stateless validation of the blocks? Yes. are there any insights into how much extra network overhead will sending blocks with merkle proofs incur? Now that execution engines are application layer, the answer is technically 0 :) For execution engines that use large Merkle trees (e.g. Eth1) the rough estimate at one point was 8x. I'm personally excited for execution engines that do Merkle path \"witness compression\" using SNARKs (proof creation accelerated by GPUs, FPGAs, or even ASICs). [Justin] Q: What is the current design to move Ether tokens on eth1 to eth2? A: That depends on what you mean by \"Ether tokens\". Validators can send a deposit of 32 ETH to the deposit contract which is then transferred to the beacon chain where they can begin validation. For people who wish to transfer their ETH from Eth1->2, that is not something that has been decided upon yet, but there will (probably) exist a dedicated bridge for this purpose (otherwise they can go through the deposit contract). It is still too early to know about ERC20/721 tokens. If Eth2 has an Eth1 execution engine, then it could be pretty painless, but even if not, an ERC20 token could just be transferred by copying over its state root. [Carl] Q: Sorry in advance if my questions are dumb but I didn't follow closely Ethereum 2.0 for couple months. Is there an approximative release date? Concerning staking, how much is needed and do we know for now the rewards? What is the main point in eth2.0 you are the most proud of? Do you feel that the Binance Chain is an enemy to Ethereum? A: Is there an approximative release date? January 3, 2020 at the earliest for phase 0. I'd say Q1 2020 is likely. Concerning staking, how much is needed and do we know for now the rewards? 32 ETH. Rewards depend on the total number of validators, individual validator performance, and the gas markets. I wouldn't be surprised if the typical validator has an annual return around 10%. What is the main point in eth2.0 you are the most proud of? I'm proud to have been able to make a contribution in a beautiful piece of infrastructure I believe will radically change the world in a positive way :) Do you feel that the Binance Chain is an enemy to Ethereum? No. [Justin] Q: When sharding is released, will there just suddenly be 1024 shards in existence, or will there be a small but growing number of shards as usage goes up? Starting with such a high number will leave a lot of unused space/capacity A: All 1024 shards will be launched at once. Growing the number of shards is (probably) unneeded complexity. Shards with lots of unused capacity will have lower gas prices attracting more users. Q: How can the average person help with eth2.0? Donations? Documentation? Are there any organized efforts underway? A: Educating yourself enough to feel comfortable to participate as a validator would be fantastic :) [Justin] Q: After the scaling issues are solved will this be an economical platform to host backend logic on? How will this compare to running your own server or going through a cloud hosting company in terms of cost and ease of use for light or heavy workloads? Personally, my highest anticipated use case is hosting multiplayer matchmaking and signaling, though I haven\u2019t built such a system yet out of concern for difficulty and cost. A: It's unlikely that Eth2 on its will be used as a backend for heavy workloads, the data throughput is likely just too high. That said, it works really well as a dispute resolution layer so a centralised service can run the backend optimistically and if someone disagrees with the execution, they can contest and have it resolved on Eth2. For lighter use-cases it probably can, but this is more in the context of a dapp. [Carl] Q: I was under the assumption that ETH would just update to the new ETH 2.0 chain, no need to swap coins or anything but will this transition from ETH1 to ETH2 cause a fork in the community similar to ETC Ethereum classic and ETH chain? Does the circulating supply of ETH 2.0 depend on how many people 'evolve' their ETH1 tokens to ETH2 tokens? A: ETH would just update to the new ETH 2.0 chain Unfortunately, it is not quite that simple. Eth2 is such a big upgrade over Eth1 that it is easier to implement as an entirely new chain than to upgrade. See Justin's ELI5 here for more . Does the circulating supply of ETH 2.0 depend on how many people 'evolve' their ETH1 tokens to ETH2 tokens? The large majority of it, yes. Rewards are also issued on the Eth2 chain so that increases the supply there too. Ultimately, the expectation is that all Eth1 ETH will be transferred to Eth2. Q: Do you think its worth laying 6 month/1 year/2 year 'ground rules' for Eth 2.0 chain assuming something unexpectedly goes wrong? A: My concern with doing something like this is its inflexibility. It is basically impossible to cover all the possible cases and even if we could, I'd argue that such an approach is too inflexible to handle the intricacies of exactly how something has failed. Handling it on a case-by-case basis seems like a better solution to me. [Carl] Q: Are there any plans to have the ETH 2.0 chain finalize blocks of the ETH 1.0 chain during Phase 0? For example like proposed with Casper, every 100th block will be validated by PoS. A: The integration between Eth1 and Eth2 is a roadmap orthogonal to phases 1, 2, 3 of Eth2. Are there any plans to have the ETH 2.0 chain finalize blocks of the ETH 1.0 chain during Phase 0? My best guess is this will happen in 2021. See here . [Justin] Q: What happens if you send more ETH to the deposit contract? Like 32.1 or 40? A: Nothing is stopping you from sending >32 Eth to the deposit contract, but you'll only receive rewards on the first 32 Eth, so it's not something I'd really recommend. [Carl] That's fine. Your balance will reflect the deposit, and the balance in excess of 32 ETH can be transferred to another validator (phase 1) or to a shard (phase 2). [Justin] Q: What's the easiest set up to stake let's say 320 ETH? A: A laptop should be capable of handling around 10 validators so you should be able to send 10*32 Eth to the deposit contract and start validating on your 1 machine. [Carl] A laptop should be sufficient. We'll know more in a few months when the numbers for block sizes and gas limits of shard blocks get finalized. [Vitalik] Q: What's your opinion on Harmony one's approach to a high scalability smart contract platform using PoS? I read you're involved in discussions with them, have you helped each other in developing code? A: I read you're involved in discussions with them I've had brief VDF discussions with Harmony. have you helped each other in developing code? Don't think so, at least not yet. What's your opinion on Harmony one's approach to a high scalability smart contract platform using PoS? I had a brief look at their whitepaper which seems to be inspired by Ethereum. So I guess my opinion is that their approach to scalability is great :) [Justin] Q: If Eth 2.0 introduces PoS, are there legal hurdles to be clarified upon? Could the token be considered a security token? A: I'm not aware of any jurisdiction that considers ETH on Eth1 a security, and since ETH on Eth2 is basically the same as ETH on Eth1 (other than the temporary technicality of two separate tokens) then ETH on Eth2 should not be a security. [Justin] Q: I'm planning to run a beacon node + N validators. Do you think this will will be able to be managed by a Raspberry Pi 4? I'm aware that it is being worked out to have ARM64 binaries ready soon, the question is if it seems realistic not to have a computer running at home and instead running something smaller and cleaner environmentally speaking like a Pi4. A: That depends on \"N\". I (personally) fully expect a RPi3 to be able to run at least one validator node, but we'll only know this when clients are closer to delivery. [Carl] Q: What are some smaller things that you guys would like an average r/ethtrader community member could help with? A: Educating yourself enough to feel comfortable to participate as a validator would be fantastic :) [Justin] Q: Is there any clarity on the transition process regarding basic aspects like whether Beacon eth can be sold on exchanges for example, and whether the PoW chain knows of the Beacon eth? Better asked, how do you ensure there is one network when there are two chains? A: whether Beacon eth can be sold on exchanges for example Beacon eth will be sellable on exchanges when transfers are enabled in phase 1. whether the PoW chain knows of the Beacon eth? That will come later, see here . how do you ensure there is one network when there are two chains? The long term plan is to natively integrate Eth1 into Eth2. See here . [Justin] Q: Can you explain somewhat precisely how cross sharding communication would work. As in how does shard node A talk to shard node B without going through some sort of intermediary? If they can do this talking, why can't it be used for eth to talk to say bitcoin. A: The intermediary is the beacon chain, or infrastructure optimistically predicting what will eventually get finalised in the beacon chain. [Justin] Q: How would you objectively judge the level of technological advancement of current eth and current bitcoin as far as the very limited function of sending coins from A to B is concerned? A: Eth1 and Bitcoin are comparable for on-chain payments. [Justin] Q: Presuming you agree price drives security, and presuming you agree all cryptos reside in a very competitive environment, are there any plans to address the increased issuance that the Beacon chain would bring? In addition, are there any plans to meet or maybe even surpass bitcoin's coded reduction of new supply to 2% next year. And related, what would you say to the criticisms that have already been expressed whereby if you can reduce issuance by say 10x, you can increase it too. Or asked in a more open question manner, what do you think of this process through which increases or decreases of issuance are made? A: It's possible Eth2 will cause net-negative issuance. The reason is that ETH gets burned via transaction fees. Pushing code to the beacon chain will also burn ETH. Finality, the penalties also burns ETH. [Justin] Q: Will phase 0 contain any scalability improvements? How many transactions per second will Ethereum be able to handle with Sharding? A: Phase 0 will allow for a light client that can give you hashes of the eth1 chain in a fairly lightweight way (but not too lightweight, you'll need ~200kb per 6 minutes to keep up with the committees, this will go down to 200kb per a few days with phase 1). This could be used to allow eg. light clients inside of browsers to work efficiently. That's a kind of scalability improvement, and an underdiscussed one imo. [Vitalik] Phase 0's purpose is tracking validators' states and producing randomness, asking about its scalability is not really meaningful. Regarding Tx/s, the answer is not really known. As a basic calculation, if each shard has the same throughput as Eth1.x, then we'll have 16 * 1024 = 16,384 Tx/s (assuming no inter-shard Txs). That said, the above numbers are kinda meaningless as Eth2 is designed to be used along with L2 scaling solutions like Rollups and OVM which could yield insanely high throughputs. [Carl] Q: Can you address points 2 - 4 in this tweet ? A: The default idea for clocks in eth2 is https://ethresear.ch/t/network-adjusted-timestamps/4187. There has not been that much work done on writing \"policeman\" software that would detect slashable violations by validators and penalize them, but I am not worried about this. Reasons: Even if no one writes the code, that just means the security model degrades to honest majority, which is not the worst One client implementing the code correctly is sufficient If a client implements the code badly, there's no consensus risk, they could just ship with badly written code that only works half the time and it would catch half the slashable violations. I'll defer to Danny on wire protocol stuff. [Vitalik] Point 2: \"Wire protocol\" => This is an implementation detail that I'm sure the implementers will agree upon soon enough :) The high-level recommendation from the research team is to use libp2p as the networking stack (dicv5 for discovery) and SSZ for serialisation. But this cannot enforced at the consensus layer, and we've already seen alternatives (e.g. clients using Whiteblock for networking, and Prysm is using protobufs in some places). Point 3: \"Clients to slash surround votes\" => Not sure what this means. The spec clearly defines the slashing mechanism for surround votes. See is_slashable_attestation_data. Point 4: \"Decentralized network time protocol\" => Just like Eth1, clocking is an implementation detail. It is to an extent decentralised (e.g. there are alternatives to NTP such as GPS, one can choose his/her NTP servers, one can use local clocks, etc.). It would be nice to have something even more robust but this is research territory\u2014not required for launch of Eth2. [Justin] Q: Why aren't Beacon nodes rewarded? Wouldn't this allow the network to be more decentralized? A: Validators are rewarded. Beacon nodes that are not validators are not rewarded in protocol because the protocol can't tell who's a beacon node vs just pretending to be one (eg. via 100 fake nodes pointing to the same real node). Though non-validator nodes may be able to earn money in eth2 through incentivized light client protocols. Q: In regards to the recent proposal of vitalik to use the bcash chain as a short-term scaling solution until eth 2.0 launches: is eth 2.0 still on track? is there a concrete demand for an interim solution? A: The main motivation for proposing an interim solution (if you don't like bitcoin cash for political reasons, I also recommended ethereum classic, I think it's also a good choice) is to make it easier for the work on building these layer 2s to be able to get off the ground in parallel with finalizing the work on the eth2 layer 1 itself. In general, the ethereum community is large, so doing things in parallel is its advantage. [Vitalik] Q: You do not plan to work on the creation of parachain (eth 2.0.) On Polkadot? I don't think EF will have to drive this. Web3/Parity are on it and I believe consider it to be a top priority. The Shasper (Parity) client is written in substrate to help facilitate this happening. [Danny] Q: Pretty basic but what's a realistic estimate of throughput after every is put together? A: Somewhere between 5000 and 500000 TPS depending on what execution environment and transaction type you're using. [Vitalik] Q: Could you say anything about the adoption of Ethereum Blockchain? Are there plans to create something like a B2B team actively approaching \"qualified\" companys? A: I'd say the Ethereum Foundation's primary focus is the consensus layer (research, development, education, maintenance, etc.), more so than the application layer. [Justin]","title":"Part 2"},{"location":"other/ethereum-2.0-ama/#data-questions-with-justin-drake","text":"Q: How much data will there be in Eth2? JD: As the spec currently stands, on average 2.8MB/s across all shards with a \"burst mode\" which is 4x that (i.e. 11.3MB/s). Q: What does this translate into for state size? JD: At the consensus layer block size and state size are basically orthogonal considerations. Consensus-layer state size will always remain very small since we lean heavily on stateless clients. In theory application-layer state (\"L2 state\") can grow up to 2.8MB/s. For execution engines without state rent, you can expect state to grow roughly as fast as Eth1 state grows today. Multiply that by 1024 shards and the situation is possibly not long-term sustainable. This is a significant reason why I personally believe we should progressively launch execution engines (as opposed to allowing anyone to deploy EEs at launch), starting with an EE that has state rent. Q: What role do nodes play (versus validators)? JD: At the consensus layer non-validator nodes don't play any role. At the networking layer they can act as lubricants to relay message. They may also help create blocks for block proposers, i.e. be \"relayers\". Q: Who will run these nodes? JD: Nodes can be run by anyone who wants \"direct\" access to Eth2 (e.g. service providers such as exchanges, etherscan, power users). Relayer nodes may be run by specialised businesses. Q:For someone that needs to run a node (EtherScan), what will the resourcing look like? JD: They will get their data by being nodes and listening on the gossip networks. The bad news is that bandwidth should grow by roughly 1024x to keep track of all shards. But then again, that's not terrible news because a good internet connection (especially server-class) can handle 4 11.2MB/s (the 4 is, say, the gossiping overhead). The good news is that consensus state is minimal (again, stateless clients), which means zero consensus-layer I/O which is currently an Eth1 bottleneck. They can then choose withever EEs and/or dApps it wants to support, i.e. it's opt-in. Q:How do we assume all data is stored and available? JD: For recent blocks we have quite sophisticated infrastructure, including proofs of custody in phase 1 and data availability proofs (possibly phase 2). For historical blocks we rely on the ecosystem to keep them around. Q:What will \"historical blocks\" be needed for. As in, if they were lost forever, what would be messed up? JD: Historical blocks are required to recompute application-layer state, and may also contain application-layer receipts. If they were lost forever (which I don't expect would ever happen) then applications without at least one synced full node may lose user state. Q:Will people congregate on a few shards? JD: Hard to tell. Naive dApp design would suggest that dApps would aggregate into clusters within shard boundaries. We are exploring dApp designs that are somewhat shard-agnostic, i.e. consume data availability from shards as a fungible resource. Q:Quick explanation of cross shard communication and where research is? JD: Cross shard communication is a huge design space, just like \"plasma\" or \"state channels\". At the consensus layer we don't provide much infrastructure beyond crosslinks. I'm expecting significant experimentation in the early days followed by standardisation, somewhat similar to the token transfer design space and the ERC20 standard. One big idea is the concept of \"optimistic crosslink\" which are shared between shards in advance of the real crosslinks, and which with high probability will match the actual crosslinks that get finalised. dApps can use optimistic crosslinks to get super-low cross-shard latency. Q:Why 1024 shards? JD: Because 2048 shards would be stressing the beacon chain and 512 shards would be under-utilising the beacon chain.","title":"Data Questions with Justin Drake"},{"location":"other/ethereum-2.0-ama/#resources","text":"Part 1 Part 2","title":"Resources:"},{"location":"other/ethereum-blog-archive/","text":"Ethereum.org Blog Archive Blog Archive December 2013 Bootstrapping A Decentralized Autonomous Corporation: Part I Bootstrapping An Autonomous Decentralized Corporation, Part 2: Interacting With the World Bootstrapping a Decentralized Autonomous Corporation, Part 3: Identity Corp January 2014 Slasher: A Punitive Proof-of-Stake Algorithm Ethereum: Now Going Public Conference, Alpha Testnet and Ether Pre-sale Updates February 2014 On Transaction Fees, And The Fallacy of Market-Based Solutions Introducing Ethereum Script 2.0 More Thoughts on Scripting and Future-Compatibility Cryptographic Code Obfuscation: Decentralized Autonomous Organizations Are About to Take a Huge Leap Forward Why Not Just Use X? An Instructive Example from Bitcoin Important Statement regarding the Ether pre-sale Ethereum Scalability and Decentralization Updates DAOs Are Not Scary, Part 1: Self-Enforcing Contracts And Factum Law March 2014 DAOs Are Not Scary, Part 2: Reducing Barriers The Question of Mining The Latest EVM: \u201cEthereum Is A Trust-Free Closure System\u201d SchellingCoin: A Minimal-Trust Universal Data Feed April 2014 Pythereum and Serpent Programming Guide The Issuance Model in Ethereum Decentralized Protocol Monetization and Forks May 2014 Serpent upgrades: More Fun Stuff DAOs, DACs, DAs and More: An Incomplete Terminology Guide What is Ethereum? Project, Platform, Fuel, Stack. The Xbox and Ethereum\u2019s Dual Mandate Long-Range Attacks: The Serious Problem With Adaptive Proof of Work On Long-Term Cryptocurrency Distribution Models What If Ethereum Lived on a Treap? Or, Blockchains Charging Rent June 2014 Ethereum Project Update On Mining Advanced Contract Programming Example: SchellingCoin July 2014 On Stake Background on the mechanics of the ether pre-sale Toward a 12-second Block Time the ethereum project: learning to dream with open minds Ethereum and Oracles Launching the Ether Sale Ether Purchase Troubleshooting August 2014 Programming Society with Asm: Gavin Wood at Assembly 2014 Ether Sale: A Statistical Overview Announcement on planned withdrawal from exodus Secret Sharing and Erasure Coding: A Guide for the Aspiring Dropbox Decentralizer building the decentralized web 3.0 An Introduction to Futarchy State of Ethereum: August Edition September 2014 Software and Bounded Rationality crypto renaissance Scalability, Part 1: Building on Top October 2014 Slasher Ghost, and Other Developments in Proof of Stake Gav\u2019s \u00d0\u039eV Update I: Where Ethereum\u2019s at Scalability, Part 2: Hypercubes An Information-Theoretic Account of Secure Brainwallets November 2014 Gav\u2019s Ethereum \u00d0\u039eV Update II Jeff\u2019s Ethereum \u00d0\u039eV Update I Ethereum Community and Adoption Update \u2013 Week 1 The Search for a Stable Cryptocurrency Scalability, Part 3: On Metacoin History and Multichain Gav\u2019s Ethereum \u00d0\u039eV Update III On Bitcoin Maximalism, and Currency and Platform Network Effects Proof of Stake: How I Learned to Love Weak Subjectivity December 2014 From inside Ethereum \u00d0\u039eVhub Berlin \u00d0\u039eVcon-0 Recap Gav\u2019s Ethereum \u00d0\u039eV Update IV Ethereum \u00d0\u039eV: What are we doing? A call to all the bug bounty hunters out there\u2026 Secret Sharing DAOs: The Other Crypto 2.0 On Silos January 2015 Jeff\u2019s Ethereum \u00d0\u039eV Update II Ethereum Community Survey Light Clients and Proof of Stake Superrationality and DAOs The P + epsilon Attack February 2015 The Subjectivity / Exploitability Tradeoff March 2015 Gav\u2019s Ethereum \u00d0\u039eV Update V The Ethereum Launch Process The Ethereum Development Process Getting to the Frontier Mihai\u2019s Ethereum Project Update. The First Year. Jutta\u2019s update on bug bounty program and security audit Ethereum Builders: A Proposed Experiment April 2015 Ethereum\u2019s unexpected future direction Implementing Vitalik\u2019s vision Bazaar Services Blockchain Scalability: Chain-Fibers Redux Ethereum Builders: Tapping Into The Collaborative Potential DEVgrants: Here to Help Ethereum Foundation is hiring an Executive Director Ethereum Foundation Open Call re: Board Selection Visions, Part 1: The Value of Blockchain Technology Visions, Part 2: The Problem of Trust May 2015 The end of the beginning\u2026 Olympic: Frontier Pre-Release Announcing e\u03c0: Ethereum on Raspberry Pi Programme The Business Imperative Behind the Ethereum Vision June 2015 The Problem of Censorship Another Ethereum \u00d0\u039eV Update Ethereum messaging for the masses (including fathers) \u2013 via infographic State Tree Pruning July 2015 On Abstraction How do you know Ethereum is secure? Frontier is coming \u2013 what to expect, and how to prepare Final Steps A few last minute notes\u2026 Ethereum Launches Announcing the New Foundation Board and Executive Director August 2015 Introducing Casper \u201cthe Friendly Ghost\u201d The Thawing Frontier Ethereum Protocol Update 1 On Public and Private Blockchains Security Alert 1 windows+alethzero Chain Reorganisation Depth Expectations An Analysis of the First 100000 Blocks Security alert consensus issue Olympic Rewards Announced On Anti-Pre-Revelation Games Security Advisory Insecurely configured geth can make funds remotely accessible September 2015 devcon one postponed until further notice Security Advisory Implementation bugs in Go and Python clients can cause DoS \u2013 Fixed \u2013 Please update clients Security Alert \u2013 Implementation bug in Go clients causing increase in difficulty \u2013 Fixed \u2013 Miners check and update Go clients A message from Stephan Tual Security Alert \u2013 Previous security patch can lead to invalid state root on Go clients with a specific transaction sequence \u2013 Fixed. Please update. On Slow and Fast Block Times Ethereum Wallet \u2013 Developer Preview Ethereum Comms Announcement DEVcon is back! More uncle statistics The Evolution of Ethereum October 2015 Security Advisory eth (cpp-ethereum) potentially vulnerable if running with UPnP enabled Ethereum Dev Update 2015 / Week 41 Vitalik\u2019s Research and Ecosystem Update Security alert Implementation of BLOCKHASH instruction in C++ and Go clients can potentially cause consensus issue \u2013 Fixed. Please update. Nick Szabo Confirmed as Keynote Speaker of Ethereum\u2019s DEVCON1 Microsoft to Sponsor Ethereum\u2019s DEVCON1 November 2015 Ethereum Dev Update 2015 / Week 44 Stateful Turing-Complete Policies Merkling in Ethereum Applications of Security Deposits and Prediction Markets You Might Not Have Thought About December 2015 Ethereum in practice part 1: how to build your own cryptocurrency without touching a line of code Ethereum in practice part 2: how to build a better democracy in under a 100 lines of code Ethereum in practice part 3: how to build your own transparent bank on the blockchain Understanding Serenity, Part I: Abstraction Understanding Serenity, Part 2: Casper January 2016 Ethereum Foundation Internal Update \u00d0\u039eVgrants Update and New Funding The last Blog Post Privacy on the Blockchain February 2016 Ambients Applied to Ethereum Cut and try: building a dream Ethereum DEV Update: C++ Roadmap BTC Relay included in Ethereum Bounty Program From Smart Contracts to Courts with not so Smart Judges Homestead Release March 2016 Serenity PoC2 An Open Source Mining Pool Bounty and DEVgrant Solidity Available in Visual Studio April 2016 Ethereum Partners with R3CEV on Lizardcoin, Bringing Together the Best of Centralized Finance and Blockchain Technology Ethereum Foundation and Wanxiang Blockchain Labs announce a blockbuster event combining Devcon2 and the 2nd Global Blockchain Summit in Shanghai, September 19\u201324, 2016 May 2016 C++ DEV Update: Announcing Remix On Settlement Finality Security Alert \u2013 Geth suffers from a very low probable DoS attack vector \u2013 Update immediately Security Alert \u2013 cpp-ethereum keeps accounts unlocked June 2016 Go Ethereum\u2019s JIT-EVM Security Alert \u2013 cpp-ethereum\u2019s account unlocking problem not yet fixed Now fixed Smart Contract Security The Ethereum Foundation welcomes Microsoft as the Premiere Sponsor of Devcon2, Shanghai 19-21 September, 2016 CRITICAL UPDATE Re: DAO Vulnerability Thinking About Smart Contract Security Security Alert \u2013 Smart Contract Wallets created in frontier are vulnerable to phishing attacks DAO Wars: Your voice on the soft-fork dilemma Security Alert \u2013 DoS Vulnerability in the Soft Fork July 2016 The Devcon2 site is now live! C++ DEV Update \u2013 July edition Taylor\u2019s Summer Update How to build server less applications for Mist To fork or not to fork Hard Fork Completed Hive: How we strived for a clean fork Onward from the Hard Fork On Inflation, Transaction Fees and Cryptocurrency Monetary Policy September 2016 Dev Update: Formal Methods Security alert \u2013 All geth nodes crash due to an out of memory bug The Ethereum network is currently undergoing a DoS attack Transaction spam attack: Next Steps October 2016 Announcement of imminent hard fork for EIP150 gas cost changes FAQ: Upcoming Ethereum Hard Fork Security Alert \u2013 Mist can be vulnerable when navigating to malicious DApps Uncle Rate and Transaction Fee Analysis November 2016 Security Alert \u2013 Solidity \u2013 Variables can be overwritten in storage Analysis of Storage Corruption Bug Whoa\u2026 Geth 1.5 Hard Fork No. 4: Spurious Dragon From Morden to Ropsten Security alert 11/24/2016: Consensus bug in geth v1.4.19 and v1.5.2 December 2016 Ethereum Research Update zkSNARKs in a nutshell The History of Casper \u2014 Chapter 1 The History of Casper \u2013 Chapter 2 Swarm alpha public pilot and the basics of Swarm Security alert 12/19/2016: Ethereum.org Forums Database Compromised December Roundup January 2017 Introduction of the Light Client for DApp developers An Update on Integrating Zcash on Ethereum (ZoE) February 2017 Ethereum R&D Roundup: Valentine\u2019s Day Edition March 2017 Ethereum JS Ecosystem Updates April 2017 Ethereum Dev Roundup: Q1 Ethereum Dev Roundup: Q1 (Boring Edition) Geth 1.6 \u2013 Puppeth Master May 2017 Solidity optimizer bug Roundup Round III July 2017 Roundup Q2 August 2017 Statement Objecting To EME as a W3C Recommendation Roundup #5 September 2017 Geth 1.7 \u2013 Megara October 2017 Roundup #6 Byzantium HF Announcement November 2017 Devcon3!!! Devcon3 videos available now! December 2017 Security alert \u2014 Chromium vulnerability affecting Mist Browser Beta January 2018 Q4 Roundup Ethereum scalability research and development subsidy programs To Infinity and Beyond! Farewell and Welcome February 2018 Geth 1.8 \u2013 Iceberg\u00b9 March 2018 Announcing Beneficiaries of the Ethereum Foundation Grants April 2018 Announcing World Trade Francs: The Official Ethereum Stablecoin May 2018 Announcing May 2018 Cohort of EF Grants Devcon4 Announcement June 2018 Announcing Swarm Proof-of-Concept Release 3 July 2018 Devcon4 Ticket Sales An Update on Devcon4 Ticket Allocations & Sales Devcon4 Application Deadlines Coming Soon Answers to your top 3 Devcon4 questions Devcon4 Call for Participation! August 2018 Ethereum Foundation Grants Update - Wave III September 2018 Solidity Bugfix Release October 2018 Ethereum Foundation Grants Update - Wave IV Announcing Our dc\u27e0\u0131v Sponsors and Supporters! How the Ethereum Foundation grants program makes decisions December 2018 Devcon4 Videos and Pictures Released! Call for Submissions! DApps Solving Real-World Issues January 2019 Announcing an Ethereum Foundation Grant to Parity Technologies Ethereum Constantinople Upgrade Announcement Security Alert: Ethereum Constantinople Postponement February 2019 Ethereum Foundation Grants Program Wave 5 Ethereum Constantinople/St. Petersburg Upgrade Announcement March 2019 Solidity Optimizer and ABIEncoderV2 Bug April 2019 Beginning a new ethereum.org May 2019 Ethereum Foundation Spring 2019 Update June 2019 Devcon in Osaka: Applications now open! EF-Supported Teams: Development Report Solidity Storage Array Bugs July 2019 Geth v1.9.0 On Wave 1 and Devcon Ticketing Devcon updates: Announcing Wave 2, a New Application window, and more! August 2019 Devcon Tickets: Wave 3 and beyond Translating Ethereum for our Global Community Announcing the Devcon Scholars Program Devcon5 On-Chain Ticket Sale Announcing Ethereum Foundation and Co-Funded Grants September 2019 Live: Devcon5 Final Ticket Appeals Devcon On-Chain Raffle & Auction Participants Development Update #0 - Ethereum.org Eth2 Interop in Review Devcon5 Schedule, Sponsors and Speakers are online NOW! October 2019 The Devcon5 Bible eth2 quick update eth2 quick update no. 2 November 2019 Eth2 at ETHWaterloo: Prizes for Eth2 education, tooling, and research eth2 quick update no. 3 Development Update #1 - Ethereum.org Announcing a Taiwan-specific Wave of Grants Ecosystem Support Program call for applications Ethereum Istanbul Upgrade Announcement eth2 quick update no. 4 Validated: Staking on eth2 #0 December 2019 EF-Supported Teams: Research & Development Update eth2 quick update no. 5 The 1.x Files: a fast-sync eth2 quick update no. 6 The 1.x Files: December call digest Ethereum Muir Glacier Upgrade Announcement The 1.x Files: The State of Stateless Ethereum January 2020 Update on the Vyper Compiler Validated, staking on eth2: #1 - Incentives eth2 quick update no. 7 The 1.x Files: January call digest Archived Comments The Ethereum blog was redesigned at a point in time and historical comments no longer show up on the pages. The old comments can be found here .","title":"Ethereum.org Blog Archive"},{"location":"other/ethereum-blog-archive/#ethereumorg-blog-archive","text":"","title":"Ethereum.org Blog Archive"},{"location":"other/ethereum-blog-archive/#blog-archive","text":"December 2013 Bootstrapping A Decentralized Autonomous Corporation: Part I Bootstrapping An Autonomous Decentralized Corporation, Part 2: Interacting With the World Bootstrapping a Decentralized Autonomous Corporation, Part 3: Identity Corp January 2014 Slasher: A Punitive Proof-of-Stake Algorithm Ethereum: Now Going Public Conference, Alpha Testnet and Ether Pre-sale Updates February 2014 On Transaction Fees, And The Fallacy of Market-Based Solutions Introducing Ethereum Script 2.0 More Thoughts on Scripting and Future-Compatibility Cryptographic Code Obfuscation: Decentralized Autonomous Organizations Are About to Take a Huge Leap Forward Why Not Just Use X? An Instructive Example from Bitcoin Important Statement regarding the Ether pre-sale Ethereum Scalability and Decentralization Updates DAOs Are Not Scary, Part 1: Self-Enforcing Contracts And Factum Law March 2014 DAOs Are Not Scary, Part 2: Reducing Barriers The Question of Mining The Latest EVM: \u201cEthereum Is A Trust-Free Closure System\u201d SchellingCoin: A Minimal-Trust Universal Data Feed April 2014 Pythereum and Serpent Programming Guide The Issuance Model in Ethereum Decentralized Protocol Monetization and Forks May 2014 Serpent upgrades: More Fun Stuff DAOs, DACs, DAs and More: An Incomplete Terminology Guide What is Ethereum? Project, Platform, Fuel, Stack. The Xbox and Ethereum\u2019s Dual Mandate Long-Range Attacks: The Serious Problem With Adaptive Proof of Work On Long-Term Cryptocurrency Distribution Models What If Ethereum Lived on a Treap? Or, Blockchains Charging Rent June 2014 Ethereum Project Update On Mining Advanced Contract Programming Example: SchellingCoin July 2014 On Stake Background on the mechanics of the ether pre-sale Toward a 12-second Block Time the ethereum project: learning to dream with open minds Ethereum and Oracles Launching the Ether Sale Ether Purchase Troubleshooting August 2014 Programming Society with Asm: Gavin Wood at Assembly 2014 Ether Sale: A Statistical Overview Announcement on planned withdrawal from exodus Secret Sharing and Erasure Coding: A Guide for the Aspiring Dropbox Decentralizer building the decentralized web 3.0 An Introduction to Futarchy State of Ethereum: August Edition September 2014 Software and Bounded Rationality crypto renaissance Scalability, Part 1: Building on Top October 2014 Slasher Ghost, and Other Developments in Proof of Stake Gav\u2019s \u00d0\u039eV Update I: Where Ethereum\u2019s at Scalability, Part 2: Hypercubes An Information-Theoretic Account of Secure Brainwallets November 2014 Gav\u2019s Ethereum \u00d0\u039eV Update II Jeff\u2019s Ethereum \u00d0\u039eV Update I Ethereum Community and Adoption Update \u2013 Week 1 The Search for a Stable Cryptocurrency Scalability, Part 3: On Metacoin History and Multichain Gav\u2019s Ethereum \u00d0\u039eV Update III On Bitcoin Maximalism, and Currency and Platform Network Effects Proof of Stake: How I Learned to Love Weak Subjectivity December 2014 From inside Ethereum \u00d0\u039eVhub Berlin \u00d0\u039eVcon-0 Recap Gav\u2019s Ethereum \u00d0\u039eV Update IV Ethereum \u00d0\u039eV: What are we doing? A call to all the bug bounty hunters out there\u2026 Secret Sharing DAOs: The Other Crypto 2.0 On Silos January 2015 Jeff\u2019s Ethereum \u00d0\u039eV Update II Ethereum Community Survey Light Clients and Proof of Stake Superrationality and DAOs The P + epsilon Attack February 2015 The Subjectivity / Exploitability Tradeoff March 2015 Gav\u2019s Ethereum \u00d0\u039eV Update V The Ethereum Launch Process The Ethereum Development Process Getting to the Frontier Mihai\u2019s Ethereum Project Update. The First Year. Jutta\u2019s update on bug bounty program and security audit Ethereum Builders: A Proposed Experiment April 2015 Ethereum\u2019s unexpected future direction Implementing Vitalik\u2019s vision Bazaar Services Blockchain Scalability: Chain-Fibers Redux Ethereum Builders: Tapping Into The Collaborative Potential DEVgrants: Here to Help Ethereum Foundation is hiring an Executive Director Ethereum Foundation Open Call re: Board Selection Visions, Part 1: The Value of Blockchain Technology Visions, Part 2: The Problem of Trust May 2015 The end of the beginning\u2026 Olympic: Frontier Pre-Release Announcing e\u03c0: Ethereum on Raspberry Pi Programme The Business Imperative Behind the Ethereum Vision June 2015 The Problem of Censorship Another Ethereum \u00d0\u039eV Update Ethereum messaging for the masses (including fathers) \u2013 via infographic State Tree Pruning July 2015 On Abstraction How do you know Ethereum is secure? Frontier is coming \u2013 what to expect, and how to prepare Final Steps A few last minute notes\u2026 Ethereum Launches Announcing the New Foundation Board and Executive Director August 2015 Introducing Casper \u201cthe Friendly Ghost\u201d The Thawing Frontier Ethereum Protocol Update 1 On Public and Private Blockchains Security Alert 1 windows+alethzero Chain Reorganisation Depth Expectations An Analysis of the First 100000 Blocks Security alert consensus issue Olympic Rewards Announced On Anti-Pre-Revelation Games Security Advisory Insecurely configured geth can make funds remotely accessible September 2015 devcon one postponed until further notice Security Advisory Implementation bugs in Go and Python clients can cause DoS \u2013 Fixed \u2013 Please update clients Security Alert \u2013 Implementation bug in Go clients causing increase in difficulty \u2013 Fixed \u2013 Miners check and update Go clients A message from Stephan Tual Security Alert \u2013 Previous security patch can lead to invalid state root on Go clients with a specific transaction sequence \u2013 Fixed. Please update. On Slow and Fast Block Times Ethereum Wallet \u2013 Developer Preview Ethereum Comms Announcement DEVcon is back! More uncle statistics The Evolution of Ethereum October 2015 Security Advisory eth (cpp-ethereum) potentially vulnerable if running with UPnP enabled Ethereum Dev Update 2015 / Week 41 Vitalik\u2019s Research and Ecosystem Update Security alert Implementation of BLOCKHASH instruction in C++ and Go clients can potentially cause consensus issue \u2013 Fixed. Please update. Nick Szabo Confirmed as Keynote Speaker of Ethereum\u2019s DEVCON1 Microsoft to Sponsor Ethereum\u2019s DEVCON1 November 2015 Ethereum Dev Update 2015 / Week 44 Stateful Turing-Complete Policies Merkling in Ethereum Applications of Security Deposits and Prediction Markets You Might Not Have Thought About December 2015 Ethereum in practice part 1: how to build your own cryptocurrency without touching a line of code Ethereum in practice part 2: how to build a better democracy in under a 100 lines of code Ethereum in practice part 3: how to build your own transparent bank on the blockchain Understanding Serenity, Part I: Abstraction Understanding Serenity, Part 2: Casper January 2016 Ethereum Foundation Internal Update \u00d0\u039eVgrants Update and New Funding The last Blog Post Privacy on the Blockchain February 2016 Ambients Applied to Ethereum Cut and try: building a dream Ethereum DEV Update: C++ Roadmap BTC Relay included in Ethereum Bounty Program From Smart Contracts to Courts with not so Smart Judges Homestead Release March 2016 Serenity PoC2 An Open Source Mining Pool Bounty and DEVgrant Solidity Available in Visual Studio April 2016 Ethereum Partners with R3CEV on Lizardcoin, Bringing Together the Best of Centralized Finance and Blockchain Technology Ethereum Foundation and Wanxiang Blockchain Labs announce a blockbuster event combining Devcon2 and the 2nd Global Blockchain Summit in Shanghai, September 19\u201324, 2016 May 2016 C++ DEV Update: Announcing Remix On Settlement Finality Security Alert \u2013 Geth suffers from a very low probable DoS attack vector \u2013 Update immediately Security Alert \u2013 cpp-ethereum keeps accounts unlocked June 2016 Go Ethereum\u2019s JIT-EVM Security Alert \u2013 cpp-ethereum\u2019s account unlocking problem not yet fixed Now fixed Smart Contract Security The Ethereum Foundation welcomes Microsoft as the Premiere Sponsor of Devcon2, Shanghai 19-21 September, 2016 CRITICAL UPDATE Re: DAO Vulnerability Thinking About Smart Contract Security Security Alert \u2013 Smart Contract Wallets created in frontier are vulnerable to phishing attacks DAO Wars: Your voice on the soft-fork dilemma Security Alert \u2013 DoS Vulnerability in the Soft Fork July 2016 The Devcon2 site is now live! C++ DEV Update \u2013 July edition Taylor\u2019s Summer Update How to build server less applications for Mist To fork or not to fork Hard Fork Completed Hive: How we strived for a clean fork Onward from the Hard Fork On Inflation, Transaction Fees and Cryptocurrency Monetary Policy September 2016 Dev Update: Formal Methods Security alert \u2013 All geth nodes crash due to an out of memory bug The Ethereum network is currently undergoing a DoS attack Transaction spam attack: Next Steps October 2016 Announcement of imminent hard fork for EIP150 gas cost changes FAQ: Upcoming Ethereum Hard Fork Security Alert \u2013 Mist can be vulnerable when navigating to malicious DApps Uncle Rate and Transaction Fee Analysis November 2016 Security Alert \u2013 Solidity \u2013 Variables can be overwritten in storage Analysis of Storage Corruption Bug Whoa\u2026 Geth 1.5 Hard Fork No. 4: Spurious Dragon From Morden to Ropsten Security alert 11/24/2016: Consensus bug in geth v1.4.19 and v1.5.2 December 2016 Ethereum Research Update zkSNARKs in a nutshell The History of Casper \u2014 Chapter 1 The History of Casper \u2013 Chapter 2 Swarm alpha public pilot and the basics of Swarm Security alert 12/19/2016: Ethereum.org Forums Database Compromised December Roundup January 2017 Introduction of the Light Client for DApp developers An Update on Integrating Zcash on Ethereum (ZoE) February 2017 Ethereum R&D Roundup: Valentine\u2019s Day Edition March 2017 Ethereum JS Ecosystem Updates April 2017 Ethereum Dev Roundup: Q1 Ethereum Dev Roundup: Q1 (Boring Edition) Geth 1.6 \u2013 Puppeth Master May 2017 Solidity optimizer bug Roundup Round III July 2017 Roundup Q2 August 2017 Statement Objecting To EME as a W3C Recommendation Roundup #5 September 2017 Geth 1.7 \u2013 Megara October 2017 Roundup #6 Byzantium HF Announcement November 2017 Devcon3!!! Devcon3 videos available now! December 2017 Security alert \u2014 Chromium vulnerability affecting Mist Browser Beta January 2018 Q4 Roundup Ethereum scalability research and development subsidy programs To Infinity and Beyond! Farewell and Welcome February 2018 Geth 1.8 \u2013 Iceberg\u00b9 March 2018 Announcing Beneficiaries of the Ethereum Foundation Grants April 2018 Announcing World Trade Francs: The Official Ethereum Stablecoin May 2018 Announcing May 2018 Cohort of EF Grants Devcon4 Announcement June 2018 Announcing Swarm Proof-of-Concept Release 3 July 2018 Devcon4 Ticket Sales An Update on Devcon4 Ticket Allocations & Sales Devcon4 Application Deadlines Coming Soon Answers to your top 3 Devcon4 questions Devcon4 Call for Participation! August 2018 Ethereum Foundation Grants Update - Wave III September 2018 Solidity Bugfix Release October 2018 Ethereum Foundation Grants Update - Wave IV Announcing Our dc\u27e0\u0131v Sponsors and Supporters! How the Ethereum Foundation grants program makes decisions December 2018 Devcon4 Videos and Pictures Released! Call for Submissions! DApps Solving Real-World Issues January 2019 Announcing an Ethereum Foundation Grant to Parity Technologies Ethereum Constantinople Upgrade Announcement Security Alert: Ethereum Constantinople Postponement February 2019 Ethereum Foundation Grants Program Wave 5 Ethereum Constantinople/St. Petersburg Upgrade Announcement March 2019 Solidity Optimizer and ABIEncoderV2 Bug April 2019 Beginning a new ethereum.org May 2019 Ethereum Foundation Spring 2019 Update June 2019 Devcon in Osaka: Applications now open! EF-Supported Teams: Development Report Solidity Storage Array Bugs July 2019 Geth v1.9.0 On Wave 1 and Devcon Ticketing Devcon updates: Announcing Wave 2, a New Application window, and more! August 2019 Devcon Tickets: Wave 3 and beyond Translating Ethereum for our Global Community Announcing the Devcon Scholars Program Devcon5 On-Chain Ticket Sale Announcing Ethereum Foundation and Co-Funded Grants September 2019 Live: Devcon5 Final Ticket Appeals Devcon On-Chain Raffle & Auction Participants Development Update #0 - Ethereum.org Eth2 Interop in Review Devcon5 Schedule, Sponsors and Speakers are online NOW! October 2019 The Devcon5 Bible eth2 quick update eth2 quick update no. 2 November 2019 Eth2 at ETHWaterloo: Prizes for Eth2 education, tooling, and research eth2 quick update no. 3 Development Update #1 - Ethereum.org Announcing a Taiwan-specific Wave of Grants Ecosystem Support Program call for applications Ethereum Istanbul Upgrade Announcement eth2 quick update no. 4 Validated: Staking on eth2 #0 December 2019 EF-Supported Teams: Research & Development Update eth2 quick update no. 5 The 1.x Files: a fast-sync eth2 quick update no. 6 The 1.x Files: December call digest Ethereum Muir Glacier Upgrade Announcement The 1.x Files: The State of Stateless Ethereum January 2020 Update on the Vyper Compiler Validated, staking on eth2: #1 - Incentives eth2 quick update no. 7 The 1.x Files: January call digest","title":"Blog Archive"},{"location":"other/ethereum-blog-archive/#archived-comments","text":"The Ethereum blog was redesigned at a point in time and historical comments no longer show up on the pages. The old comments can be found here .","title":"Archived Comments"},{"location":"other/ethereum-branding-kit/","text":"Ethereum Branding Kit The following branding kits are built by the Ethereum community for Ethereum based companies to use on their website and application where necessary. Built on Ethereum These logos should be used on websites of applications or products that are built on Ethereum.","title":"Ethereum Branding Kit"},{"location":"other/ethereum-branding-kit/#ethereum-branding-kit","text":"The following branding kits are built by the Ethereum community for Ethereum based companies to use on their website and application where necessary.","title":"Ethereum Branding Kit"},{"location":"other/ethereum-branding-kit/#built-on-ethereum","text":"These logos should be used on websites of applications or products that are built on Ethereum.","title":"Built on Ethereum"},{"location":"other/grants-process/","text":"Grants Process NOTE: This is a working draft. All the ideas presented below are just that - ideas. We encourage everyone to submit their own ideas and start discussions around what can be done to improve the Grants Process within Ethereum. Summary This document was sparked by a recent Twitter thread where members of the Ethereum community came together to create a document aimed at disscussing ideas for new methods and processes that the Ethereum Foundation and it's community can work on to make the Grants process the best it can be for its recipients. The Discussion Main variables to consider prior to giving the grant Firstly, work should already be in progress. Is the project working towards an achievable goal? The team is recommended to have experience delivering ETH/DLT solutions Teams that are potential recipients of a grant should have a brief initial chat with EF to getting to know them, how they work and what their goals are. There needs to be due diligence to some degree. This also may not be necessary if a project with already completed work can be reviewed publicly. The Community (developer community) should be updated with their progress and kept engaged with learning material etc.. What can the Ethereum Foundation do to make the grants process better? The project\u2019s work should have already begun and the project should disclose what the grant will be used for. Grants should not pay for planning rather for execution. Once the applicant receives a Notice of Grant and the funds have been disbursed, they will continue to work on the project. Visibility into grant decisions and why certain amounts are given From a grantee perspective, when receiving a grant of certain amounts it would be nice to know why this particular amount was granted. It would be helpful for the grant provider to explain WHY the grant was awarded and WHY such an amount. It would also be good to clarify what is expected from the specific grant amount. Also, it would be nice to know what the projects have to do in order to potentially receive a follow-up grant etc.. Implement Checkpoints / Demos The grant recipients are responsible for meeting with the foundation grant team for financial reporting requirements and development updates. Disclosure of funds spent A timeline of use-of-funds should be announced prior to receiving the capital. For example, 2 full-time devs and 2 part-time, 40 hours a week and 20 hours a week respectively. Financial reporting includes: How much was spent each month and what it was for For personal privacy/security, there is no need to disclose how much each person received. An idea of what the rest of the funds will be used for Support/Guidance For funds usage and potential advisory: tips/advice on how to use their grants, such as if they should cash out / convert to Dai in order to cover their operations for X amount of time. Some ideas/options include: i. Multi-Sig where the grant funds are held in Dai/Eth This gives a transparent view of the distribution of funds given out on a monthly basis and to fund consumption progress. Perhaps one funding schedule announced by the team, they then give them funds? Clear usage of funds/transparency. The multi-signature wallet requirement ensures redundancy and prevention from accidental loss or theft of funds. ii. The grants process doesn't need to enforce an ideal situation because if a project is working on DLT tech you should be trying to #hodl crypto and pay your workers in tokens. If the EF transfers USD to a foreign account, the banks are going to take a fat ~5% FX fee/premium. If you're not running on USD and you don't want to hold ETH, the team may find it best to take the ETH and sell it at a local exchange (jurisdiction /legal dependent). For example, DAI is, of course, a solution to the volatility issue, but if you're not in the US you're going to struggle to liquidate it to local currency, plus you're taking a position on USD compared to your local labor. iii. As a grant giver, you may need the developer community or foundation to help out. It is what the project needs - some are self-sufficient and require very little involvement but others may need some hand-holding and need an army of internal/external resources. iv. Mentoring from the funding foundation to help guide the grantee. This would include reporting to the funding foundation on a scheduled basis. Where the mentor can chat with the team about the overall financial status and project performance of the grant project. Product market fit (PMF) - This section is optional/dependant on the project origins Implement regular PMF analysis and identify whether the portfolio company will survive in the long run and then assist them in refining their PMF (if it is not too late). This section is optional/dependant on the project because some grants aren't concerned with market fit. For example, many documentation or research projects aren't going to be valuable in any market. Encourage inter-grantees company partnerships and synergies When a company gets a grant from a foundation, they agree to work together and it should be a win-win partnership. Closeout requirements This process includes a review of the final financial and technical progress from the grantee, the grant lifecycle end. The project is then considered for a follow-up grant or the grant process closes. Resources How the Ethereum Foundation grants program makes decisions Ethereum Fundraising Event Ethereum Foundation Grants Update - The Most Recent Grants Wave","title":"Grants Process"},{"location":"other/grants-process/#grants-process","text":"NOTE: This is a working draft. All the ideas presented below are just that - ideas. We encourage everyone to submit their own ideas and start discussions around what can be done to improve the Grants Process within Ethereum.","title":"Grants Process"},{"location":"other/grants-process/#summary","text":"This document was sparked by a recent Twitter thread where members of the Ethereum community came together to create a document aimed at disscussing ideas for new methods and processes that the Ethereum Foundation and it's community can work on to make the Grants process the best it can be for its recipients.","title":"Summary"},{"location":"other/grants-process/#the-discussion","text":"","title":"The Discussion"},{"location":"other/grants-process/#main-variables-to-consider-prior-to-giving-the-grant","text":"Firstly, work should already be in progress. Is the project working towards an achievable goal? The team is recommended to have experience delivering ETH/DLT solutions Teams that are potential recipients of a grant should have a brief initial chat with EF to getting to know them, how they work and what their goals are. There needs to be due diligence to some degree. This also may not be necessary if a project with already completed work can be reviewed publicly. The Community (developer community) should be updated with their progress and kept engaged with learning material etc..","title":"Main variables to consider prior to giving the grant"},{"location":"other/grants-process/#what-can-the-ethereum-foundation-do-to-make-the-grants-process-better","text":"The project\u2019s work should have already begun and the project should disclose what the grant will be used for. Grants should not pay for planning rather for execution. Once the applicant receives a Notice of Grant and the funds have been disbursed, they will continue to work on the project. Visibility into grant decisions and why certain amounts are given From a grantee perspective, when receiving a grant of certain amounts it would be nice to know why this particular amount was granted. It would be helpful for the grant provider to explain WHY the grant was awarded and WHY such an amount. It would also be good to clarify what is expected from the specific grant amount. Also, it would be nice to know what the projects have to do in order to potentially receive a follow-up grant etc.. Implement Checkpoints / Demos The grant recipients are responsible for meeting with the foundation grant team for financial reporting requirements and development updates. Disclosure of funds spent A timeline of use-of-funds should be announced prior to receiving the capital. For example, 2 full-time devs and 2 part-time, 40 hours a week and 20 hours a week respectively. Financial reporting includes: How much was spent each month and what it was for For personal privacy/security, there is no need to disclose how much each person received. An idea of what the rest of the funds will be used for Support/Guidance For funds usage and potential advisory: tips/advice on how to use their grants, such as if they should cash out / convert to Dai in order to cover their operations for X amount of time. Some ideas/options include: i. Multi-Sig where the grant funds are held in Dai/Eth This gives a transparent view of the distribution of funds given out on a monthly basis and to fund consumption progress. Perhaps one funding schedule announced by the team, they then give them funds? Clear usage of funds/transparency. The multi-signature wallet requirement ensures redundancy and prevention from accidental loss or theft of funds. ii. The grants process doesn't need to enforce an ideal situation because if a project is working on DLT tech you should be trying to #hodl crypto and pay your workers in tokens. If the EF transfers USD to a foreign account, the banks are going to take a fat ~5% FX fee/premium. If you're not running on USD and you don't want to hold ETH, the team may find it best to take the ETH and sell it at a local exchange (jurisdiction /legal dependent). For example, DAI is, of course, a solution to the volatility issue, but if you're not in the US you're going to struggle to liquidate it to local currency, plus you're taking a position on USD compared to your local labor. iii. As a grant giver, you may need the developer community or foundation to help out. It is what the project needs - some are self-sufficient and require very little involvement but others may need some hand-holding and need an army of internal/external resources. iv. Mentoring from the funding foundation to help guide the grantee. This would include reporting to the funding foundation on a scheduled basis. Where the mentor can chat with the team about the overall financial status and project performance of the grant project. Product market fit (PMF) - This section is optional/dependant on the project origins Implement regular PMF analysis and identify whether the portfolio company will survive in the long run and then assist them in refining their PMF (if it is not too late). This section is optional/dependant on the project because some grants aren't concerned with market fit. For example, many documentation or research projects aren't going to be valuable in any market. Encourage inter-grantees company partnerships and synergies When a company gets a grant from a foundation, they agree to work together and it should be a win-win partnership. Closeout requirements This process includes a review of the final financial and technical progress from the grantee, the grant lifecycle end. The project is then considered for a follow-up grant or the grant process closes.","title":"What can the Ethereum Foundation do to make the grants process better?"},{"location":"other/grants-process/#resources","text":"How the Ethereum Foundation grants program makes decisions Ethereum Fundraising Event Ethereum Foundation Grants Update - The Most Recent Grants Wave","title":"Resources"},{"location":"other/internationalization/","text":"Internationalization of EthHub The purpose of Ethereum is to be a decentralized network that is open to anyone to use, build upon, develop, and maintain. Currently, nearly all documentation and resources for Ethereum are written in English. In order for the Ethereum community to become truly global, it needs to become more accessible to those who do not speak English. EthHub can play a vital role in this process. This page was created to plan the roadmap for translating EthHub into multiple languages. How Can I help? Join the EthHub discord and request to join the Internationalization working group Learn to make pull requests from the section above. To translate a page, simply navigate to the branch for your desired language and make a pull request on the page you translate. General plan This plan was the original outline for translating EthHub. Updates to this plan are needed. Target Audiences Spanish Chinese Hindi Arabic Funding Funding would be necessary to incentivize and compensate the translators. Strategy Translating EthHub is going to be no small feat especially when it comes to maintainence. It would be nearly impossible to actively translate every pull request as they are submitted. It makes more sense to create checkpoints or editions for the international versions of EthHub. This would allow us to carefully plan and review the required materials to be included and translated. Formalizing English edition The EthHub community will need to go through the entire site and determine what information needs to be written, edited, and reviewed before it is handed over to the translators. By creating editions instead of sister sites, we won't have to aim for a moving target. It may be appropriate to create a branch of the Github repo dedicated to each edition. Translating into target languages There are two ways we can go about translating the materials: recruit and fund each translation team or place bounties on each page and rely on individual contributions. Place bounties for translating each section After the English edition is finalized, a translation branch could be made for each language and a bounty could be placed for each section or page. Gitcoin bounties would be used to place bounties for translating each EthHub page, page section, and/or graphic. Individual contributors could translate each page and claim the bounty. One downside to this method would be that it would still require editors to oversee each bounty and review that the translation is refined. Recruit and fund translation teams Teams of contributors could be selected and funded to oversee the translation of the entire translation process. Milestones or bounties could be created to distribute the funding. The team members would also review one another's work. Publication and Distribution Since we're going through the effort to formalize editions, we could publish the work. The editions could be published to IPFS We could partner with universities in target regions to distribute digital and/or physical copies Physical copies could potentially be printed and sold to support future editions and new languages","title":"Internationalization"},{"location":"other/internationalization/#internationalization-of-ethhub","text":"The purpose of Ethereum is to be a decentralized network that is open to anyone to use, build upon, develop, and maintain. Currently, nearly all documentation and resources for Ethereum are written in English. In order for the Ethereum community to become truly global, it needs to become more accessible to those who do not speak English. EthHub can play a vital role in this process. This page was created to plan the roadmap for translating EthHub into multiple languages.","title":"Internationalization of EthHub"},{"location":"other/internationalization/#how-can-i-help","text":"Join the EthHub discord and request to join the Internationalization working group Learn to make pull requests from the section above. To translate a page, simply navigate to the branch for your desired language and make a pull request on the page you translate.","title":"How Can I help?"},{"location":"other/internationalization/#general-plan","text":"This plan was the original outline for translating EthHub. Updates to this plan are needed.","title":"General plan"},{"location":"other/internationalization/#target-audiences","text":"Spanish Chinese Hindi Arabic","title":"Target Audiences"},{"location":"other/internationalization/#funding","text":"Funding would be necessary to incentivize and compensate the translators.","title":"Funding"},{"location":"other/internationalization/#strategy","text":"Translating EthHub is going to be no small feat especially when it comes to maintainence. It would be nearly impossible to actively translate every pull request as they are submitted. It makes more sense to create checkpoints or editions for the international versions of EthHub. This would allow us to carefully plan and review the required materials to be included and translated.","title":"Strategy"},{"location":"other/internationalization/#formalizing-english-edition","text":"The EthHub community will need to go through the entire site and determine what information needs to be written, edited, and reviewed before it is handed over to the translators. By creating editions instead of sister sites, we won't have to aim for a moving target. It may be appropriate to create a branch of the Github repo dedicated to each edition.","title":"Formalizing English edition"},{"location":"other/internationalization/#translating-into-target-languages","text":"There are two ways we can go about translating the materials: recruit and fund each translation team or place bounties on each page and rely on individual contributions.","title":"Translating into target languages"},{"location":"other/internationalization/#place-bounties-for-translating-each-section","text":"After the English edition is finalized, a translation branch could be made for each language and a bounty could be placed for each section or page. Gitcoin bounties would be used to place bounties for translating each EthHub page, page section, and/or graphic. Individual contributors could translate each page and claim the bounty. One downside to this method would be that it would still require editors to oversee each bounty and review that the translation is refined.","title":"Place bounties for translating each section"},{"location":"other/internationalization/#recruit-and-fund-translation-teams","text":"Teams of contributors could be selected and funded to oversee the translation of the entire translation process. Milestones or bounties could be created to distribute the funding. The team members would also review one another's work.","title":"Recruit and fund translation teams"},{"location":"other/internationalization/#publication-and-distribution","text":"Since we're going through the effort to formalize editions, we could publish the work. The editions could be published to IPFS We could partner with universities in target regions to distribute digital and/or physical copies Physical copies could potentially be printed and sold to support future editions and new languages","title":"Publication and Distribution"},{"location":"other/funds/0xeap/","text":"0xeap The 0x Ecosystem Acceleration Program gives teams access to a variety of services including funding, dedicated technical support, and recruiting assistance. We created the Ecosystem Acceleration Program to bolster the expansion of both infrastructure projects and relayers building on 0x. Milestone Grants Receive non-dilutive capital ranging from $10,000 to $100,000, with grant sizes awarded based on the quality of your team, vision, execution, and community involvement. Important Links Website: https://0x.org/eap Apply: https://0x.smapply.io/","title":"0xeap"},{"location":"other/funds/0xeap/#0xeap","text":"The 0x Ecosystem Acceleration Program gives teams access to a variety of services including funding, dedicated technical support, and recruiting assistance. We created the Ecosystem Acceleration Program to bolster the expansion of both infrastructure projects and relayers building on 0x.","title":"0xeap"},{"location":"other/funds/0xeap/#milestone-grants","text":"Receive non-dilutive capital ranging from $10,000 to $100,000, with grant sizes awarded based on the quality of your team, vision, execution, and community involvement.","title":"Milestone Grants"},{"location":"other/funds/0xeap/#important-links","text":"Website: https://0x.org/eap Apply: https://0x.smapply.io/","title":"Important Links"},{"location":"other/funds/aragon-nest/","text":"Aragon Nest A grants program to support the development of the ecosystems by aragon and placeholder.vc. Goal The goal of the program is to attract talent to research and build the necessary tooling for developing solutions around Aragon and Ethereum. What we look for Tools for making the ecosystem sustainable, such as open source repositories run by governance tokens using Aragon. Developer tools for building applications on Aragon. Better communication tools for effective governance, possibly using Whisper and other messaging protocols, by having an app which locks an action in time until there has been significant discussion. Complex governance mechanisms with off-chain components, to achieve scalability. Aragon UI developer tools and implementations in different frameworks. Grant sizes Funding: From $50,000 up to $100,000 in ETH, split into chunks paid out over achieved deliverables. Success reward: Up to $50,000 in ANT, given out when all deliverables are ready. Important Links Website: https://github.com/aragon/nest Announcement: https://blog.aragon.org/introducing-aragon-nest-1aa8c91c0566/","title":"Aragon Nest"},{"location":"other/funds/aragon-nest/#aragon-nest","text":"A grants program to support the development of the ecosystems by aragon and placeholder.vc.","title":"Aragon Nest"},{"location":"other/funds/aragon-nest/#goal","text":"The goal of the program is to attract talent to research and build the necessary tooling for developing solutions around Aragon and Ethereum.","title":"Goal"},{"location":"other/funds/aragon-nest/#what-we-look-for","text":"Tools for making the ecosystem sustainable, such as open source repositories run by governance tokens using Aragon. Developer tools for building applications on Aragon. Better communication tools for effective governance, possibly using Whisper and other messaging protocols, by having an app which locks an action in time until there has been significant discussion. Complex governance mechanisms with off-chain components, to achieve scalability. Aragon UI developer tools and implementations in different frameworks.","title":"What we look for"},{"location":"other/funds/aragon-nest/#grant-sizes","text":"Funding: From $50,000 up to $100,000 in ETH, split into chunks paid out over achieved deliverables. Success reward: Up to $50,000 in ANT, given out when all deliverables are ready.","title":"Grant sizes"},{"location":"other/funds/aragon-nest/#important-links","text":"Website: https://github.com/aragon/nest Announcement: https://blog.aragon.org/introducing-aragon-nest-1aa8c91c0566/","title":"Important Links"},{"location":"other/funds/consensys-labs/","text":"Consensys Labs ConsenSys Labs incubates the best teams of Web3 across the globe, providing them capital, mentorship, and access to ConsenSys\u2019s network of top-tier projects and talent. Portfolio adchain Airswap Balance Benefactory Bounties Network BTC Relay Civil code Fund gitcoin gnosis gridplus infura metamask uport Truffle SingularDTV Important Links Website: https://labs.consensys.net/","title":"Consensys Labs"},{"location":"other/funds/consensys-labs/#consensys-labs","text":"ConsenSys Labs incubates the best teams of Web3 across the globe, providing them capital, mentorship, and access to ConsenSys\u2019s network of top-tier projects and talent.","title":"Consensys Labs"},{"location":"other/funds/consensys-labs/#portfolio","text":"adchain Airswap Balance Benefactory Bounties Network BTC Relay Civil code Fund gitcoin gnosis gridplus infura metamask uport Truffle SingularDTV","title":"Portfolio"},{"location":"other/funds/consensys-labs/#important-links","text":"Website: https://labs.consensys.net/","title":"Important Links"},{"location":"other/funds/ecf/","text":"Ethereum Community Fund The Ethereum Community Fund (ECF) is a nonprofit initiative commited to providing financial support and strategic guidance to projects working on various aspects in blockchain: critical infrastructure and research, developer experience and tooling, open source development advocacy, educational initiatives, and responsible community growth. Founding Members Cosmos OmiseGO Golem Web3 Foundation Global Brain MakerDAO Ethereum Foundation Status Members Quantstamp Wireline SpankChain Important Links Website: https://ecf.network Apply: https://ecfnetwork.typeform.com/to/nSA6Id 128 Things to Know When Applying for the Ethereum Community Fund","title":"ECF"},{"location":"other/funds/ecf/#ethereum-community-fund","text":"The Ethereum Community Fund (ECF) is a nonprofit initiative commited to providing financial support and strategic guidance to projects working on various aspects in blockchain: critical infrastructure and research, developer experience and tooling, open source development advocacy, educational initiatives, and responsible community growth.","title":"Ethereum Community Fund"},{"location":"other/funds/ecf/#founding-members","text":"Cosmos OmiseGO Golem Web3 Foundation Global Brain MakerDAO Ethereum Foundation Status","title":"Founding Members"},{"location":"other/funds/ecf/#members","text":"Quantstamp Wireline SpankChain","title":"Members"},{"location":"other/funds/ecf/#important-links","text":"Website: https://ecf.network Apply: https://ecfnetwork.typeform.com/to/nSA6Id 128 Things to Know When Applying for the Ethereum Community Fund","title":"Important Links"},{"location":"other/funds/eth-prize/","text":"ETH Prize ETH Prize is a community research and bounty project that identifies the most critical issues facing the ethereum ecosystem and organizes bounties to solve them. Partners Status TrueBit L4 Web3 Foundation Funding partners 0x Status Ethereum Community Fund Toshi Bounties EthPM Blockscout Important Links Website: http://ethprize.io/","title":"Eth Prize"},{"location":"other/funds/eth-prize/#eth-prize","text":"ETH Prize is a community research and bounty project that identifies the most critical issues facing the ethereum ecosystem and organizes bounties to solve them.","title":"ETH Prize"},{"location":"other/funds/eth-prize/#partners","text":"Status TrueBit L4 Web3 Foundation","title":"Partners"},{"location":"other/funds/eth-prize/#funding-partners","text":"0x Status Ethereum Community Fund Toshi","title":"Funding partners"},{"location":"other/funds/eth-prize/#bounties","text":"EthPM Blockscout","title":"Bounties"},{"location":"other/funds/eth-prize/#important-links","text":"Website: http://ethprize.io/","title":"Important Links"},{"location":"other/funds/geco/","text":"Gnosis Ecosystem Fund The Gnosis Ecosystem Fund empowers teams to drive the global adoption of decentralized applications by leveraging the full potential of Gnosis' products and protocols. What kind of projects are we looking for? The main focus of the grant is to support projects that further the Gnosis ecosystem and our core mission to redistribute the future. Your proposed project should be directly connected to our products and vision. Proposals should focus on: Building on top of one of our platforms Integrating our smart contracts Creating tools/modules/extension for our products Our platforms and potential buidl ideas include: DutchX Gnosis Safe Prediction markets Furthermore, we will also consider projects involved in research and education. What are we offering? Funding (grants of between $5.000 and $100.000) Mentoring Community/Outreach Important Links Website: https://github.com/gnosis/GECO Announcement: https://blog.gnosis.pm/unveiling-the-gnosis-ecosystem-fund-7353926bfb65 Proposal template: https://github.com/gnosis/GECO/blob/master/Proposals/ProposalTemplate.md","title":"Geco"},{"location":"other/funds/geco/#gnosis-ecosystem-fund","text":"The Gnosis Ecosystem Fund empowers teams to drive the global adoption of decentralized applications by leveraging the full potential of Gnosis' products and protocols.","title":"Gnosis Ecosystem Fund"},{"location":"other/funds/geco/#what-kind-of-projects-are-we-looking-for","text":"The main focus of the grant is to support projects that further the Gnosis ecosystem and our core mission to redistribute the future. Your proposed project should be directly connected to our products and vision. Proposals should focus on: Building on top of one of our platforms Integrating our smart contracts Creating tools/modules/extension for our products Our platforms and potential buidl ideas include: DutchX Gnosis Safe Prediction markets Furthermore, we will also consider projects involved in research and education.","title":"What kind of projects are we looking for?"},{"location":"other/funds/geco/#what-are-we-offering","text":"Funding (grants of between $5.000 and $100.000) Mentoring Community/Outreach","title":"What are we offering?"},{"location":"other/funds/geco/#important-links","text":"Website: https://github.com/gnosis/GECO Announcement: https://blog.gnosis.pm/unveiling-the-gnosis-ecosystem-fund-7353926bfb65 Proposal template: https://github.com/gnosis/GECO/blob/master/Proposals/ProposalTemplate.md","title":"Important Links"},{"location":"other/funds/gitcoin/","text":"Gitcoin Grants Fast, easy, and secure way to provide recurring token contributions to the best OSS maintainers in your community. Your contribution is amplified by the signal it provides to other (potentially, larger) funders on important infrastructure projects. Grants utilizes the EIP-1337 standard for subscriptions on Ethereum. The standard makes use of meta-transactions, which allows for a transaction to be made on behalf of a paying subscriber on a recurring basis. This makes it easy to support projects in open source on a recurring basis, only confirming one initial subscription transaction. Important Links Website: https://gitcoin.co/grants/ Announcement: https://medium.com/gitcoin/gitcoin-grants-b91596191c0b","title":"Gitcoin"},{"location":"other/funds/gitcoin/#gitcoin-grants","text":"Fast, easy, and secure way to provide recurring token contributions to the best OSS maintainers in your community. Your contribution is amplified by the signal it provides to other (potentially, larger) funders on important infrastructure projects. Grants utilizes the EIP-1337 standard for subscriptions on Ethereum. The standard makes use of meta-transactions, which allows for a transaction to be made on behalf of a paying subscriber on a recurring basis. This makes it easy to support projects in open source on a recurring basis, only confirming one initial subscription transaction.","title":"Gitcoin Grants"},{"location":"other/funds/gitcoin/#important-links","text":"Website: https://gitcoin.co/grants/ Announcement: https://medium.com/gitcoin/gitcoin-grants-b91596191c0b","title":"Important Links"},{"location":"other/funds/stable-fund/","text":"Stable Fund The Stable Fund is a small to mid-size granting program run by MakerDAO. It is designed to incentivise the third-party Dai ecosystem by disbursing milestone-based grants to teams wishing to build on our financial primitives. Investment We offer equity free grants of up to $50k. What we look for Projects that: use Dai or MakerDao infrastructure as a core component increase Dai adoption add stability to and/or de-risk existing economies open up new markets provide novel, easy to use, solutions solve real problems Important Links Website: https://www.makerdao.com/ Apply: rich@makerdao.com Announcement: https://medium.com/makerdao/announcing-the-makerdao-core-community-development-initiative-d388bfba88e3","title":"Stable Fund"},{"location":"other/funds/stable-fund/#stable-fund","text":"The Stable Fund is a small to mid-size granting program run by MakerDAO. It is designed to incentivise the third-party Dai ecosystem by disbursing milestone-based grants to teams wishing to build on our financial primitives.","title":"Stable Fund"},{"location":"other/funds/stable-fund/#investment","text":"We offer equity free grants of up to $50k.","title":"Investment"},{"location":"other/funds/stable-fund/#what-we-look-for","text":"Projects that: use Dai or MakerDao infrastructure as a core component increase Dai adoption add stability to and/or de-risk existing economies open up new markets provide novel, easy to use, solutions solve real problems","title":"What we look for"},{"location":"other/funds/stable-fund/#important-links","text":"Website: https://www.makerdao.com/ Apply: rich@makerdao.com Announcement: https://medium.com/makerdao/announcing-the-makerdao-core-community-development-initiative-d388bfba88e3","title":"Important Links"},{"location":"other/funds/status-incubate/","text":"Status Incubate Incubating Projects that are Building Web3. Funding Offer standard pre-seed funding in exchange for equity and tokens (where applicable). Funding for later-stage projects is also possible on a case-by-case basis. Important Links Website: https://dev-incubate.status.im/","title":"Status Incubate"},{"location":"other/funds/status-incubate/#status-incubate","text":"Incubating Projects that are Building Web3.","title":"Status Incubate"},{"location":"other/funds/status-incubate/#funding","text":"Offer standard pre-seed funding in exchange for equity and tokens (where applicable). Funding for later-stage projects is also possible on a case-by-case basis.","title":"Funding"},{"location":"other/funds/status-incubate/#important-links","text":"Website: https://dev-incubate.status.im/","title":"Important Links"},{"location":"questions-about-ethereum/if-ethereum-is-open-source-why-cant-it-be-copied/","text":"If Ethereum is open source why can't it be copied? While Ethereum's code is open-source, the actual value of Ethereum is the network of users, developers, and applications using the Ethereum network that give it value. So yes, someone could copy its code, but they would also have to compete with one of the most active community in cryptocurrency.","title":"If Ethereum is open source why can't it be copied?"},{"location":"questions-about-ethereum/if-ethereum-is-open-source-why-cant-it-be-copied/#if-ethereum-is-open-source-why-cant-it-be-copied","text":"While Ethereum's code is open-source, the actual value of Ethereum is the network of users, developers, and applications using the Ethereum network that give it value. So yes, someone could copy its code, but they would also have to compete with one of the most active community in cryptocurrency.","title":"If Ethereum is open source why can't it be copied?"},{"location":"questions-about-ethereum/is-ether-a-security/","text":"Is Ether a security? Answer In the US, the SEC has not issued a formal ruling, but recent comments suggest that they do not believe Ether is a security. Other jurisdictions have not made this distinction clear. Explanation Note: this question answers whether Ether fits the legal definition of a security. In the US, the SEC uses the Howey test to determine whether something can be legally considered a security. The test comes from the Supreme Court ruling in 1946 for SEC v. W.J. Howey Co . It stipulates four criteria: Requires investment of money (fiat currency) Money invested with expectation of profit Invested money goes toward a common enterprise Profit is generated by the efforts of a promoter or third party Ether easily fits the first two criteria. People buy Ether with fiat currency, and many do so with the expectation of profit. However, the second two criteria are more difficult to prove. First, money used to purchase Ether does not necessarily go toward a common enterprise. In its current form, purchased Ether only permits usage of the network, not ownership to an enterprise. This condition may change under Proof-of-Stake given that Ether offers people the ability to earn returns while securing the network. Even so, this feature does not fit cleanly into the traditional definition of a common enterprise. Second, Ethereum does not generate profit, nor does it rely on the efforts of a promoter or third party. Ethereum is a network, not a corporation, so it does not produce identifiable profits beyond the value appreciation of Ether. The value of Ether also originates from open source development. While Vitalik Buterin and the Ethereum Foundation contribute to Ethereum's development, so do many unaffiliated entities and individuals. As such, it is difficult to argue that Ether generates a profit based on efforts of a third party. While the SEC has not formally ruled on the legal status of Ether, comments from regulators in 2018 suggest that they see a compelling case to argue against classifying Ether as a security. Quotes from regulators \"And putting aside the fundraising that accompanied the creation of Ether, based on my understanding of the present state of Ether, the Ethereum network and its decentralized structure, current offers and sales of Ether are not securities transactions. ... Over time, there may be other sufficiently decentralized networks and systems where regulating the tokens or coins that function on them as securities may not be required. And of course there will continue to be systems that rely on central actors whose efforts are a key to the success of the enterprise. In those cases, application of the securities laws protects the investors who purchase the tokens or coins.\" Resources: Howey Test 101 Howey Test Background William Hinman, Director of Corporation Finance of the SEC. June 14, 2018 SEC Press Release","title":"Is Ether a security?"},{"location":"questions-about-ethereum/is-ether-a-security/#is-ether-a-security","text":"","title":"Is Ether a security?"},{"location":"questions-about-ethereum/is-ether-a-security/#answer","text":"In the US, the SEC has not issued a formal ruling, but recent comments suggest that they do not believe Ether is a security. Other jurisdictions have not made this distinction clear.","title":"Answer"},{"location":"questions-about-ethereum/is-ether-a-security/#explanation","text":"Note: this question answers whether Ether fits the legal definition of a security. In the US, the SEC uses the Howey test to determine whether something can be legally considered a security. The test comes from the Supreme Court ruling in 1946 for SEC v. W.J. Howey Co . It stipulates four criteria: Requires investment of money (fiat currency) Money invested with expectation of profit Invested money goes toward a common enterprise Profit is generated by the efforts of a promoter or third party Ether easily fits the first two criteria. People buy Ether with fiat currency, and many do so with the expectation of profit. However, the second two criteria are more difficult to prove. First, money used to purchase Ether does not necessarily go toward a common enterprise. In its current form, purchased Ether only permits usage of the network, not ownership to an enterprise. This condition may change under Proof-of-Stake given that Ether offers people the ability to earn returns while securing the network. Even so, this feature does not fit cleanly into the traditional definition of a common enterprise. Second, Ethereum does not generate profit, nor does it rely on the efforts of a promoter or third party. Ethereum is a network, not a corporation, so it does not produce identifiable profits beyond the value appreciation of Ether. The value of Ether also originates from open source development. While Vitalik Buterin and the Ethereum Foundation contribute to Ethereum's development, so do many unaffiliated entities and individuals. As such, it is difficult to argue that Ether generates a profit based on efforts of a third party. While the SEC has not formally ruled on the legal status of Ether, comments from regulators in 2018 suggest that they see a compelling case to argue against classifying Ether as a security.","title":"Explanation"},{"location":"questions-about-ethereum/is-ether-a-security/#quotes-from-regulators","text":"\"And putting aside the fundraising that accompanied the creation of Ether, based on my understanding of the present state of Ether, the Ethereum network and its decentralized structure, current offers and sales of Ether are not securities transactions. ... Over time, there may be other sufficiently decentralized networks and systems where regulating the tokens or coins that function on them as securities may not be required. And of course there will continue to be systems that rely on central actors whose efforts are a key to the success of the enterprise. In those cases, application of the securities laws protects the investors who purchase the tokens or coins.\"","title":"Quotes from regulators"},{"location":"questions-about-ethereum/is-ether-a-security/#resources","text":"Howey Test 101 Howey Test Background William Hinman, Director of Corporation Finance of the SEC. June 14, 2018 SEC Press Release","title":"Resources:"},{"location":"questions-about-ethereum/is-ether-needed-for-transaction-fees/","text":"Is Ether needed for transaction fees? Answer Yes. Ether is necessary for Ethereum network security and operational efficiency for miners. Explanation The notion that transaction fees on Ethereum can be paid in-protocol by something other than ether (such as an ERC20 token) is called 'economic abstraction'. We explain why the Ethereum protocol is unlikely to integrate economic abstraction below. Economic abstraction is often used to argue that the value of Ether will go to 0. The theory is that users could pay their transaction costs to miners in something other than Ether. Therefore, if that becomes rampant, Ether itself would have no value. This argument can be used on any Proof-of-Work blockchain, it's an especially popular criticism against Ethereum since it appears easy to create additional ERC20 tokens that can be exchanged for Ether. Quick recap on how transactions work on Ethereum. Each transaction uses a set amount of gas. Users pay miners to include their transaction using a gas price. Gas * Gas Price = transaction cost. The base protocol assumes gas price in ETH and every wallet calculates transaction cost in total ETH to pay. The argument against ETH value begins here. It says that users could pay their transaction cost in some currency or token instead of Ether, including digital USD. Miners could then directly sell tokens or currency into the currency of their choice. While rebuilding Ethereum to accept multiple currencies (even USD) is theoretically possible, this argument ignores how digital native tokens like Ether or Bitcoin act as a layer of security for the system. Tokens like Ether reduce the profitability of network hacks by tying network security to the value of the network's medium of exchange. If network security gets hit, so does the value of the token transacted on the network. Imagine a rogue miner on Ethereum gathers enough computing power to successfully 51% attack the network and divert the network's currency to a personal account. If the currency's value isn't tied to network security (say, USD), the hacker could easily sell these proceeds at full value in reasonably liquid markets. This cannot happen with Ether. Other miners would see this behavior immediately and make it known to relevant markets for Ether. As a result, not only would prices for Ether drop, Ether would also become highly illiquid, making it difficult for the hacker to make off with the pre-hack market value of the stolen Ether. This argument applies for any decentralized blockchain, including Bitcoin. Practically speaking, paying with multiple currencies also adds friction, cost, and a UX nightmare to the operations of a miner. It would have to go through the following process: Open communication with a miner Manually calc the cost of the tx in that tokens value Send miner payment & wait for confirm Execute initial TX and get the nonce Tell the miner the nonce and wait for his next block On top of the added friction to users mentioned above, there is an added cost to users to pay for their transaction in something other than ETH. Sending ETH in a transaction costs 21000 gas while sending tokens costs 40000 gas or more. Calculating gas cost and understanding the gas market is no easy task. Wallets have spent years making this UX smooth. There is no incentive for a wallet to streamline the payment of gas in tokens as the complexities are deep. Now let's talk about miners. Miners are trying to make a profit and have to pay for hardware/electricity costs. They do not want to have a portfolio of 50 different cryptocurrencies with wild volatility and no liquidity. This creates an operational nightmare. As mentioned, this is possible on all PoW chains. Bitcoin even has a tool that enables users to pay for transaction speed in payments other than BTC http://confirmtx.com . However, because of the arguments above, it's not rampant in BTC or ETH because it violates core security assumptions and has extreme practical limitations for miners. Resources: Eric Conners Twitter Thread Vitalik Buterins Comment on Economic Abstraction","title":"Is Ether needed for transaction fees?"},{"location":"questions-about-ethereum/is-ether-needed-for-transaction-fees/#is-ether-needed-for-transaction-fees","text":"","title":"Is Ether needed for transaction fees?"},{"location":"questions-about-ethereum/is-ether-needed-for-transaction-fees/#answer","text":"Yes. Ether is necessary for Ethereum network security and operational efficiency for miners.","title":"Answer"},{"location":"questions-about-ethereum/is-ether-needed-for-transaction-fees/#explanation","text":"The notion that transaction fees on Ethereum can be paid in-protocol by something other than ether (such as an ERC20 token) is called 'economic abstraction'. We explain why the Ethereum protocol is unlikely to integrate economic abstraction below. Economic abstraction is often used to argue that the value of Ether will go to 0. The theory is that users could pay their transaction costs to miners in something other than Ether. Therefore, if that becomes rampant, Ether itself would have no value. This argument can be used on any Proof-of-Work blockchain, it's an especially popular criticism against Ethereum since it appears easy to create additional ERC20 tokens that can be exchanged for Ether. Quick recap on how transactions work on Ethereum. Each transaction uses a set amount of gas. Users pay miners to include their transaction using a gas price. Gas * Gas Price = transaction cost. The base protocol assumes gas price in ETH and every wallet calculates transaction cost in total ETH to pay. The argument against ETH value begins here. It says that users could pay their transaction cost in some currency or token instead of Ether, including digital USD. Miners could then directly sell tokens or currency into the currency of their choice. While rebuilding Ethereum to accept multiple currencies (even USD) is theoretically possible, this argument ignores how digital native tokens like Ether or Bitcoin act as a layer of security for the system. Tokens like Ether reduce the profitability of network hacks by tying network security to the value of the network's medium of exchange. If network security gets hit, so does the value of the token transacted on the network. Imagine a rogue miner on Ethereum gathers enough computing power to successfully 51% attack the network and divert the network's currency to a personal account. If the currency's value isn't tied to network security (say, USD), the hacker could easily sell these proceeds at full value in reasonably liquid markets. This cannot happen with Ether. Other miners would see this behavior immediately and make it known to relevant markets for Ether. As a result, not only would prices for Ether drop, Ether would also become highly illiquid, making it difficult for the hacker to make off with the pre-hack market value of the stolen Ether. This argument applies for any decentralized blockchain, including Bitcoin. Practically speaking, paying with multiple currencies also adds friction, cost, and a UX nightmare to the operations of a miner. It would have to go through the following process: Open communication with a miner Manually calc the cost of the tx in that tokens value Send miner payment & wait for confirm Execute initial TX and get the nonce Tell the miner the nonce and wait for his next block On top of the added friction to users mentioned above, there is an added cost to users to pay for their transaction in something other than ETH. Sending ETH in a transaction costs 21000 gas while sending tokens costs 40000 gas or more. Calculating gas cost and understanding the gas market is no easy task. Wallets have spent years making this UX smooth. There is no incentive for a wallet to streamline the payment of gas in tokens as the complexities are deep. Now let's talk about miners. Miners are trying to make a profit and have to pay for hardware/electricity costs. They do not want to have a portfolio of 50 different cryptocurrencies with wild volatility and no liquidity. This creates an operational nightmare. As mentioned, this is possible on all PoW chains. Bitcoin even has a tool that enables users to pay for transaction speed in payments other than BTC http://confirmtx.com . However, because of the arguments above, it's not rampant in BTC or ETH because it violates core security assumptions and has extreme practical limitations for miners.","title":"Explanation"},{"location":"questions-about-ethereum/is-ether-needed-for-transaction-fees/#resources","text":"Eric Conners Twitter Thread Vitalik Buterins Comment on Economic Abstraction","title":"Resources:"},{"location":"questions-about-ethereum/is-ethereum-immutable/","text":"Is Ethereum Immutable? Yes, transactions and data stored within the Ethereum blockchain are immutable. Immutability and The DAO Hard Fork Hard forks do not affect immutability because the data is still accessible and unchanged on the original chain. In the event of a fork, users have the choice to use either fork. Users form a social consensus around which chain is worth using and supporting in the event of a fork. A forked chain is simply a new blockchain with different consensus rules that is entirely immutable according to its ruleset. \"As a trivial example, the only thing the DAO fork did was insert a set of value transfers from one account to another, but that still has the result that transactions (by the attacker) that would have succeeded will now fail with insufficient funds. Likewise, you can construct transactions that will fail with the new changes to gas costs, or that will succeed if a null account exists but fail if it doesn't. 'Immutability' is overused and under-specified. Strictly speaking, it should mean only that the blockchain - the set of past transactions - is not modified, which no Ethereum fork has ever done. But people use it for a much vaguer and harder to define principle of not violating their expectations.\" - Nick Johnson [1]. Important Links Reddit thread on Immutability","title":"Is Ethereum immutable?"},{"location":"questions-about-ethereum/is-ethereum-immutable/#is-ethereum-immutable","text":"Yes, transactions and data stored within the Ethereum blockchain are immutable.","title":"Is Ethereum Immutable?"},{"location":"questions-about-ethereum/is-ethereum-immutable/#immutability-and-the-dao-hard-fork","text":"Hard forks do not affect immutability because the data is still accessible and unchanged on the original chain. In the event of a fork, users have the choice to use either fork. Users form a social consensus around which chain is worth using and supporting in the event of a fork. A forked chain is simply a new blockchain with different consensus rules that is entirely immutable according to its ruleset. \"As a trivial example, the only thing the DAO fork did was insert a set of value transfers from one account to another, but that still has the result that transactions (by the attacker) that would have succeeded will now fail with insufficient funds. Likewise, you can construct transactions that will fail with the new changes to gas costs, or that will succeed if a null account exists but fail if it doesn't. 'Immutability' is overused and under-specified. Strictly speaking, it should mean only that the blockchain - the set of past transactions - is not modified, which no Ethereum fork has ever done. But people use it for a much vaguer and harder to define principle of not violating their expectations.\" - Nick Johnson [1].","title":"Immutability and The DAO Hard Fork"},{"location":"questions-about-ethereum/is-ethereum-immutable/#important-links","text":"Reddit thread on Immutability","title":"Important Links"},{"location":"questions-about-ethereum/is-ethereum-more-expensive-to-use-as-price-rises/","text":"Is Ethereum more expensive to use as price rises? Answer No, the Ethereum fee market is independent of fiat prices. Explanation Basics of a transaction There are many concepts to understand when diving into the answer to this question. First, it's essential to understand how an Ethereum transaction works. As explained in the gas section , every transaction that occurs on the network requires a set amount of gas, which is a unit used to measure the computational power required to process the transaction. To process a transaction and include it in a block, miners expect to be compensated. This is accomplished by setting a gas price with every transaction, which is the cost of 1 unit of gas, denominated in Gwei (1 ETH = 1,000,000,000 Gwei). For example, when you simply send ETH from one account to another, this cost 21000 gas. If you were to set a gas price of 1 Gwei, this transaction would cost 0.000021 ETH. Fee market Currently, the Ethereum network is working at or near capacity. This means that a fee market is created because some users may be willing to pay more to get to the front of the line while others may not be in as big of a rush. Tools such as EthGasStation offer a great view into the current fee market and what it current costs to get a basic or fast transaction through. You'll notice that so far, we haven't talked about fiat or the cost of a transaction in fiat value. That's because at its core, the fee market is independent from the cost of Ether. Users have the ability to send a transaction from 0 gas price all the way to as high as they'd like and miners have the ability to accept the same range. Rising and falling Ether price While the gas market by design is purely Ether related, it'd be misleading to not acknowledge that a lot of users and miners think of their fees in fiat terms. So while the above example may have cost 0.000021 ETH, some users will instead think of that in terms of fiat cost ($0.002793 for instance). This means that the fee market, while independent of fiat prices at its core, will react to moves in Ether prices. If we use the example above and assume price spikes 5x, all of a sudden that transaction will cost $0.0139 in fiat terms. When price spikes (assuming network demand stays the same), users will start to lower their gas price. When price falls (assuming network demand stays the same), miners will start to raise their minimum accepted gas. We can see the fluctuation in average gas price in the past. Network demand As previously mentioned, network demand plays a much larger role on gas price than Ether price. If no one was using the network, gas prices paid would be near 0. If the network is full, gas prices will start to spike. This is an important consideration when trying to draw conclusions between Ether price and gas prices paid.","title":"Is Ethereum more expensive to use as price rises?"},{"location":"questions-about-ethereum/is-ethereum-more-expensive-to-use-as-price-rises/#is-ethereum-more-expensive-to-use-as-price-rises","text":"","title":"Is Ethereum more expensive to use as price rises?"},{"location":"questions-about-ethereum/is-ethereum-more-expensive-to-use-as-price-rises/#answer","text":"No, the Ethereum fee market is independent of fiat prices.","title":"Answer  "},{"location":"questions-about-ethereum/is-ethereum-more-expensive-to-use-as-price-rises/#explanation","text":"","title":"Explanation  "},{"location":"questions-about-ethereum/is-ethereum-more-expensive-to-use-as-price-rises/#basics-of-a-transaction","text":"There are many concepts to understand when diving into the answer to this question. First, it's essential to understand how an Ethereum transaction works. As explained in the gas section , every transaction that occurs on the network requires a set amount of gas, which is a unit used to measure the computational power required to process the transaction. To process a transaction and include it in a block, miners expect to be compensated. This is accomplished by setting a gas price with every transaction, which is the cost of 1 unit of gas, denominated in Gwei (1 ETH = 1,000,000,000 Gwei). For example, when you simply send ETH from one account to another, this cost 21000 gas. If you were to set a gas price of 1 Gwei, this transaction would cost 0.000021 ETH.","title":"Basics of a transaction  "},{"location":"questions-about-ethereum/is-ethereum-more-expensive-to-use-as-price-rises/#fee-market","text":"Currently, the Ethereum network is working at or near capacity. This means that a fee market is created because some users may be willing to pay more to get to the front of the line while others may not be in as big of a rush. Tools such as EthGasStation offer a great view into the current fee market and what it current costs to get a basic or fast transaction through. You'll notice that so far, we haven't talked about fiat or the cost of a transaction in fiat value. That's because at its core, the fee market is independent from the cost of Ether. Users have the ability to send a transaction from 0 gas price all the way to as high as they'd like and miners have the ability to accept the same range.","title":"Fee market  "},{"location":"questions-about-ethereum/is-ethereum-more-expensive-to-use-as-price-rises/#rising-and-falling-ether-price","text":"While the gas market by design is purely Ether related, it'd be misleading to not acknowledge that a lot of users and miners think of their fees in fiat terms. So while the above example may have cost 0.000021 ETH, some users will instead think of that in terms of fiat cost ($0.002793 for instance). This means that the fee market, while independent of fiat prices at its core, will react to moves in Ether prices. If we use the example above and assume price spikes 5x, all of a sudden that transaction will cost $0.0139 in fiat terms. When price spikes (assuming network demand stays the same), users will start to lower their gas price. When price falls (assuming network demand stays the same), miners will start to raise their minimum accepted gas. We can see the fluctuation in average gas price in the past.","title":"Rising and falling Ether price   "},{"location":"questions-about-ethereum/is-ethereum-more-expensive-to-use-as-price-rises/#network-demand","text":"As previously mentioned, network demand plays a much larger role on gas price than Ether price. If no one was using the network, gas prices paid would be near 0. If the network is full, gas prices will start to spike. This is an important consideration when trying to draw conclusions between Ether price and gas prices paid.","title":"Network demand  "},{"location":"questions-about-ethereum/is-ethereum-over-1tb-in-size/","text":"Is Ethereum over 1TB in size? Answer No. Please check here for the latest size. Explanation As Afri Schoedon points out in his article , the Ethereum state is what is bloated, not the chain. So what sync mode should you run to get a full Ethereum blockchain with all necessary security? Both Parity and Geth offer options which synchronize a full node starting at the genesis block and executing all transactions. The modes are: parity --no-warp geth --syncmode full These are full nodes because they: Sync the full chain from genesis block Replay all transactions Execute all contracts Recompute the state of each block Keep all historical blocks on disk Keep the most recent state and prunes ancient states When running the full node described above, you are able to rebuild any historical information you want using just your node. There is often much confusion around if a state pruned Ethereum node (above) is a full node and the answer is yes. Pruning ancient state is fine as it is not necessary to most users. If you are looking to run a block explorer or do deep analysis on the blockchain, then you could run an archive node with no pruning so you don't have to always recompute the pruned state. Also note that you can run both Geth and Parity by default (warp and fast sync enabled) and you'll be able to serve the network as a full node after initial sync.","title":"Is Ethereum over 1TB in size?"},{"location":"questions-about-ethereum/is-ethereum-over-1tb-in-size/#is-ethereum-over-1tb-in-size","text":"","title":"Is Ethereum over 1TB in size?"},{"location":"questions-about-ethereum/is-ethereum-over-1tb-in-size/#answer","text":"No. Please check here for the latest size.","title":"Answer"},{"location":"questions-about-ethereum/is-ethereum-over-1tb-in-size/#explanation","text":"As Afri Schoedon points out in his article , the Ethereum state is what is bloated, not the chain. So what sync mode should you run to get a full Ethereum blockchain with all necessary security? Both Parity and Geth offer options which synchronize a full node starting at the genesis block and executing all transactions. The modes are: parity --no-warp geth --syncmode full These are full nodes because they: Sync the full chain from genesis block Replay all transactions Execute all contracts Recompute the state of each block Keep all historical blocks on disk Keep the most recent state and prunes ancient states When running the full node described above, you are able to rebuild any historical information you want using just your node. There is often much confusion around if a state pruned Ethereum node (above) is a full node and the answer is yes. Pruning ancient state is fine as it is not necessary to most users. If you are looking to run a block explorer or do deep analysis on the blockchain, then you could run an archive node with no pruning so you don't have to always recompute the pruned state. Also note that you can run both Geth and Parity by default (warp and fast sync enabled) and you'll be able to serve the network as a full node after initial sync.","title":"Explanation"},{"location":"questions-about-ethereum/what-is-the-difficulty-bomb/","text":"What is the Ethereum Difficulty Bomb (Ice Age)? Summary Ethereum's \"Difficulty Bomb\" refers to a mechanism that, at a predefined block number, increases the difficulty level of puzzles in the Proof of Work mining algorithm resulting in longer than normal block times (and thus less ETH rewards for miners). This mechanism increases the difficulty exponentially over time and eventually leads to what is referred to as the \"Ice Age\" - that is, the chain becomes so difficult to mine that it grinds to a halt and stops producing blocks (freezes). Why the Difficulty Bomb Exists The Difficulty Bomb was originally put in place for a variety of reasons: To act as a deterrant for miners who wish to continue mining the Ethereum 1.0 (Proof of Work) chain once the network moved fully to the Ethereum 2.0 (Proof of Stake) chain To ensure that the core developers of Ethereum 1.0 are \"forced\" to upgrade the network via a hard fork (if only to delay the effects of the bomb) so that the network does not stagnate innovation-wise Technical Details of the Difficulty Bomb Work in progress. Effects of the Difficulty Bomb The effect of the Difficulty Bomb is easily seen in the 'Ethereum Block Time History' chart from Etherscan (you'll notice that it is a step-function that increases block times the longer that it exists on the chain). Is the Difficulty Bomb Still Necessary? There is an open debate as to whether the Difficulty Bomb is still required because Ethereum 2.0 is now being deployed as a seperate blockchain (instead of a direct upgrade to the Ethereum 1.0 chain) and the bomb has been delayed without any fanfare in both the Byzantine and Constantinople network upgrades. Resources Investopedia","title":"What is the Ethereum difficulty bomb (Ice Age)?"},{"location":"questions-about-ethereum/what-is-the-difficulty-bomb/#what-is-the-ethereum-difficulty-bomb-ice-age","text":"","title":"What is the Ethereum Difficulty Bomb (Ice Age)?"},{"location":"questions-about-ethereum/what-is-the-difficulty-bomb/#summary","text":"Ethereum's \"Difficulty Bomb\" refers to a mechanism that, at a predefined block number, increases the difficulty level of puzzles in the Proof of Work mining algorithm resulting in longer than normal block times (and thus less ETH rewards for miners). This mechanism increases the difficulty exponentially over time and eventually leads to what is referred to as the \"Ice Age\" - that is, the chain becomes so difficult to mine that it grinds to a halt and stops producing blocks (freezes).","title":"Summary"},{"location":"questions-about-ethereum/what-is-the-difficulty-bomb/#why-the-difficulty-bomb-exists","text":"The Difficulty Bomb was originally put in place for a variety of reasons: To act as a deterrant for miners who wish to continue mining the Ethereum 1.0 (Proof of Work) chain once the network moved fully to the Ethereum 2.0 (Proof of Stake) chain To ensure that the core developers of Ethereum 1.0 are \"forced\" to upgrade the network via a hard fork (if only to delay the effects of the bomb) so that the network does not stagnate innovation-wise","title":"Why the Difficulty Bomb Exists"},{"location":"questions-about-ethereum/what-is-the-difficulty-bomb/#technical-details-of-the-difficulty-bomb","text":"Work in progress.","title":"Technical Details of the Difficulty Bomb"},{"location":"questions-about-ethereum/what-is-the-difficulty-bomb/#effects-of-the-difficulty-bomb","text":"The effect of the Difficulty Bomb is easily seen in the 'Ethereum Block Time History' chart from Etherscan (you'll notice that it is a step-function that increases block times the longer that it exists on the chain).","title":"Effects of the Difficulty Bomb"},{"location":"questions-about-ethereum/what-is-the-difficulty-bomb/#is-the-difficulty-bomb-still-necessary","text":"There is an open debate as to whether the Difficulty Bomb is still required because Ethereum 2.0 is now being deployed as a seperate blockchain (instead of a direct upgrade to the Ethereum 1.0 chain) and the bomb has been delayed without any fanfare in both the Byzantine and Constantinople network upgrades.","title":"Is the Difficulty Bomb Still Necessary?"},{"location":"questions-about-ethereum/what-is-the-difficulty-bomb/#resources","text":"Investopedia","title":"Resources"},{"location":"questions-about-ethereum/why-do-you-have-to-pay-to-use-ethereum/","text":"Why do you have to pay to use Ethereum? Answer Every transaction that occurs on the Ethereum network requires computational resources. Miners must be incentivized to process these transactions and create blocks, therefore users pay a small fee per transaction for this. Explanation While some blockchains boast that they are \"free\" they are simply obfuscating the real cost of the transactions on the network. A \"free\" blockchain may not charge the user for the transaction fees directly via gas but they do usually require users to pay fees in a variety of indirect ways. Examples of this would include smart contract owners paying the fees and passing them onto the user through the function of the contract, requiring users or dapp owners to lock funds for bandwidth or through inflation by paying a set of block producers.","title":"Why do you have to pay to use Ethereum?"},{"location":"questions-about-ethereum/why-do-you-have-to-pay-to-use-ethereum/#why-do-you-have-to-pay-to-use-ethereum","text":"","title":"Why do you have to pay to use Ethereum?"},{"location":"questions-about-ethereum/why-do-you-have-to-pay-to-use-ethereum/#answer","text":"Every transaction that occurs on the Ethereum network requires computational resources. Miners must be incentivized to process these transactions and create blocks, therefore users pay a small fee per transaction for this.","title":"Answer"},{"location":"questions-about-ethereum/why-do-you-have-to-pay-to-use-ethereum/#explanation","text":"While some blockchains boast that they are \"free\" they are simply obfuscating the real cost of the transactions on the network. A \"free\" blockchain may not charge the user for the transaction fees directly via gas but they do usually require users to pay fees in a variety of indirect ways. Examples of this would include smart contract owners paying the fees and passing them onto the user through the function of the contract, requiring users or dapp owners to lock funds for bandwidth or through inflation by paying a set of block producers.","title":"Explanation"}]}